<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<scope>
<attribute name="vse-vse">vse-vse</attribute>
<attribute name="total-results" value="1" />
<attribute name="stem" value="depluralize" />
<attribute name="stem2" value="none" />
<attribute name="stoplist" value="none" />
<attribute name="search-ms" value="4" />
<attribute name="retrieval-ms" value="1" />
<attribute name="cache-hits-content-search" value="0" />
<attribute name="cache-misses-content-search" value="0" />
<attribute name="cache-hits-word" value="2" />
<attribute name="cache-misses-word" value="0" />
<attribute name="cache-hits-content-retrieval" value="0" />
<attribute name="cache-misses-content-retrieval" value="0" />
<attribute name="cache-hits-text" value="20" />
<attribute name="cache-misses-text" value="0" />
<attribute name="total-results-with-duplicates" value="1" />
<document url="http://eroom7/eRoom/vivisimo/eroomtest/0_9cc"
  vse-key="eroom://192.168.0.64:80/vivisimo/?room=eroomtest&amp;id=0_9cc"
  filetype="pdf" position="2" la-score="0.0682333" vse-base-score="2.99707"
>
  <content name="title" output-action="bold" weight="3" u="7">Doucumentum Foundation Classes Development Guide</content>
  <content name="title" action="cluster" weight="3" u="28421">DFC_53_SP2_development.pdf</content>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1.5">
      <content name="snippet" weight="1" output-action="summarize" u="13"
        v="28376"
      />
      <pre u="18933" v="18952">cache. This provides&lt;br/>backup if the application loses its connection to the repository containing the global&lt;br/>registry.&lt;/span> &lt;/div>&lt;div> &lt;span>&lt;b>Service based objects (</pre>
      <match u="18953" v="18953"><![CDATA[SBOs)</b></span> </div><div> <span>]]></match>
      <post u="18954" v="18973"><![CDATA[This section contains the following main sections:</span> </div><div> <span>•</span> </div><div> <span>SBO introduction, page 83</span> </div><div> <span>•</span> </div><div> <span>SBO architecture, page 84</span> </div><div> <span>•</span> </div><div> <span>Implementing SBOs, page 84</span> </div><div> <span>•</span> </div><div> <span>Calling ]]></post>
    </solution>
    <solution rank="1" score="1.5">
      <content name="snippet" weight="1" output-action="summarize" u="13"
        v="28376"
      />
      <pre u="18967" v="18986"><![CDATA[page 84</span> </div><div> <span>•</span> </div><div> <span>Implementing SBOs, page 84</span> </div><div> <span>•</span> </div><div> <span>Calling SBOs, page 99</span> </div><div> <span>•</span> </div><div> <span>SBO Error Handling, page 90</span> </div><div> <span>•</span> </div><div> <span>SBO Best Practices, page 90</span> </div><div> <span><b>]]></pre>
      <match u="18987" v="18987">SBO </match>
      <post u="18988" v="19007">introduction&lt;/b>&lt;/span> &lt;/div>&lt;div> &lt;span>A  service based object  (SBO) is a type of module designed to enable developers to access&lt;br/>Documentum functionality by </post>
    </solution>
    <solution rank="2" score="1.5">
      <content name="snippet" weight="1" output-action="summarize" u="13"
        v="28376"
      />
      <pre u="19153" v="19172"><![CDATA[the SBO can obtain and release repository sessions dynamically as needed.</span> </div><div> <span>SBOs are the basis for the web services framework.</span> </div><div> <span><b>]]></pre>
      <match u="19173" v="19173">SBO </match>
      <post u="19174" v="19193">architecture&lt;/b>&lt;/span> &lt;/div>&lt;div> &lt;span>An SBO associates an interface with an implementation class. Each folder under&lt;br/>/System/Modules/SBO corresponds to an SBO. </post>
    </solution>
    <solution rank="3" score="1.5">
      <content name="snippet" weight="1" output-action="summarize" u="13"
        v="28376"
      />
      <pre u="19341" v="19360"><![CDATA[for SBOs, but we recommend that you<br/>follow the naming convention explained in</span> </div><div> <span>Follow the Naming Convention, page 90.</span> </div><div> <span><b>Implementing ]]></pre>
      <match u="19361" v="19361"><![CDATA[SBOs</b></span> </div><div> <span>]]></match>
      <post u="19362" v="19381">This section explains how to implement an SBO.&lt;/span> &lt;/div>&lt;div> &lt;span>An SBO is deﬁned by its interface. Callers cannot instantiate an SBO’</post>
    </solution>
    <solution rank="4" score="1.5">
      <content name="snippet" weight="1" output-action="summarize" u="13"
        v="28376"
      />
      <pre u="19660" v="19679">SBO programming differs little from programming for other environments. The&lt;br/>following sections address the principal additional considerations.&lt;/span> &lt;/div>&lt;div> &lt;span>&lt;b>Stateful and stateless </pre>
      <match u="19680" v="19680"><![CDATA[SBOs</b></span> </div><div> <span>]]></match>
      <post u="19681" v="19700">SBOs can maintain state between calls, but they are easier to deploy to multithreaded&lt;br/>and other environments if they do </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... repository containing the global<br/>registry.</span> </div><div> <span><b>Service based objects (SBOs)</b></span> </div><div> <span>This section contains the following main sections:</span> </div><div> <span>•</span> </div><div> <span>SBO  ... Handling, page 90</span> </div><div> <span>•</span> </div><div> <span>SBO Best Practices, page 90</span> </div><div> <span><b>SBO introduction</b></span> </div><div> <span>A  service based object  (SBO) is a  ... ]]></content>
</document>
</scope>
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<scope>
<attribute name="vse-vse">vse-vse</attribute>
<attribute name="total-results" value="4" />
<attribute name="stem" value="depluralize" />
<attribute name="stem2" value="none" />
<attribute name="stoplist" value="none" />
<attribute name="search-ms" value="1" />
<attribute name="retrieval-ms" value="4" />
<attribute name="total-results-with-duplicates" value="4" />
<document
  vse-key="file://:80/testenv/test_data/spec_tests/smoke_test/searchdocs/Alarm_System.doc/"
  vse-base-score="1.875" ct="text/plain"
  url="file:///testenv/test_data/spec_tests/smoke_test/searchdocs/Alarm_System.doc"
  vertex="19" input-at="1192684236" la-score="4.18965"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="213" v="234">you have a visitor coming later the door will be left unlocked. You will then be responsible for turning on the alarm </pre>
      <content type="text" name="snippet" u="1" v="406" />
      <match u="234" v="235">alarm system </match>
      <post u="234" v="255">alarm system by entering the pass code and pressing “away” on the alarm pad and locking the door when you leave by </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="225" v="246">You will then be responsible for turning on the alarm system by entering the pass code and pressing “away” on the alarm </pre>
      <content type="text" name="snippet" u="1" v="406" />
      <match u="246" v="247">alarm pad </match>
      <post u="246" v="267">alarm pad and locking the door when you leave by entering your code and pressing the * (star key) on the key pad </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="377" v="398">smarttags
 PostalCode0 http://
om:office:smarttags 
  1710 Murray Ave, Suite 300
  Microsoft Office Word
  Microsoft Corporation
  1710 Murray Ave, Suite 300  
  alarm </pre>
      <content type="text" name="snippet" u="1" v="406" />
      <match u="398" v="399">alarm and </match>
      <post u="398" v="406">alarm and door system instructions
  Microsoft Office Word Document 
</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="408" v="417">file:///testenv/test_data/spec_tests/smoke_test/searchdocs/Alarm_</pre>
      <content action="none" name="url" weight="1" u="407" v="419" />
      <match u="417" v="418">Alarm_System.</match>
      <post u="417" v="419">Alarm_System.doc</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... will then be responsible for turning on the alarm system by entering the pass code and pressing “ ... away” on the alarm pad and locking the door when you leave  ... </content>
</document>
<document
  vse-key="file://:80/testenv/test_data/spec_tests/smoke_test/searchdocs/msjudge.wpd/"
  vse-base-score="1.5" ct="text/plain"
  url="file:///testenv/test_data/spec_tests/smoke_test/searchdocs/msjudge.wpd"
  vertex="12" input-at="1192684236" la-score="4.18965"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="11475" v="11496">and, like Navigator, it served as a distribution vehicle for Sun
 Às Java runtime
environment.  Then in 1995, Microsoft reacted with alarm </pre>
      <content type="text" name="snippet" u="1" v="62364" />
      <match u="11496" v="11497">alarm to </match>
      <post u="11496" v="11517">alarm to Intel
 Às Native Signal Processing
software, which interacted with the microprocessor independently of the operating system and
exposed APIs directly </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="13820" v="13841">hardware manufacturers, would demonstrate the multimedia capabilities of an Intel
microprocessor utilizing NSP.

 ÁMicrosoft reacted to Intel
 Às NSP software with alarm.  </pre>
      <content type="text" name="snippet" u="1" v="62364" />
      <match u="13841" v="13842">alarm.  First </match>
      <post u="13841" v="13862">alarm.  First of all, the software
threatened to offer ISVs and device manufacturers an alternative to waiting for Windows to
provide system©</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... runtime
environment.  Then in 1995, Microsoft reacted with alarm to Intel
 Às Native Signal Processing
software, which  ... ÁMicrosoft reacted to Intel
 Às NSP software with alarm.  First of all, the software
threatened to offer  ... </content>
</document>
<document
  vse-key="file://:80/testenv/test_data/spec_tests/smoke_test/searchdocs/freetds-0.63.tar/"
  vse-base-score="1.5" ct="text/plain"
  url="file:///testenv/test_data/spec_tests/smoke_test/searchdocs/freetds-0.63.tar"
  vertex="23" input-at="1192684236" la-score="4.18965"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="504008" v="504029">command(cmd, query);
		if (ret != CS_SUCCEED)
			return 1;
	}

	/* Set SIGALRM signal handler */
	signal(SIGALRM, catch_alrm);

	/* TODO better to use alarm </pre>
      <content type="text" name="snippet" u="1" v="1009387" />
      <match u="504029" v="504030">alarm AFTER </match>
      <post u="504029" v="504050">alarm AFTER ct_send ?? */
	/* Set timer */
	timer.it_interval.tv_sec = 1;
	timer.it_interval.tv_usec = 0;
	timer.it_value.tv_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="504169" v="504190">RESULT:
			printf("do_fetch() returned: %d\n", do_fetch(cmd, &amp;cnt));
			break;
		}
	}

	/* We should not have received all rows, as the alarm </pre>
      <content type="text" name="snippet" u="1" v="1009387" />
      <match u="504190" v="504191">alarm signal </match>
      <post u="504190" v="504211">alarm signal cancelled it... */
	if (10000 &lt;= cnt) {
		fprintf(stderr, "All rows read, this may not occur.\n");
		return 1;
	}

	/* Remove timer */
	timer.</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... signal(SIGALRM, catch_alrm);

	/* TODO better to use alarm AFTER ct_send ?? */
	/* Set timer */
	timer.it_interval. ... should not have received all rows, as the alarm signal cancelled it... */
	if (10000 &lt;= cnt) {
		fprintf(stderr, " ... </content>
</document>
<document
  vse-key="file://:80/testenv/test_data/spec_tests/smoke_test/searchdocs/xml-edit-otf/"
  vse-base-score="1" ct="text/plain"
  url="file:///testenv/test_data/spec_tests/smoke_test/searchdocs/xml-edit-otf"
  vertex="20" input-at="1192684236" la-score="4.18965"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="24980" v="25001">0.4.1 Input domain encoded as `%s'
 proxy  User-Agent: %s
 %hu.%hu.%hu.%hu SOCKS4 request granted.
 HTTP Previous alarm </pre>
      <content type="text" name="snippet" u="1" v="37380" />
      <match u="25001" v="25002">alarm fired </match>
      <post u="25001" v="25022">alarm fired off! %255[^:]:%255[^
] NO_PROXY all_proxy
FTPS ;type= Port number too large: %lu &lt;url> malformed TFTP ;mode= memory shortage </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... hu.%hu.%hu SOCKS4 request granted.
 HTTP Previous alarm fired off! %255[^:]:%255[^
] NO_PROXY all_proxy
 ... </content>
</document>
</scope>
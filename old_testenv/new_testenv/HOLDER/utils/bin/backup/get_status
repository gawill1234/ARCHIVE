#!/bin/bash
#
#   Pyed
#

#####################################################

   VUSER="$VIVUSER"
   VPW="$VIVPW"
   VCOLLECTION=""
   VWORKINGDIR=$TESTWORKINGDIR
   SHOST="$VIVHOST"
   export PATH=$PATH:$TEST_ROOT/utils/bin:$TEST_ROOT/bin
   TARGETOS="$VIVTARGETOS"

   VCMD="gronk"
   if [ "$TARGETOS" == "windows" ]; then
      VCMD="gronk.exe"
   fi

   VACTION="get-status"

#####################################################

getsetopts()
{
   OPTERR=0
   OPTIND=1
   while getopts "H:C:U:P:W:" flag; do
     case "$flag" in
        C) VCOLLECTION=$OPTARG;;
        H) SHOST=$OPTARG;;
        U) VUSER=$OPTARG;;
        P) VPW=$OPTARG;;
        W) VWORKINGDIR=$OPTARG;;
        *) echo "Usage: get_status -H <HOST> -C <collection> -U <user> -P <password>"
           exit 1;;
     esac
   done

   if [ "$VWORKINGDIR" == "" ]; then
      VWORKINGDIR="/tmp"
   fi

   if [ "$VCOLLECTION" == "" ]; then
      echo "Collection name must be specified"
      echo "Use the -C <collection> option"
      exit 1
   fi

   if [ "$VUSER" == "" ]; then
      VUSER=$VIVUSER
      if [ "$VUSER" == "" ]; then
         echo "Vivisimo username is needed"
         echo "Either set VIVUSER environment variable or"
         echo "use the -U <vivuser> options"
         exit 1
      fi
   fi

   if [ "$VPW" == "" ]; then
      VPW=$VIVPW
      if [ "$VPW" == "" ]; then
         echo "Vivisimo password is needed"
         echo "Either set VIVPW environment variable or"
         echo "use the -P <vivpassword> options"
         exit 1
      fi
   fi

   if [ "$SHOST" == "" ]; then
      SHOST=$VIVHOST
      if [ "$SHOST" == "" ]; then
         echo "Target host needed"
         echo "Either set VIVHOST environment variable or"
         echo "use the -H <host> options"
         exit 1
      fi
   fi
}

usewget()
{
   rstring="wget 'http://$SHOST/vivisimo/cgi-bin/$VCMD?collection=$VCOLLECTION&action=$VACTION&user=$VUSER&password=$VPW' -o $VCOLLECTION.statlog -O $VCOLLECTION.status"
}

getsetopts $*

usewget

eval $rstring 2>/dev/null
#echo $rstring

xx=`xsltproc $TEST_ROOT/utils/xsl/op_data.xsl $VCOLLECTION.status | grep -i crawler`
rm $VCOLLECTION.statlog $VCOLLECTION.status

a=`echo $xx | grep "Indexer running"`
b=`echo $xx | grep "Crawler running"`

if [ "$xx" == "Crawler and indexer are idle." ]; then
   exit 0
fi

if [ "$a" != "" ]; then
   #
   #  Indexer is running
   #
   exit 2
fi
if [ "$b" != "" ]; then
   #
   #  Crawler is running
   #
   exit 3
fi

exit 1

<?xml version="1.0" encoding="UTF-8" standalone="yes" ?><function name="vse-crawler-seed-sharepoint" products="all" type="crawl-seed" internal="3.0.2"><prototype><declare type="string-area" name="site-urls" required="required"><label name="label">URLs</label><description name="description">Newline-separated list of URLs of Sharepoint sites to crawl. For example:
<code>http://a.com
http://b.com:83/site
http://c.com/site2</code>
The subsites of these sites will also be crawled (unless they are excluded by other crawling rules). </description></declare><declare type="string" name="username" required="required"><label name="label">Username</label><description name="description">
        Username of Sharepoint user used to access the content. This user
        must have access to all the target sites and
        lists to be crawled and indexed, and must be able to retrieve and resolve
        the associated permissions. It is better to enter it with the domain
        name like <incode>MYDOMAIN\Administrator</incode></description></declare><declare type="password" name="password" required="required"><label name="label">Password</label><description name="description">
        Password of Sharepoint user used to access the content. 
      </description></declare><declare type="flag" name="teamsites"><label name="label">Crawl Portal Sites</label><description name="description">This option is for Sharepoint 2003 only. When enabled, the list of "crawlable" sites for a Sharepoint Portal Server will be added 
as seeds. If a Portal Sites URL is specified, a list of links to the sites will be expected at this URL. If no Portal Sites URL is specified, <brand>Velocity</brand> will try to collect that list automatically. Because there is no remote API to gather such a list, it is obtained by crawling the web page:  <code1>{SHAREPOINT_DOMAIN:PORT}/_layouts/1033/SRMan.aspx?ConsoleView=IndexIndex</code1> and extracting the list of all crawlable sites using the <incode>sharepoint-teamsites</incode> parser.
<P />
You can easily check what sites will be extracted by clicking on the [view resolved] link for this component.
      </description></declare><declare type="string" name="teamsites-url"><label name="label">Portal Sites URL</label><description name="description">This option is for Sharepoint 2003 only, and enables you to specify the URL of an HTML page listing the URLs (as links) of all the sites that need to be crawled. The "Crawl Portal Sites" option needs to be enabled for this option to be used.</description></declare><declare enum-values="2003|2007|2007 with Custom Webservice" name="version" initial-value="2003" type="enum"><label name="label">Sharepoint Version</label><description name="description">The Sharepoint version to crawl.</description></declare><declare type="enum" name="protocol" enum-values="http|https" initial-value="http"><label name="label">Protocol</label><description name="description">What protocol to use when contacting the Sharepoint server.</description></declare><declare type="flag" name="do-all-versions"><label name="label">Crawl all versions</label><description name="description">When enabled, all versions of a document will be crawled.  Otherwise, just the latest version of the document will be crawled.
      </description></declare><declare type="flag" name="use-sid"><label name="label">Use SID as ACL</label><description name="description">When enabled, Windows SIDs will be used as the ACLs.
      </description></declare><declare type="flag" name="add-admins"><label name="label">Add Site Collection Administrators as ACL</label><description name="description">When enabled, Site Collection Administrators will be given access to all the content in the site collection.
      </description></declare><declare type="flag" name="crawl-profile-info"><label name="label">Crawl profile information from personal sites</label><description name="description">When enabled, profile information (My Profile) of personal sites will be crawled.
      </description></declare><proto-section section="Advanced Configuration" toggle-section="toggle-section"><declare type="enum" name="http-transport" enum-values="NTLM2|KERBEROS"><label name="label">Authentication Type</label><description name="description">
What authentication mechanism to use when contacting the Sharepoint server.
</description></declare><declare type="string" name="kerbconf"><label name="label">Kerberos Configuration</label><description name="description">
The name and location of the Kerberos configuration file e.g. C:\exampleKerb\krb5.ini or /usr/local/examplekerb/krb5.conf.

<p />
Sample configuration file:
<p /><code>
[libdefaults]
	default_realm = $REALM-NAME$
	default_tkt_enctypes = aes128-cts rc4-hmac des3-cbc-sha1 des-cbc-md5 des-cbc-crc
	default_tgs_enctypes = aes128-cts rc4-hmac des3-cbc-sha1 des-cbc-md5 des-cbc-crc
	permitted_enctypes   = aes128-cts rc4-hmac des3-cbc-sha1 des-cbc-md5 des-cbc-crc

[realms]
	$REALM-NAME$ = {
		kdc = $KDC-HOST$
		default_domain = $DEFAULT-DOMAIN$
}

[domain_realm]
	.$DOMAIN-REALM$ = $DOMAIN-REALM$
</code></description></declare><declare type="string" name="kerblogin"><label name="label">JAAS Login Configuration</label><description name="description">
The name and location of the JAAS Login configuration file e.g. C:\exampleKerb\login.conf or /usr/local/examplekerb/login.conf

<p />
Sample configuration file:
<p /><code>
com.sun.security.jgss.login {
   com.sun.security.auth.module.Krb5LoginModule required client=TRUE useTicketCache=true debug=true;
};

com.sun.security.jgss.initiate {
   com.sun.security.auth.module.Krb5LoginModule required client=TRUE useTicketCache=true debug=true;
};

com.sun.security.jgss.accept {
   com.sun.security.auth.module.Krb5LoginModule required client=TRUE useTicketCache=true debug=true;
};
</code></description></declare></proto-section><description name="description">Crawl Sharepoint sites, including the subsites and lists attached to these sites.<p />For more information, see <a ref="vse_crawling_seed_sharepoint">the online documentation</a>.</description><label name="label">Sharepoint</label></prototype><scope><call-function name="vse-crawler-seed-sharepoint-tng"><with name="site-urls" copy-of="site-urls" /><with name="username" copy-of="username" /><with name="password" copy-of="password" /><if-var name="version"><with name="version" copy-of="version" /></if-var><if-var name="protocol"><with name="protocol" copy-of="protocol" /></if-var><if-var name="use-sid"><with name="use-sid" copy-of="use-sid" /></if-var><if-var name="add-admins"><with name="add-admins" copy-of="add-admins" /></if-var><if-var name="crawl-profile-info"><with name="crawl-profile-info" copy-of="crawl-profile-info" /></if-var><if-var name="do-all-versions"><with name="do-all-versions" copy-of="do-all-versions" /></if-var><if-var name="http-transport"><with name="http-transport" copy-of="http-transport" /></if-var><if-var name="kerbconf"><with name="kerbconf" copy-of="kerbconf" /></if-var><if-var name="kerblogin"><with name="kerblogin" copy-of="kerblogin" /></if-var></call-function><if-var name="teamsites"><crawl-urls><declare name="enqueued" initial-value="0" /><declare name="fetched" initial-value="0" /><scope async="0"><process-xsl>
      &lt;xsl:param name="teamsites-url"/>
      &lt;xsl:template match="/">
        &lt;xsl:variable name="top-site-urls">
          &lt;xsl:choose>
            &lt;xsl:when test="$teamsites-url">
              &lt;xsl:value-of select="$teamsites-url"/>
            &lt;/xsl:when>
            &lt;xsl:otherwise>
              &lt;xsl:for-each select="str:tokenize($site-urls, '&amp;#10;')">
                &lt;xsl:text>&amp;#10;&lt;/xsl:text>
                &lt;xsl:value-of select="viv:url-resolve-base('_layouts/1033/SRMan.aspx?ConsoleView=IndexIndex', .)"/>
              &lt;/xsl:for-each>
            &lt;/xsl:otherwise>
          &lt;/xsl:choose>
        &lt;/xsl:variable>
        &lt;xsl:for-each 
          select="set:distinct(str:tokenize($top-site-urls,'&amp;#10;'))">
          &lt;set-var name="enqueued">
            &lt;value-of select="$enqueued + 1"/>
          &lt;/set-var>
          &lt;parse url="{.}" timeout="1000000" parser="sharepoint-teamsites" username="{$username}" password="{$password}" headers="User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)" ignore-http-status="ignore-http-status"/>
        &lt;/xsl:for-each>
     &lt;/xsl:template>
        </process-xsl><fetch timeout="1000000" finish="finish" /></scope><parse><parser type="html-xsl">
            &lt;xsl:template match="/">
        &lt;if test="$enqueued != $fetched">
          &lt;error id="TEAMSITES_SEED_TIMEOUT">Some pages from which the teamsites are extracted failed to load or timed out (requested &lt;value-of-var name="enqueued" />, fetched &lt;value-of-var name="fetched" />)&lt;/error>
        &lt;/if>
            &lt;/xsl:template></parser></parse></crawl-urls></if-var></scope></function>
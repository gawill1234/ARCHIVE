<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<scope>
<attribute name="vse-vse">vse-vse</attribute>
<attribute name="total-results" value="100" />
<attribute name="admin-url"
  value="http://testbed4.test.vivisimo.com/vivisimo/cgi-bin/admin"
/>
<attribute name="stem" value="depluralize" />
<attribute name="stem2" value="none" />
<attribute name="stoplist" value="none" />
<attribute name="search-ms" value="2" />
<attribute name="retrieval-ms" value="38" />
<attribute name="total-results-with-duplicates" value="100" />
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/db_test.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/db_test.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="2" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="37" v="52"><![CDATA[/* system includes */
#include &lt;stdio.h>
#include &lt;stdlib.h>

#include &lt;sql.h>
#include &lt;sqlext.h>

SQLRETURN db_]]></pre>
      <content type="TEXT" name="snippet" u="36" v="810" />
      <match u="53" v="53">odbc_</match>
      <post u="54" v="73">test (SQLCHAR *, SQLCHAR *, SQLCHAR *);
SQLRETURN db_odbc_get_lastautoincrement_id( SQLHDBC hdbc, SQLUINTEGER *maxId);
SQLRETURN db_odbc_exec_sql_stmt ( </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="40" v="59"><![CDATA[stdio.h>
#include &lt;stdlib.h>

#include &lt;sql.h>
#include &lt;sqlext.h>

SQLRETURN db_odbc_test (SQLCHAR *, SQLCHAR *, SQLCHAR *);
SQLRETURN db_]]></pre>
      <content type="TEXT" name="snippet" u="36" v="810" />
      <match u="60" v="60">odbc_</match>
      <post u="61" v="80">get_lastautoincrement_id( SQLHDBC hdbc, SQLUINTEGER *maxId);
SQLRETURN db_odbc_exec_sql_stmt ( SQLHDBC hdbc, SQLCHAR *stmtStr);
void db_odbc_</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="50" v="69">h>

SQLRETURN db_odbc_test (SQLCHAR *, SQLCHAR *, SQLCHAR *);
SQLRETURN db_odbc_get_lastautoincrement_id( SQLHDBC hdbc, SQLUINTEGER *maxId);
SQLRETURN db_</pre>
      <content type="TEXT" name="snippet" u="36" v="810" />
      <match u="70" v="70">odbc_</match>
      <post u="71" v="90">exec_sql_stmt ( SQLHDBC hdbc, SQLCHAR *stmtStr);
void db_odbc_error(SQLHENV henv, SQLHDBC hdbc, SQLHSTMT hstmt, const SQLCHAR* stmt);

</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="60" v="79">odbc_get_lastautoincrement_id( SQLHDBC hdbc, SQLUINTEGER *maxId);
SQLRETURN db_odbc_exec_sql_stmt ( SQLHDBC hdbc, SQLCHAR *stmtStr);
void db_</pre>
      <content type="TEXT" name="snippet" u="36" v="810" />
      <match u="80" v="80">odbc_</match>
      <post u="81" v="100">error(SQLHENV henv, SQLHDBC hdbc, SQLHSTMT hstmt, const SQLCHAR* stmt);

int 
main(int argc, char **argv)
{
  SQLCHAR    *szDsn= (SQLCHAR *)"myodbc3";
  </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="150" v="169">1 )
      szDsn = argv[1];
    else if ( nArg == 2 )
      szUser = argv[2];
    else if ( nArg == 3 )
      szPassword = argv[3];
  }
	iResult = db_</pre>
      <content type="TEXT" name="snippet" u="36" v="810" />
      <match u="170" v="170">odbc_</match>
      <post u="171" v="190">test( szDsn, szUser, szPassword );
	if ( iResult == SQL_ERROR )
		printf("\n Error!\n");
  else
		printf("\n Success\n");
  return 0;
}

void 
</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="213" v="232">rc == SQL_SUCCESS || rc == SQL_SUCCESS_WITH_INFO)
  {
    printf("\n Successfully connected to server 'mysqld-%s'",server_version);
  }
}

SQLRETURN
db_</pre>
      <content type="TEXT" name="snippet" u="36" v="810" />
      <match u="233" v="233">odbc_</match>
      <post u="234" v="253"><![CDATA[test (SQLCHAR *szDsn, SQLCHAR *szUser, SQLCHAR *szPassword)
{
   SQLHENV     henv;      
   SQLHDBC     hdbc;       
   SQLUINTEGER maxId;
   SQLCHAR     stmt[200]; 
   SQLRETURN   rc;

   rc = SQLAllocEnv (&amp;]]></post>
    </solution>
    <solution rank="6" score="1">
      <pre u="290" v="309">off auto-commit; must use SQLTransact() to commit DB mods */
     rc = SQLSetConnectOption( hdbc, SQL_AUTOCOMMIT, SQL_AUTOCOMMIT_OFF ); 
   }
   else 
   {
     db_</pre>
      <content type="TEXT" name="snippet" u="36" v="810" />
      <match u="310" v="310">odbc_</match>
      <post u="311" v="330">error( SQL_NULL_HENV, hdbc, SQL_NULL_HSTMT, "SQLConnect()" );
     return SQL_ERROR;
   }
   print_server_version( hdbc );
   
   sprintf ( stmt , "CREATE DATABASE </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="317" v="336">NULL_HSTMT, "SQLConnect()" );
     return SQL_ERROR;
   }
   print_server_version( hdbc );
   
   sprintf ( stmt , "CREATE DATABASE IF NOT EXISTS test");
   rc = db_</pre>
      <content type="TEXT" name="snippet" u="36" v="810" />
      <match u="337" v="337">odbc_</match>
      <post u="338" v="357">exec_sql_stmt (hdbc, stmt);
   if ( rc == SQL_ERROR)
   {
     printf ( "Error create database.\n");
     return SQL_ERROR;
   }
 
   sprintf ( stmt , "USE </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="341" v="360">hdbc, stmt);
   if ( rc == SQL_ERROR)
   {
     printf ( "Error create database.\n");
     return SQL_ERROR;
   }
 
   sprintf ( stmt , "USE test");
   rc = db_</pre>
      <content type="TEXT" name="snippet" u="36" v="810" />
      <match u="361" v="361">odbc_</match>
      <post u="362" v="381">exec_sql_stmt (hdbc, stmt);
   if ( rc == SQL_ERROR) 
   {
     printf ( "Error use database.\n");
     return SQL_ERROR;
   }
   
   sprintf ( stmt , "DROP </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="365" v="384">hdbc, stmt);
   if ( rc == SQL_ERROR) 
   {
     printf ( "Error use database.\n");
     return SQL_ERROR;
   }
   
   sprintf ( stmt , "DROP TABLE test");
   db_</pre>
      <content type="TEXT" name="snippet" u="36" v="810" />
      <match u="385" v="385">odbc_</match>
      <post u="386" v="405">exec_sql_stmt (hdbc, stmt); 
   
   sprintf ( stmt , "CREATE TABLE test (id int PRIMARY KEY AUTO_INCREMENT, name char(64) NOT </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... include &lt;sql.h>
#include &lt;sqlext.h>

SQLRETURN db_odbc_test (SQLCHAR *, SQLCHAR *, SQLCHAR *);
SQLRETURN db_odbc_get_lastautoincrement_id( SQLHDBC hdbc, SQLUINTEGER *maxId);
SQLRETURN  ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_error.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_error.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="16" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="210" v="229"><![CDATA[t_odbc3_error");

    rc = SQLAllocHandle(SQL_HANDLE_ENV,SQL_NULL_HANDLE,&amp;henv);
    myenv(henv,rc);

    rc = SQLSetEnvAttr(henv,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="36" v="817" />
      <match u="230" v="230">ODBC_</match>
      <post u="231" v="250"><![CDATA[VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(henv,rc);

    rc = SQLAllocHandle(SQL_HANDLE_DBC,henv,&amp;hdbc);
    myenv(henv,rc);

    rc = ]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="235" v="254"><![CDATA[ODBC3,0);
    myenv(henv,rc);

    rc = SQLAllocHandle(SQL_HANDLE_DBC,henv,&amp;hdbc);
    myenv(henv,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="36" v="817" />
      <match u="255" v="255">ODBC_</match>
      <post u="256" v="275"><![CDATA[VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    myprintf("\n default odbc version:%d",ov_version);
    my_assert(ov_version == (]]></post>
    </solution>
    <solution rank="2" score="1">
      <pre u="247" v="266"><![CDATA[myenv(henv,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    myprintf("\n default ]]></pre>
      <content type="TEXT" name="snippet" u="36" v="817" />
      <match u="267" v="267">odbc </match>
      <post u="268" v="287">version:%d",ov_version);
    my_assert(ov_version == (SQLPOINTER)SQL_OV_ODBC3);

    rc = SQLConnect(hdbc, mydsn, SQL_NTS, myuid, SQL_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="294" v="313"><![CDATA[rc);

    rc = SQLAllocHandle(SQL_HANDLE_STMT,hdbc,&amp;hstmt);
    mycon(hdbc, rc);
    
    rc = SQLExecDirect(hstmt,"CREATE DATABASE IF NOT EXISTS client_]]></pre>
      <content type="TEXT" name="snippet" u="36" v="817" />
      <match u="314" v="314">odbc_</match>
      <post u="315" v="334">test",SQL_NTS);
    mystmt(hstmt,rc);
    
    rc = SQLExecDirect(hstmt,"use client_odbc_test",SQL_NTS);
    mystmt(hstmt,rc);

    rc = SQLExecDirect(</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="306" v="325">SQLExecDirect(hstmt,"CREATE DATABASE IF NOT EXISTS client_odbc_test",SQL_NTS);
    mystmt(hstmt,rc);
    
    rc = SQLExecDirect(hstmt,"use client_</pre>
      <content type="TEXT" name="snippet" u="36" v="817" />
      <match u="326" v="326">odbc_</match>
      <post u="327" v="346">test",SQL_NTS);
    mystmt(hstmt,rc);

    rc = SQLExecDirect(hstmt,"select * from iNON_EXITING_TABLE",SQL_NTS);
    myassert(rc == SQL_ERROR);
    </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="466" v="485"><![CDATA[t_odbc2_error");

    rc = SQLAllocHandle(SQL_HANDLE_ENV,SQL_NULL_HANDLE,&amp;henv);
    myenv(henv,rc);

    rc = SQLSetEnvAttr(henv,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="36" v="817" />
      <match u="486" v="486">ODBC_</match>
      <post u="487" v="506"><![CDATA[VERSION,(SQLPOINTER)SQL_OV_ODBC2,0);
    myenv(henv,rc);

    rc = SQLAllocHandle(SQL_HANDLE_DBC,henv,&amp;hdbc);
    myenv(henv,rc);

    rc = ]]></post>
    </solution>
    <solution rank="6" score="1">
      <pre u="491" v="510"><![CDATA[ODBC2,0);
    myenv(henv,rc);

    rc = SQLAllocHandle(SQL_HANDLE_DBC,henv,&amp;hdbc);
    myenv(henv,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="36" v="817" />
      <match u="511" v="511">ODBC_</match>
      <post u="512" v="531"><![CDATA[VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    myprintf("\ndefault odbc version:%d",ov_version);
    my_assert(ov_version == (SQLPOINTER)]]></post>
    </solution>
    <solution rank="7" score="1">
      <pre u="502" v="521"><![CDATA[hdbc);
    myenv(henv,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    myprintf("\ndefault ]]></pre>
      <content type="TEXT" name="snippet" u="36" v="817" />
      <match u="522" v="522">odbc </match>
      <post u="523" v="542">version:%d",ov_version);
    my_assert(ov_version == (SQLPOINTER)SQL_OV_ODBC2);

    rc = SQLConnect(hdbc, mydsn, SQL_NTS, myuid, SQL_</post>
    </solution>
    <solution rank="8" score="1">
      <pre u="549" v="568"><![CDATA[rc);

    rc = SQLAllocHandle(SQL_HANDLE_STMT,hdbc,&amp;hstmt);
    mycon(hdbc, rc);

    rc = SQLExecDirect(hstmt,"CREATE DATABASE IF NOT EXISTS client_]]></pre>
      <content type="TEXT" name="snippet" u="36" v="817" />
      <match u="569" v="569">odbc_</match>
      <post u="570" v="589">test",SQL_NTS);
    mystmt(hstmt,rc);
    
    rc = SQLExecDirect(hstmt,"use client_odbc_test",SQL_NTS);
    mystmt(hstmt,rc);


    rc = SQLExecDirect(</post>
    </solution>
    <solution rank="9" score="1">
      <pre u="561" v="580">SQLExecDirect(hstmt,"CREATE DATABASE IF NOT EXISTS client_odbc_test",SQL_NTS);
    mystmt(hstmt,rc);
    
    rc = SQLExecDirect(hstmt,"use client_</pre>
      <content type="TEXT" name="snippet" u="36" v="817" />
      <match u="581" v="581">odbc_</match>
      <post u="582" v="601">test",SQL_NTS);
    mystmt(hstmt,rc);


    rc = SQLExecDirect(hstmt,"select * from iNON_EXITING_TABLE",SQL_NTS);
    myassert(rc == SQL_ERROR);
    </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... myenv(henv,rc);

    rc = SQLSetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(henv, ... myenv(henv,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
     ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest3.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest3.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="24" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="6680" v="6699"><![CDATA[performed due to max_connections are very high");
    return;
  }

  rc = SQLAllocEnv(&amp;env);
  myenv(env,rc);

  rc = SQLSetEnvAttr(env,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="35" v="26975" />
      <match u="6700" v="6700">ODBC_</match>
      <post u="6701" v="6720"><![CDATA[VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
  myenv(env,rc);

  fprintf(stdout,"\n");
  
  for (i=0; i &lt;= test_connections; i++)
  {
    rc = ]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="8206" v="8225"><![CDATA[NTS,(SQLPOINTER)SQL_TRUE,0);
    myenv(henv,rc);

    rc = SQLAllocConnect(henv,&amp;hdbc);
    myenv(henv,rc);

    rc = SQLSetEnvAttr(henv,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="35" v="26975" />
      <match u="8226" v="8226">ODBC_</match>
      <post u="8227" v="8246"><![CDATA[VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv_err(henv,rc == SQL_ERROR,rc);
	
    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;]]></post>
    </solution>
    <solution rank="2" score="1">
      <pre u="8225" v="8244">ATTR_ODBC_VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv_err(henv,rc == SQL_ERROR,rc);
	
    rc = SQLGetEnvAttr(henv,SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="35" v="26975" />
      <match u="8245" v="8245">ODBC_</match>
      <post u="8246" v="8265"><![CDATA[VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    fprintf(stdout,"\n default odbc version:%d",ov_version);
    my_assert(ov_]]></post>
    </solution>
    <solution rank="3" score="1">
      <pre u="8238" v="8257"><![CDATA[ERROR,rc);
	
    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    fprintf(stdout,"\n default ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="26975" />
      <match u="8258" v="8258">odbc </match>
      <post u="8259" v="8278">version:%d",ov_version);
    my_assert(ov_version == (SQLPOINTER)SQL_OV_ODBC2);

    rc = SQLFreeConnect(hdbc);
    mycon(hdbc,rc);

    rc = SQLSetEnvAttr(</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="8262" v="8281">version);
    my_assert(ov_version == (SQLPOINTER)SQL_OV_ODBC2);

    rc = SQLFreeConnect(hdbc);
    mycon(hdbc,rc);

    rc = SQLSetEnvAttr(henv,SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="35" v="26975" />
      <match u="8282" v="8282">ODBC_</match>
      <post u="8283" v="8302"><![CDATA[VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(henv,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;ov_version,0,0);
    ]]></post>
    </solution>
    <solution rank="5" score="1">
      <pre u="8277" v="8296">rc = SQLSetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(henv,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="35" v="26975" />
      <match u="8297" v="8297">ODBC_</match>
      <post u="8298" v="8317"><![CDATA[VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    fprintf(stdout,"\n new odbc version:%d",ov_version);
    my_assert(ov_]]></post>
    </solution>
    <solution rank="6" score="1">
      <pre u="8290" v="8309"><![CDATA[henv,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    fprintf(stdout,"\n new ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="26975" />
      <match u="8310" v="8310">odbc </match>
      <post u="8311" v="8330">version:%d",ov_version);
    my_assert(ov_version == (SQLPOINTER)SQL_OV_ODBC3);
    
    rc = SQLFreeEnv(henv);
    myenv(henv,rc);

    rc = SQLAllocHandle(</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="8326" v="8345"><![CDATA[myenv(henv,rc);

    rc = SQLAllocHandle(SQL_HANDLE_ENV, SQL_NULL_HANDLE, &amp;henv);
    myenv(henv,rc);

    rc = SQLSetEnvAttr(henv,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="35" v="26975" />
      <match u="8346" v="8346">ODBC_</match>
      <post u="8347" v="8366"><![CDATA[VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(henv,rc);
    
    rc = SQLAllocConnect(henv,&amp;hdbc);
    myenv(henv,rc);

    rc = SQLSetEnvAttr(henv,SQL_]]></post>
    </solution>
    <solution rank="8" score="1">
      <pre u="8348" v="8367"><![CDATA[SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(henv,rc);
    
    rc = SQLAllocConnect(henv,&amp;hdbc);
    myenv(henv,rc);

    rc = SQLSetEnvAttr(henv,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="35" v="26975" />
      <match u="8368" v="8368">ODBC_</match>
      <post u="8369" v="8388"><![CDATA[VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv_err(henv,rc == SQL_ERROR,rc);
	
    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;]]></post>
    </solution>
    <solution rank="9" score="1">
      <pre u="8367" v="8386">ATTR_ODBC_VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv_err(henv,rc == SQL_ERROR,rc);
	
    rc = SQLGetEnvAttr(henv,SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="35" v="26975" />
      <match u="8387" v="8387">ODBC_</match>
      <post u="8388" v="8407"><![CDATA[VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    fprintf(stdout,"\n default odbc version:%d",ov_version);
    my_assert(ov_]]></post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... myenv(env,rc);

  rc = SQLSetEnvAttr(env,SQL_ATTR_ODBC_VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
  myenv(env, ... myenv(henv,rc);

    rc = SQLSetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv_err( ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest3.h"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest3.h/"
  graph-id-high-water="0" priority="0" vertex="0" i="25" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="118" v="137"><![CDATA[endif 

#ifndef MY_DEBUG
#define MY_DEBUG
#endif

/* STANDARD C HEADERS */
#include &lt;stdio.h>
#include &lt;stdlib.h>
#include &lt;assert.h>

/* ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="2066" />
      <match u="138" v="138">ODBC </match>
      <post u="139" v="158"><![CDATA[HEADERS */
#include &lt;sql.h>
#include &lt;sqlext.h>

/* for clock() */
#include &lt;time.h> 

#ifndef NULL
#define NULL 0
#endif

#ifndef ushort
#]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="231" v="250">LEN 64

SQLCHAR *mydsn = "myodbc3";
SQLCHAR *myuid = "root";
SQLCHAR *mypwd = "";
SQLCHAR *myserver = "localhost";
SQLCHAR *mydb     = "test";
SQLCHAR *test_db= "client_</pre>
      <content type="TEXT" name="snippet" u="35" v="2066" />
      <match u="251" v="251">odbc_</match>
      <post u="252" v="271">test";

SQLCHAR init_db[3][100]=
{
  "DROP DATABASE IF EXISTS client_odbc_test",
  "CREATE DATABASE client_odbc_test",
  "USE client_</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="243" v="262">localhost";
SQLCHAR *mydb     = "test";
SQLCHAR *test_db= "client_odbc_test";

SQLCHAR init_db[3][100]=
{
  "DROP DATABASE IF EXISTS client_</pre>
      <content type="TEXT" name="snippet" u="35" v="2066" />
      <match u="263" v="263">odbc_</match>
      <post u="264" v="283">test",
  "CREATE DATABASE client_odbc_test",
  "USE client_odbc_test"
};

/* PROTOTYPE */
void myerror(SQLRETURN rc,SQLSMALLINT htype, SQLHANDLE handle);

#define </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="248" v="267">test_db= "client_odbc_test";

SQLCHAR init_db[3][100]=
{
  "DROP DATABASE IF EXISTS client_odbc_test",
  "CREATE DATABASE client_</pre>
      <content type="TEXT" name="snippet" u="35" v="2066" />
      <match u="268" v="268">odbc_</match>
      <post u="269" v="288">test",
  "USE client_odbc_test"
};

/* PROTOTYPE */
void myerror(SQLRETURN rc,SQLSMALLINT htype, SQLHANDLE handle);

#define my_error() fprintf(stdout," ERROR </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="252" v="271">test";

SQLCHAR init_db[3][100]=
{
  "DROP DATABASE IF EXISTS client_odbc_test",
  "CREATE DATABASE client_odbc_test",
  "USE client_</pre>
      <content type="TEXT" name="snippet" u="35" v="2066" />
      <match u="272" v="272">odbc_</match>
      <post u="273" v="292">test"
};

/* PROTOTYPE */
void myerror(SQLRETURN rc,SQLSMALLINT htype, SQLHANDLE handle);

#define my_error() fprintf(stdout," ERROR occured at %d@%s\</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="597" v="616">hstmt)
{
  SQLRETURN rc;

    rc = SQLAllocHandle(SQL_HANDLE_ENV,SQL_NULL_HANDLE,henv);
    myenv(*henv,rc);   
  
    rc = SQLSetEnvAttr(*henv,SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="35" v="2066" />
      <match u="617" v="617">ODBC_</match>
      <post u="618" v="637">VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(*henv,rc);   

    rc = SQLAllocHandle(SQL_HANDLE_DBC,*henv, hdbc);
    myenv(*henv,rc);    

    fprintf(</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="759" v="778">MAX_NAME_LEN];

    rc = SQLAllocHandle(SQL_HANDLE_ENV,SQL_NULL_HANDLE,henv);
    myenv(*henv,rc);   
  
    rc = SQLSetEnvAttr(*henv,SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="35" v="2066" />
      <match u="779" v="779">ODBC_</match>
      <post u="780" v="799">VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(*henv,rc);   

    rc = SQLAllocHandle(SQL_HANDLE_DBC,*henv, hdbc);
    myenv(*henv,rc);    

    fprintf(</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="1876" v="1895">NULL);
  mycon(hdbc, rc);

  if (strncmp(server_version, min_version, length) >= 0)
    return true;
  
  return false;
}

/*
  Check for minimal Connector/</pre>
      <content type="TEXT" name="snippet" u="35" v="2066" />
      <match u="1896" v="1896">ODBC </match>
      <post u="1897" v="1916">version
*/
bool driver_min_version(SQLHDBC hdbc, SQLCHAR *min_version, unsigned int length)
{
  SQLCHAR driver_version[MYSQL_NAME_LEN];
  SQLRETURN </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="1990" v="2009">server supports GRANT
*/
bool server_supports_grant(SQLHSTMT hstmt)
{
  SQLRETURN   rc;

  rc = SQLExecDirect(hstmt,"GRANT ALL ON *.* TO 'junk_test_</pre>
      <content type="TEXT" name="snippet" u="35" v="2066" />
      <match u="2010" v="2010">odbc_</match>
      <post u="2011" v="2030"><![CDATA[usr'",SQL_NTS);
  if (rc == SQL_ERROR)
  {
    SQLINTEGER native_err;

    rc = SQLGetDiagField(SQL_HANDLE_STMT,hstmt,1,SQL_DIAG_NATIVE,&amp;]]></post>
    </solution>
    <solution rank="9" score="1">
      <pre u="2037" v="2056">rc);

    if (native_err == 1047) /* command not found */
      return false;
  }
  SQLExecDirect(hstmt,"DELETE FROM mysql.user WHERE User='junk_test_</pre>
      <content type="TEXT" name="snippet" u="35" v="2066" />
      <match u="2057" v="2057">odbc_</match>
      <post u="2058" v="2066">usr'",SQL_NTS);
  return true;
}
#endif /* __TMYODBC__TEST__H */


</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... stdio.h>
#include &lt;stdlib.h>
#include &lt;assert.h>

/* ODBC HEADERS */
#include &lt;sql.h>
#include &lt;sqlext.h>

/* for  ... localhost";
SQLCHAR *mydb     = "test";
SQLCHAR *test_db= "client_odbc_test";

SQLCHAR init_db[3][100]=
{
  "DROP DATABASE  ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_unixodbc.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_unixodbc.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="26" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="117" v="136"><![CDATA[odbc3_envattr");

    rc = SQLAllocEnv(&amp;henv);
    myenv(henv,rc);

    rc = SQLAllocConnect(henv,&amp;hdbc);
    myenv(henv,rc);

    rc = SQLSetEnvAttr(henv,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="36" v="662" />
      <match u="137" v="137">ODBC_</match>
      <post u="138" v="157"><![CDATA[VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv_err(henv,rc == SQL_ERROR,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="136" v="155">ATTR_ODBC_VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv_err(henv,rc == SQL_ERROR,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="36" v="662" />
      <match u="156" v="156">ODBC_</match>
      <post u="157" v="176"><![CDATA[VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    myprintf("\ndefault odbc version:%d",ov_version);
    my_assert(ov_version == (SQLPOINTER)]]></post>
    </solution>
    <solution rank="2" score="1">
      <pre u="147" v="166"><![CDATA[rc == SQL_ERROR,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    myprintf("\ndefault ]]></pre>
      <content type="TEXT" name="snippet" u="36" v="662" />
      <match u="167" v="167">odbc </match>
      <post u="168" v="187">version:%d",ov_version);
    my_assert(ov_version == (SQLPOINTER)SQL_OV_ODBC2);

    rc = SQLFreeConnect(hdbc);
    mycon(hdbc,rc);

    rc = SQLSetEnvAttr(</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="171" v="190">version);
    my_assert(ov_version == (SQLPOINTER)SQL_OV_ODBC2);

    rc = SQLFreeConnect(hdbc);
    mycon(hdbc,rc);

    rc = SQLSetEnvAttr(henv,SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="36" v="662" />
      <match u="191" v="191">ODBC_</match>
      <post u="192" v="211"><![CDATA[VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(henv,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;ov_version,0,0);
    ]]></post>
    </solution>
    <solution rank="4" score="1">
      <pre u="186" v="205">rc = SQLSetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(henv,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="36" v="662" />
      <match u="206" v="206">ODBC_</match>
      <post u="207" v="226"><![CDATA[VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    myprintf("\nnew odbc version:%d",ov_version);
    my_assert(ov_version == (SQLPOINTER)]]></post>
    </solution>
    <solution rank="5" score="1">
      <pre u="197" v="216"><![CDATA[0);
    myenv(henv,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    myprintf("\nnew ]]></pre>
      <content type="TEXT" name="snippet" u="36" v="662" />
      <match u="217" v="217">odbc </match>
      <post u="218" v="237">version:%d",ov_version);
    my_assert(ov_version == (SQLPOINTER)SQL_OV_ODBC3);
    
    rc = SQLFreeEnv(henv);
    myenv(henv,rc);
}
void t_</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="268" v="287"><![CDATA[0
    rc = SQLAllocHandle(SQL_HANDLE_DBC,henv,&amp;hdbc);
    myenv_err(henv,rc == SQL_ERROR,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="36" v="662" />
      <match u="288" v="288">ODBC_</match>
      <post u="289" v="308"><![CDATA[VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    myprintf("\ndefault odbc version:%d",ov_version);
    my_assert(ov_version == (SQLPOINTER)]]></post>
    </solution>
    <solution rank="7" score="1">
      <pre u="279" v="298"><![CDATA[rc == SQL_ERROR,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
    myprintf("\ndefault ]]></pre>
      <content type="TEXT" name="snippet" u="36" v="662" />
      <match u="299" v="299">odbc </match>
      <post u="300" v="319">version:%d",ov_version);
    my_assert(ov_version == (SQLPOINTER)SQL_OV_ODBC2);
#endif

    rc = SQLSetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,(</post>
    </solution>
    <solution rank="8" score="1">
      <pre u="298" v="317">ndefault odbc version:%d",ov_version);
    my_assert(ov_version == (SQLPOINTER)SQL_OV_ODBC2);
#endif

    rc = SQLSetEnvAttr(henv,SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="36" v="662" />
      <match u="318" v="318">ODBC_</match>
      <post u="319" v="338"><![CDATA[VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(henv,rc);

    rc = SQLAllocHandle(SQL_HANDLE_DBC,henv,&amp;hdbc);
    myenv(henv,rc);

    rc = ]]></post>
    </solution>
    <solution rank="9" score="1">
      <pre u="323" v="342"><![CDATA[ODBC3,0);
    myenv(henv,rc);

    rc = SQLAllocHandle(SQL_HANDLE_DBC,henv,&amp;hdbc);
    myenv(henv,rc);

    rc = SQLSetEnvAttr(henv,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="36" v="662" />
      <match u="343" v="343">ODBC_</match>
      <post u="344" v="363"><![CDATA[VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv_err(henv,rc == SQL_ERROR,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;]]></post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... myenv(henv,rc);

    rc = SQLSetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv_err( ... SQL_ERROR,rc);

    rc = SQLGetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,&amp;ov_version,0,0);
    myenv(henv,rc);
     ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtilReadDataSource.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtilReadDataSource.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="36" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="205" v="224">ini files.
            - On XP, the "32 bit" parts are secretly stripped away
            inside SQLGetPrivateProfileString() somewhere.
*/            
#define MYODBCUTIL_ODBCINI_HEADER_SECTION "</pre>
      <content type="TEXT" name="snippet" u="35" v="1006" />
      <match u="225" v="225">ODBC </match>
      <post u="226" v="245">Data Sources"

/*!
    \brief  Read data source from system information.

    \param  pDataSource Data Source struct.
    \param  pszDSN The data source name </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="262" v="281">coded driver name and driver
            file name (if not given) as it seems MS is in the middle
            of changing </pre>
      <content type="TEXT" name="snippet" u="35" v="1006" />
      <match u="282" v="282">odbc </match>
      <post u="283" v="302">system info (probably to better support
            64 bit).
*/            
BOOL MYODBCUtilReadDataSource( MYODBCUTIL_DATASOURCE *pDataSource, LPCSTR pszDSN )
{
    char    szEntryNames[SQL_MAX_DSN_</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="301" v="320">MAX_DSN_LENGTH * MYODBCUTIL_MAX_DSN_NAMES];
    char *  pszEntryName;
    char    szValue[4096];
    int     nChars  = 0;
#if defined(WIN32)
    UWORD   nMode   = </pre>
      <content type="TEXT" name="snippet" u="35" v="1006" />
      <match u="321" v="321">ODBC_</match>
      <post u="322" v="341"><![CDATA[BOTH_DSN;

    if ( !SQLGetConfigMode( &amp;nMode ) )
    {
        fprintf( stderr, "[%s][%d][ERROR] SQLGetConfigMode failed!\n", __FILE__, __LINE__ );
        return FALSE;
    }
#endif

    if ( !pszDSN || !(*]]></post>
    </solution>
    <solution rank="3" score="1">
      <pre u="364" v="383">it appears utterly broken. So we call an alternative
                instead. 
    */
    if ( ( nChars = GetPrivateProfileString( pszDSN, NULL, NULL, szEntryNames, sizeof( szEntryNames ) - 1, "</pre>
      <content type="TEXT" name="snippet" u="35" v="1006" />
      <match u="384" v="384">odbc.</match>
      <post u="385" v="404"><![CDATA[ini" ) ) &lt; 1 )
#else
    if ( ( nChars = SQLGetPrivateProfileString( pszDSN, NULL, NULL, szEntryNames, sizeof( szEntryNames ) - 1, "ODBC.INI" ) ) &lt; 1 )
#endif
        return FALSE;

#if ]]></post>
    </solution>
    <solution rank="4" score="1">
      <pre u="378" v="397"><![CDATA[NULL, NULL, szEntryNames, sizeof( szEntryNames ) - 1, "odbc.ini" ) ) &lt; 1 )
#else
    if ( ( nChars = SQLGetPrivateProfileString( pszDSN, NULL, NULL, szEntryNames, sizeof( szEntryNames ) - 1, "]]></pre>
      <content type="TEXT" name="snippet" u="35" v="1006" />
      <match u="398" v="398">ODBC.</match>
      <post u="399" v="418"><![CDATA[INI" ) ) &lt; 1 )
#endif
        return FALSE;

#if defined(WIN32)
    {
        int     nLen    = strlen( szEntryNames );

        /*!
            \note   XP

                    Bug in SQLGetPrivateProfileString when mode is ]]></post>
    </solution>
    <solution rank="5" score="1">
      <pre u="399" v="418"><![CDATA[INI" ) ) &lt; 1 )
#endif
        return FALSE;

#if defined(WIN32)
    {
        int     nLen    = strlen( szEntryNames );

        /*!
            \note   XP

                    Bug in SQLGetPrivateProfileString when mode is ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="1006" />
      <match u="419" v="419">ODBC_</match>
      <post u="420" v="439">BOTH_DSN and we are looking for a system
                    DSN. In this case SQLGetPrivateProfileString will find the system dsn but </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="459" v="478">any) will be
                    followed by more than one '\0'.

                    The solution is to detect this condition and set mode to </pre>
      <content type="TEXT" name="snippet" u="35" v="1006" />
      <match u="479" v="479">ODBC_</match>
      <post u="480" v="499">SYSTEM_DSN and try again. We 
                    also ensure we reset the mode when done - regardless of outcome.
        */                
        if ( nMode == ODBC_</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="479" v="498">ODBC_SYSTEM_DSN and try again. We 
                    also ensure we reset the mode when done - regardless of outcome.
        */                
        if ( nMode == </pre>
      <content type="TEXT" name="snippet" u="35" v="1006" />
      <match u="499" v="499">ODBC_</match>
      <post u="500" v="519"><![CDATA[BOTH_DSN &amp;&amp; nLen &lt; nChars &amp;&amp; szEntryNames[nLen + 1 ] == '\0' )
        {
            *szEntryNames = '\0';
            if ( !SQLSetConfigMode( ODBC_SYSTEM_DSN ) )
                fprintf( stderr, "[%s][%d][ERROR] ]]></post>
    </solution>
    <solution rank="8" score="1">
      <pre u="492" v="511"><![CDATA[when done - regardless of outcome.
        */                
        if ( nMode == ODBC_BOTH_DSN &amp;&amp; nLen &lt; nChars &amp;&amp; szEntryNames[nLen + 1 ] == '\0' )
        {
            *szEntryNames = '\0';
            if ( !SQLSetConfigMode( ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="1006" />
      <match u="512" v="512">ODBC_</match>
      <post u="513" v="532">SYSTEM_DSN ) )
                fprintf( stderr, "[%s][%d][ERROR] SQLSetConfigMode failed!\n", __FILE__, __LINE__ );

            if ( ( nChars = SQLGetPrivateProfileString( pszDSN, NULL, NULL, szEntryNames, sizeof( </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="515" v="534">fprintf( stderr, "[%s][%d][ERROR] SQLSetConfigMode failed!\n", __FILE__, __LINE__ );

            if ( ( nChars = SQLGetPrivateProfileString( pszDSN, NULL, NULL, szEntryNames, sizeof( szEntryNames ) - 1, "</pre>
      <content type="TEXT" name="snippet" u="35" v="1006" />
      <match u="535" v="535">ODBC.</match>
      <post u="536" v="555"><![CDATA[INI" ) ) &lt; 1 )
                return FALSE;
        }
    }
#endif


    /*!
        Looks like things are going to work. Lets set DSN.
    */        
    if ( !pDataSource->pszDSN )
        pDataSource->pszDSN = ]]></post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... inside SQLGetPrivateProfileString() somewhere.
*/            
#define MYODBCUTIL_ODBCINI_HEADER_SECTION "ODBC Data Sources"

/*!
    \brief  Read data source from system  ... seems MS is in the middle
            of changing odbc system info (probably to better support
            64 bit).
*/            
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtilGetDataSourceNames.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtilGetDataSourceNames.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="53" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="274" v="293">the depend hierarchy.

                So we use the deprecated precursor to 
                SQLGetPrivateProfileString().

                GetPrivateProfileString() is not aware of changes to the way
                </pre>
      <content type="TEXT" name="snippet" u="35" v="534" />
      <match u="294" v="294">ODBC </match>
      <post u="295" v="314">system information is stored so we get stuff like
                "ODBC 32 bit Data Sources" list as a datasource. It also
                </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="284" v="303">SQLGetPrivateProfileString().

                GetPrivateProfileString() is not aware of changes to the way
                ODBC system information is stored so we get stuff like
                "</pre>
      <content type="TEXT" name="snippet" u="35" v="534" />
      <match u="304" v="304">ODBC </match>
      <post u="305" v="324">32 bit Data Sources" list as a datasource. It also
                appears to be unaware of User vs System DSN. 
*/  
BOOL </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="346" v="365">Insufficient buffer size. Please provide 1k or better yet - 32k.\n", __FILE__, __LINE__ );
        return FALSE;
    }

    /* set scope */
    switch ( nScope )
    {
        case </pre>
      <content type="TEXT" name="snippet" u="35" v="534" />
      <match u="366" v="366">ODBC_</match>
      <post u="367" v="386">BOTH_DSN:
            break;
        case ODBC_USER_DSN:
        case ODBC_SYSTEM_DSN:
            if ( !SQLSetConfigMode( nScope ) )
                return FALSE;
            break;
        default:
            return FALSE;
    }

#</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="351" v="370">1k or better yet - 32k.\n", __FILE__, __LINE__ );
        return FALSE;
    }

    /* set scope */
    switch ( nScope )
    {
        case ODBC_BOTH_DSN:
            break;
        case </pre>
      <content type="TEXT" name="snippet" u="35" v="534" />
      <match u="371" v="371">ODBC_</match>
      <post u="372" v="391">USER_DSN:
        case ODBC_SYSTEM_DSN:
            if ( !SQLSetConfigMode( nScope ) )
                return FALSE;
            break;
        default:
            return FALSE;
    }

#if defined(__APPLE__)
    nChars = GetPrivateProfileString( </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="355" v="374">32k.\n", __FILE__, __LINE__ );
        return FALSE;
    }

    /* set scope */
    switch ( nScope )
    {
        case ODBC_BOTH_DSN:
            break;
        case ODBC_USER_DSN:
        case </pre>
      <content type="TEXT" name="snippet" u="35" v="534" />
      <match u="375" v="375">ODBC_</match>
      <post u="376" v="395">SYSTEM_DSN:
            if ( !SQLSetConfigMode( nScope ) )
                return FALSE;
            break;
        default:
            return FALSE;
    }

#if defined(__APPLE__)
    nChars = GetPrivateProfileString( NULL, NULL, "", pszBuffer, nBuffer - </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="377" v="396">DSN:
            if ( !SQLSetConfigMode( nScope ) )
                return FALSE;
            break;
        default:
            return FALSE;
    }

#if defined(__APPLE__)
    nChars = GetPrivateProfileString( NULL, NULL, "", pszBuffer, nBuffer - 1, "</pre>
      <content type="TEXT" name="snippet" u="35" v="534" />
      <match u="397" v="397">ODBC.</match>
      <post u="398" v="417">INI" );
#elif defined(WIN32)
    /* 
        This returns no data as does having a NULL for 1st arg!?

        nChars = SQLGetPrivateProfileString( "ODBC 32 </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="396" v="415">1, "ODBC.INI" );
#elif defined(WIN32)
    /* 
        This returns no data as does having a NULL for 1st arg!?

        nChars = SQLGetPrivateProfileString( "</pre>
      <content type="TEXT" name="snippet" u="35" v="534" />
      <match u="416" v="416">ODBC </match>
      <post u="417" v="436">32 bit Data Sources", NULL, NULL, pszBuffer, nBuffer - 1, "ODBC.INI" ); 
    */
    /*
        This returns our data sources but includes "ODBC 32 </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="406" v="425">as does having a NULL for 1st arg!?

        nChars = SQLGetPrivateProfileString( "ODBC 32 bit Data Sources", NULL, NULL, pszBuffer, nBuffer - 1, "</pre>
      <content type="TEXT" name="snippet" u="35" v="534" />
      <match u="426" v="426">ODBC.</match>
      <post u="427" v="446">INI" ); 
    */
    /*
        This returns our data sources but includes "ODBC 32 bit Data Sources" as a data sources
        and does not </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="415" v="434">SQLGetPrivateProfileString( "ODBC 32 bit Data Sources", NULL, NULL, pszBuffer, nBuffer - 1, "ODBC.INI" ); 
    */
    /*
        This returns our data sources but includes "</pre>
      <content type="TEXT" name="snippet" u="35" v="534" />
      <match u="435" v="435">ODBC </match>
      <post u="436" v="455">32 bit Data Sources" as a data sources
        and does not respect config mode. Probably best until we use registery (</post>
    </solution>
    <solution rank="9" score="1">
      <pre u="451" v="470">best until we use registery (MS is getting sloppy
        in supporting SQLGetPrivateProfileString).
    */    
    nChars = GetPrivateProfileString( NULL, NULL, NULL, pszBuffer, nBuffer - 1, "</pre>
      <content type="TEXT" name="snippet" u="35" v="534" />
      <match u="471" v="471">ODBC.</match>
      <post u="472" v="491">INI" );
#else
    nChars = SQLGetPrivateProfileString( NULL, NULL, "", pszBuffer, nBuffer - 1, "ODBC.INI" );
#endif

    /* unset scope */
    switch ( nScope )
    {
        case ODBC_BOTH_DSN:
            </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... is not aware of changes to the way
                ODBC system information is stored so we get stuff like
                "ODBC 32 bit Data Sources" list as a datasource.  ... LINE__ );
        return FALSE;
    }

    /* set scope */
    switch ( nScope )
    {
        case ODBC_BOTH_DSN:
            break;
        case ODBC_USER_DSN:
        case  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupConfigDSNRemove.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupConfigDSNRemove.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="71" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="193" v="212">include "MYODBCSetup.h"

/*!
    \internal
    \brief      Remove given DSN.

    \note       This function uses the current SQLSetConfigMode().
*/    
BOOL MYODBCSetupConfigDSNRemove( MYODBCUTIL_DATASOURCE *pDataSource )
{
    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="383" />
      <match u="213" v="213">ODBC </match>
      <post u="214" v="233">RULE

        To delete a data source, a data source name must be passed to ConfigDSN 
        in lpszAttributes.
    */    
    if ( !pDataSource->pszDSN )
    {
        </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="215" v="234">To delete a data source, a data source name must be passed to ConfigDSN 
        in lpszAttributes.
    */    
    if ( !pDataSource->pszDSN )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="383" />
      <match u="235" v="235">ODBC_</match>
      <post u="236" v="255">ERROR_INVALID_KEYWORD_VALUE, "Missing DSN attribute." );
        return FALSE;
    }

    if ( !(*pDataSource->pszDSN) )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Missing DSN </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="229" v="248">in lpszAttributes.
    */    
    if ( !pDataSource->pszDSN )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Missing DSN attribute." );
        return FALSE;
    }

    if ( !(*pDataSource->pszDSN) )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="383" />
      <match u="249" v="249">ODBC_</match>
      <post u="250" v="269">ERROR_INVALID_KEYWORD_VALUE, "Missing DSN attribute value." );
        return FALSE;
    }

    /*!
        ODBC RULE

        ConfigDSN should call SQLValidDSN to check the length </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="240" v="259">Missing DSN attribute." );
        return FALSE;
    }

    if ( !(*pDataSource->pszDSN) )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Missing DSN attribute value." );
        return FALSE;
    }

    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="383" />
      <match u="260" v="260">ODBC </match>
      <post u="261" v="280">RULE

        ConfigDSN should call SQLValidDSN to check the length of the data source 
        name and to verify that no invalid </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="287" v="306">MYODBC RULE

        Assumption is that this also checks to ensure we are not trying to create 
        a DSN using an </pre>
      <content type="TEXT" name="snippet" u="35" v="383" />
      <match u="307" v="307">odbc.</match>
      <post u="308" v="327">ini reserved section name. 
    */
    if ( !SQLValidDSN( pDataSource->pszDSN ) )
    {
        SQLPostInstallerError( ODBC_ERROR_REQUEST_FAILED, "DSN contains illegal characters or length does </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="297" v="316">we are not trying to create 
        a DSN using an odbc.ini reserved section name. 
    */
    if ( !SQLValidDSN( pDataSource->pszDSN ) )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="383" />
      <match u="317" v="317">ODBC_</match>
      <post u="318" v="337">ERROR_REQUEST_FAILED, "DSN contains illegal characters or length does not make sense." );
        return FALSE;
    }

    /*!
        ODBC RULE

        ConfigDSN checks that </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="313" v="332">SQLValidDSN( pDataSource->pszDSN ) )
    {
        SQLPostInstallerError( ODBC_ERROR_REQUEST_FAILED, "DSN contains illegal characters or length does not make sense." );
        return FALSE;
    }

    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="383" />
      <match u="333" v="333">ODBC </match>
      <post u="334" v="353">RULE

        ConfigDSN checks that the data source name is in the Odbc.ini file (or 
        registry).
    */    
    if ( !MYODBCUtilDSNExists( pDataSource->pszDSN ) )
    {
        </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="325" v="344">or length does not make sense." );
        return FALSE;
    }

    /*!
        ODBC RULE

        ConfigDSN checks that the data source name is in the </pre>
      <content type="TEXT" name="snippet" u="35" v="383" />
      <match u="345" v="345">Odbc.</match>
      <post u="346" v="365">ini file (or 
        registry).
    */    
    if ( !MYODBCUtilDSNExists( pDataSource->pszDSN ) )
    {
        SQLPostInstallerError( ODBC_ERROR_REQUEST_FAILED, "DSN does not exist." );
        return FALSE;
    }

    /*!
        ODBC </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="335" v="354">ConfigDSN checks that the data source name is in the Odbc.ini file (or 
        registry).
    */    
    if ( !MYODBCUtilDSNExists( pDataSource->pszDSN ) )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="383" />
      <match u="355" v="355">ODBC_</match>
      <post u="356" v="375">ERROR_REQUEST_FAILED, "DSN does not exist." );
        return FALSE;
    }

    /*!
        ODBC RULE

        It then calls SQLRemoveDSNFromIni in the installer DLL to </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="345" v="364">Odbc.ini file (or 
        registry).
    */    
    if ( !MYODBCUtilDSNExists( pDataSource->pszDSN ) )
    {
        SQLPostInstallerError( ODBC_ERROR_REQUEST_FAILED, "DSN does not exist." );
        return FALSE;
    }

    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="383" />
      <match u="365" v="365">ODBC </match>
      <post u="366" v="383">RULE

        It then calls SQLRemoveDSNFromIni in the installer DLL to remove the 
        data source.
    */    
    return SQLRemoveDSNFromIni( pDataSource->pszDSN );
}



</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... the current SQLSetConfigMode().
*/    
BOOL MYODBCSetupConfigDSNRemove( MYODBCUTIL_DATASOURCE *pDataSource )
{
    /*!
        ODBC RULE

        To delete a data source, a data  ... to ConfigDSN 
        in lpszAttributes.
    */    
    if ( !pDataSource->pszDSN )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Missing DSN attribute." );
        return  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/ConfigDSN.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/ConfigDSN.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="73" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="249" v="268">nChar++;
    }
    return 0;
}
*/

/*!
    \brief  Add, edit, or remove a Data Source Name (DSN).

            This function should be called from the </pre>
      <content type="TEXT" name="snippet" u="35" v="503" />
      <match u="269" v="269">ODBC </match>
      <post u="270" v="289">Administrator
            program when our driver is being used during a request to
            add, edit or remove a DSN. This allows </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="348" v="367">MYODBCUTIL_DATASOURCE * pDataSource = MYODBCUtilAllocDataSource( MYODBCUTIL_DATASOURCE_MODE_DSN_VIEW );
    BOOL                    bReturn     = FALSE;

    if ( !MYODBCUtilReadDataSourceStr( pDataSource, MYODBCUTIL_DELIM_NULL, pszAttributes ) )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="503" />
      <match u="368" v="368">ODBC_</match>
      <post u="369" v="388">ERROR_INVALID_KEYWORD_VALUE, "Data Source string seems invalid." );
        goto exitConfigDSN;
    }

    /*!
        ODBC RULE

        DRIVER is not a valid attribute for </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="360" v="379">if ( !MYODBCUtilReadDataSourceStr( pDataSource, MYODBCUTIL_DELIM_NULL, pszAttributes ) )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Data Source string seems invalid." );
        goto exitConfigDSN;
    }

    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="503" />
      <match u="380" v="380">ODBC </match>
      <post u="381" v="400">RULE

        DRIVER is not a valid attribute for ConfigDSN().
        Also; ConfigDSN may not delete or change the value of the </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="384" v="403">not a valid attribute for ConfigDSN().
        Also; ConfigDSN may not delete or change the value of the Driver keyword...
        when </pre>
      <content type="TEXT" name="snippet" u="35" v="503" />
      <match u="404" v="404">ODBC_</match>
      <post u="405" v="424">CONFIG_DSN.
    */
    if ( pDataSource->pszDRIVER )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "DRIVER is an invalid attribute." );
        goto exitConfigDSN;
    }

    /*!
        ODBC RULE

        </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="391" v="410">ConfigDSN may not delete or change the value of the Driver keyword...
        when ODBC_CONFIG_DSN.
    */
    if ( pDataSource->pszDRIVER )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="503" />
      <match u="411" v="411">ODBC_</match>
      <post u="412" v="431">ERROR_INVALID_KEYWORD_VALUE, "DRIVER is an invalid attribute." );
        goto exitConfigDSN;
    }

    /*!
        ODBC RULE

        Driver description (usually the name of the </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="403" v="422">when ODBC_CONFIG_DSN.
    */
    if ( pDataSource->pszDRIVER )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "DRIVER is an invalid attribute." );
        goto exitConfigDSN;
    }

    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="503" />
      <match u="423" v="423">ODBC </match>
      <post u="424" v="443">RULE

        Driver description (usually the name of the associated DBMS) presented to users 
        instead of the physical driver name.
    */    
    if ( !</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="427" v="446">usually the name of the associated DBMS) presented to users 
        instead of the physical driver name.
    */    
    if ( !pszDriver || !(*pszDriver) )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="503" />
      <match u="447" v="447">ODBC_</match>
      <post u="448" v="467">ERROR_INVALID_KEYWORD_VALUE, "Need driver name." );
        goto exitConfigDSN;
    }

    pDataSource->pszDRIVER = (char *)strdup( pszDriver );

    switch ( nRequest )
    {
        case ODBC_ADD_DSN:
            </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="445" v="464">pszDriver) )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Need driver name." );
        goto exitConfigDSN;
    }

    pDataSource->pszDRIVER = (char *)strdup( pszDriver );

    switch ( nRequest )
    {
        case </pre>
      <content type="TEXT" name="snippet" u="35" v="503" />
      <match u="465" v="465">ODBC_</match>
      <post u="466" v="485">ADD_DSN:
            bReturn = MYODBCSetupConfigDSNAdd( hWnd, pDataSource );
            break;
        case ODBC_CONFIG_DSN:
            bReturn = MYODBCSetupConfigDSNEdit( hWnd, pDataSource );
            break;
        case ODBC_REMOVE_DSN:
            </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="454" v="473">name." );
        goto exitConfigDSN;
    }

    pDataSource->pszDRIVER = (char *)strdup( pszDriver );

    switch ( nRequest )
    {
        case ODBC_ADD_DSN:
            bReturn = MYODBCSetupConfigDSNAdd( hWnd, pDataSource );
            break;
        case </pre>
      <content type="TEXT" name="snippet" u="35" v="503" />
      <match u="474" v="474">ODBC_</match>
      <post u="475" v="494">CONFIG_DSN:
            bReturn = MYODBCSetupConfigDSNEdit( hWnd, pDataSource );
            break;
        case ODBC_REMOVE_DSN:
            bReturn = MYODBCSetupConfigDSNRemove( pDataSource );
            break;
        default:
            SQLPostInstallerError( ODBC_ERROR_INVALID_</post>
    </solution>
    <solution rank="9" score="1">
      <pre u="463" v="482">nRequest )
    {
        case ODBC_ADD_DSN:
            bReturn = MYODBCSetupConfigDSNAdd( hWnd, pDataSource );
            break;
        case ODBC_CONFIG_DSN:
            bReturn = MYODBCSetupConfigDSNEdit( hWnd, pDataSource );
            break;
        case </pre>
      <content type="TEXT" name="snippet" u="35" v="503" />
      <match u="483" v="483">ODBC_</match>
      <post u="484" v="503">REMOVE_DSN:
            bReturn = MYODBCSetupConfigDSNRemove( pDataSource );
            break;
        default:
            SQLPostInstallerError( ODBC_ERROR_INVALID_REQUEST_TYPE, "Invalid request." );
    }

exitConfigDSN:
    MYODBCUtilFreeDataSource( pDataSource );

    return bReturn;
}     



</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... DSN).

            This function should be called from the ODBC Administrator
            program when our driver is being used  ... if ( !MYODBCUtilReadDataSourceStr( pDataSource, MYODBCUTIL_DELIM_NULL, pszAttributes ) )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Data Source string seems  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupConfigDSNEdit.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupConfigDSNEdit.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="84" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="203" v="222">This function uses the current SQLSetConfigMode().
*/    
BOOL MYODBCSetupConfigDSNEdit( HWND hWnd, MYODBCUTIL_DATASOURCE *pDataSource )
{
    pDataSource->nMode = MYODBCUTIL_DATASOURCE_MODE_DSN_EDIT;

    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="478" />
      <match u="223" v="223">ODBC </match>
      <post u="224" v="243">RULE

        To modify a data source, a data source name must be passed to ConfigDSN in 
        lpszAttributes.
    */    
    if ( !pDataSource->pszDSN )
    {
        </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="225" v="244">To modify a data source, a data source name must be passed to ConfigDSN in 
        lpszAttributes.
    */    
    if ( !pDataSource->pszDSN )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="478" />
      <match u="245" v="245">ODBC_</match>
      <post u="246" v="265">ERROR_INVALID_KEYWORD_VALUE, "Missing DSN attribute." );
        return FALSE;
    }

    if ( !(*pDataSource->pszDSN) )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Missing DSN </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="239" v="258">in 
        lpszAttributes.
    */    
    if ( !pDataSource->pszDSN )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Missing DSN attribute." );
        return FALSE;
    }

    if ( !(*pDataSource->pszDSN) )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="478" />
      <match u="259" v="259">ODBC_</match>
      <post u="260" v="279">ERROR_INVALID_KEYWORD_VALUE, "Missing DSN attribute value." );
        return FALSE;
    }

    /*!
        ODBC RULE

        ConfigDSN should call SQLValidDSN to check the length </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="250" v="269">Missing DSN attribute." );
        return FALSE;
    }

    if ( !(*pDataSource->pszDSN) )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Missing DSN attribute value." );
        return FALSE;
    }

    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="478" />
      <match u="270" v="270">ODBC </match>
      <post u="271" v="290">RULE

        ConfigDSN should call SQLValidDSN to check the length of the data source 
        name and to verify that no invalid </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="297" v="316">MYODBC RULE
         
        Assumption is that this also checks to ensure we are not trying to create 
        a DSN using an </pre>
      <content type="TEXT" name="snippet" u="35" v="478" />
      <match u="317" v="317">odbc.</match>
      <post u="318" v="337">ini reserved section name. 
    */
    if ( !SQLValidDSN( pDataSource->pszDSN ) )
    {
        SQLPostInstallerError( ODBC_ERROR_REQUEST_FAILED, "DSN contains illegal characters or length does </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="307" v="326">we are not trying to create 
        a DSN using an odbc.ini reserved section name. 
    */
    if ( !SQLValidDSN( pDataSource->pszDSN ) )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="478" />
      <match u="327" v="327">ODBC_</match>
      <post u="328" v="347">ERROR_REQUEST_FAILED, "DSN contains illegal characters or length does not make sense." );
        return FALSE;
    }

    /*!
        ODBC RULE

        ConfigDSN checks that </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="323" v="342">SQLValidDSN( pDataSource->pszDSN ) )
    {
        SQLPostInstallerError( ODBC_ERROR_REQUEST_FAILED, "DSN contains illegal characters or length does not make sense." );
        return FALSE;
    }

    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="478" />
      <match u="343" v="343">ODBC </match>
      <post u="344" v="363">RULE

        ConfigDSN checks that the data source name is in the Odbc.ini file (or 
        registry).
    */
    if ( !MYODBCUtilDSNExists( pDataSource->pszDSN ) )
    {
        </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="335" v="354">or length does not make sense." );
        return FALSE;
    }

    /*!
        ODBC RULE

        ConfigDSN checks that the data source name is in the </pre>
      <content type="TEXT" name="snippet" u="35" v="478" />
      <match u="355" v="355">Odbc.</match>
      <post u="356" v="375">ini file (or 
        registry).
    */
    if ( !MYODBCUtilDSNExists( pDataSource->pszDSN ) )
    {
        SQLPostInstallerError( ODBC_ERROR_REQUEST_FAILED, "DSN does not exist." );
        return FALSE;
    }

    /* merge </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="345" v="364">ConfigDSN checks that the data source name is in the Odbc.ini file (or 
        registry).
    */
    if ( !MYODBCUtilDSNExists( pDataSource->pszDSN ) )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="478" />
      <match u="365" v="365">ODBC_</match>
      <post u="366" v="385">ERROR_REQUEST_FAILED, "DSN does not exist." );
        return FALSE;
    }

    /* merge in any missing attributes we can find in the system </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="371" v="390">not exist." );
        return FALSE;
    }

    /* merge in any missing attributes we can find in the system information */
    MYODBCUtilReadDataSource( pDataSource, pDataSource->pszDSN );

    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="478" />
      <match u="391" v="391">ODBC </match>
      <post u="392" v="411">RULE

        If hwndParent is not null, ConfigDSN displays a dialog box using the 
        information in lpszAttributes; for information not in </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... pDataSource )
{
    pDataSource->nMode = MYODBCUTIL_DATASOURCE_MODE_DSN_EDIT;

    /*!
        ODBC RULE

        To modify a data source, a data  ... to ConfigDSN in 
        lpszAttributes.
    */    
    if ( !pDataSource->pszDSN )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Missing DSN attribute." );
        return  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupConfigDSNAdd.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupConfigDSNAdd.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="98" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="203" v="222">This function uses the current SQLSetConfigMode().
*/    
BOOL MYODBCSetupConfigDSNAdd( HWND hWnd, MYODBCUTIL_DATASOURCE *pDataSource )
{
    pDataSource->nMode = MYODBCUTIL_DATASOURCE_MODE_DSN_ADD;

    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="553" />
      <match u="223" v="223">ODBC </match>
      <post u="224" v="243">RULE

        We must have a driver name.
    */    
    if ( !pDataSource->pszDRIVER )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_NAME, "Missing driver name." );
        return FALSE;
    }
    </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="215" v="234">pDataSource )
{
    pDataSource->nMode = MYODBCUTIL_DATASOURCE_MODE_DSN_ADD;

    /*!
        ODBC RULE

        We must have a driver name.
    */    
    if ( !pDataSource->pszDRIVER )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="553" />
      <match u="235" v="235">ODBC_</match>
      <post u="236" v="255">ERROR_INVALID_NAME, "Missing driver name." );
        return FALSE;
    }
    if ( !(*pDataSource->pszDRIVER) )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Missing driver name </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="228" v="247">a driver name.
    */    
    if ( !pDataSource->pszDRIVER )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_NAME, "Missing driver name." );
        return FALSE;
    }
    if ( !(*pDataSource->pszDRIVER) )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="553" />
      <match u="248" v="248">ODBC_</match>
      <post u="249" v="268">ERROR_INVALID_KEYWORD_VALUE, "Missing driver name value." );
        return FALSE;
    }

    /*! 
        \todo 

        Use pDataSource->pszDriverFileName to get pDataSource->pszDRIVER
    */

    /*!
        ODBC RULE

        </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="247" v="266">SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Missing driver name value." );
        return FALSE;
    }

    /*! 
        \todo 

        Use pDataSource->pszDriverFileName to get pDataSource->pszDRIVER
    */

    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="553" />
      <match u="267" v="267">ODBC </match>
      <post u="268" v="287">RULE

        If a data source name is passed to ConfigDSN in lpszAttributes, ConfigDSN 
        checks that the name is valid.
    */    
    if ( </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="270" v="289">a data source name is passed to ConfigDSN in lpszAttributes, ConfigDSN 
        checks that the name is valid.
    */    
    if ( pDataSource->pszDSN )
    {
        /*!
            </pre>
      <content type="TEXT" name="snippet" u="35" v="553" />
      <match u="290" v="290">ODBC </match>
      <post u="291" v="310">RULE

            ConfigDSN should call SQLValidDSN to check the length of the data source 
            name and to verify that no invalid </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="317" v="336">MYODBC RULE
             
            Assumption is that this also checks to ensure we are not trying to create 
            a DSN using an </pre>
      <content type="TEXT" name="snippet" u="35" v="553" />
      <match u="337" v="337">odbc.</match>
      <post u="338" v="357">ini reserved section name. 
        */
        if ( !SQLValidDSN( pDataSource->pszDSN ) )
        {
            SQLPostInstallerError( ODBC_ERROR_REQUEST_FAILED, "DSN contains illegal characters or length does </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="327" v="346">we are not trying to create 
            a DSN using an odbc.ini reserved section name. 
        */
        if ( !SQLValidDSN( pDataSource->pszDSN ) )
        {
            SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="553" />
      <match u="347" v="347">ODBC_</match>
      <post u="348" v="367">ERROR_REQUEST_FAILED, "DSN contains illegal characters or length does not make sense." );
            return FALSE;
        }
    }

    /*!
        ODBC RULE

        If lpszAttributes contains </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="343" v="362">SQLValidDSN( pDataSource->pszDSN ) )
        {
            SQLPostInstallerError( ODBC_ERROR_REQUEST_FAILED, "DSN contains illegal characters or length does not make sense." );
            return FALSE;
        }
    }

    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="553" />
      <match u="363" v="363">ODBC </match>
      <post u="364" v="383">RULE

        If lpszAttributes contains enough information to connect to a data source, 
        ConfigDSN can add the data source or display </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="430" v="449">the user.
    */
    /*!
        MYODBC RULE

        We always show the dialog if given hWnd.
    */    
    if ( hWnd )
    {
        if ( !MYODBCSetupDataSourceConfig( hWnd, pDataSource ) )
            return FALSE;
    }

    /*!
        </pre>
      <content type="TEXT" name="snippet" u="35" v="553" />
      <match u="450" v="450">ODBC </match>
      <post u="451" v="470">RULE
        
        If ConfigDSN cannot get complete connection information for a data source, it 
        returns FALSE.
    */
    /*!
        MYODBC RULE

        We want pszDriver </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="464" v="483">returns FALSE.
    */
    /*!
        MYODBC RULE

        We want pszDriver and a DSN attribute - we can default the rest.
    */    
    if ( !pDataSource->pszDSN )
    {
        SQLPostInstallerError( </pre>
      <content type="TEXT" name="snippet" u="35" v="553" />
      <match u="484" v="484">ODBC_</match>
      <post u="485" v="504">ERROR_INVALID_KEYWORD_VALUE, "Missing DSN attribute." );
        return FALSE;
    }

    if ( !(*pDataSource->pszDSN) )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_KEYWORD_VALUE, "Missing DSN </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... pDataSource )
{
    pDataSource->nMode = MYODBCUTIL_DATASOURCE_MODE_DSN_ADD;

    /*!
        ODBC RULE

        We must have a driver name.
    */    
    if ( !pDataSource->pszDRIVER )
    {
        SQLPostInstallerError( ODBC_ERROR_INVALID_NAME, "Missing driver name." );
        return FALSE;
    }
     ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupDataSourceDialog.cpp"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupDataSourceDialog.cpp/"
  graph-id-high-water="0" priority="0" vertex="0" i="107" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="273" v="292">with online help
void MYODBCSetupDataSourceDialog::slotHelp()
{
    QProcess  * pprocess    = new QProcess( this );
    QString     stringURL   = "http://dev.mysql.com/doc/mysql/en/</pre>
      <content type="TEXT" name="snippet" u="35" v="3167" />
      <match u="293" v="293">ODBC_</match>
      <post u="294" v="313">Connector.html";

#ifdef Q_WS_WIN
    pprocess->addArgument( "c:\\program files\\internet explorer\\IEXPLORE.EXE" );
    pprocess->addArgument( stringURL );
    if ( !pprocess-></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="518" v="537"><![CDATA[ptab1->plineeditUser->setFocus();
                QMessageBox::warning( this, "MyODBC", tr("Missing User ID"), tr("&amp;Ok"), QString::null, QString::null, 0, 1 );
                return;
            }

            /*!
                ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="3167" />
      <match u="538" v="538">ODBC </match>
      <post u="539" v="558">RULE
        
                If the data source name matches an existing data source name and hwndParent is null, 
                ConfigDSN overwrites the existing </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="1729" v="1748"><![CDATA[ptextbrowserAssist, SLOT(setText(const QString&amp;)) );

    doApplyMode();
}

void MYODBCSetupDataSourceDialog::doApplyMode()
{
    switch ( pDataSource->nMode )
    {
        case MYODBCUTIL_DATASOURCE_MODE_DSN_EDIT:
            setCaption( "Connector/]]></pre>
      <content type="TEXT" name="snippet" u="35" v="3167" />
      <match u="1749" v="1749">ODBC - </match>
      <post u="1750" v="1769">Configure Data Source Name" );
            break;
        case MYODBCUTIL_DATASOURCE_MODE_DSN_ADD:
            setCaption( "Connector/ODBC - Add Data Source Name" );
            break;
        case </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="1743" v="1762">DATASOURCE_MODE_DSN_EDIT:
            setCaption( "Connector/ODBC - Configure Data Source Name" );
            break;
        case MYODBCUTIL_DATASOURCE_MODE_DSN_ADD:
            setCaption( "Connector/</pre>
      <content type="TEXT" name="snippet" u="35" v="3167" />
      <match u="1763" v="1763">ODBC - </match>
      <post u="1764" v="1783">Add Data Source Name" );
            break;
        case MYODBCUTIL_DATASOURCE_MODE_DSN_VIEW:
            setCaption( "Connector/ODBC - View Data Source Name" );
            break;
        case </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="1757" v="1776">DATASOURCE_MODE_DSN_ADD:
            setCaption( "Connector/ODBC - Add Data Source Name" );
            break;
        case MYODBCUTIL_DATASOURCE_MODE_DSN_VIEW:
            setCaption( "Connector/</pre>
      <content type="TEXT" name="snippet" u="35" v="3167" />
      <match u="1777" v="1777">ODBC - </match>
      <post u="1778" v="1797">View Data Source Name" );
            break;
        case MYODBCUTIL_DATASOURCE_MODE_DRIVER_CONNECT:
            setCaption( "Connector/ODBC - Driver Connect" );
            ppushbuttonTest->hide();
            switch ( pDataSource-></post>
    </solution>
    <solution rank="5" score="1">
      <pre u="1771" v="1790">DATASOURCE_MODE_DSN_VIEW:
            setCaption( "Connector/ODBC - View Data Source Name" );
            break;
        case MYODBCUTIL_DATASOURCE_MODE_DRIVER_CONNECT:
            setCaption( "Connector/</pre>
      <content type="TEXT" name="snippet" u="35" v="3167" />
      <match u="1791" v="1791">ODBC - </match>
      <post u="1792" v="1811">Driver Connect" );
            ppushbuttonTest->hide();
            switch ( pDataSource->nPrompt )
            {
                case MYODBCUTIL_DATASOURCE_PROMPT_COMPLETE:
                    /*
                        ODBC RULE

                        We assume caller has already tried </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="1784" v="1803">MYODBCUTIL_DATASOURCE_MODE_DRIVER_CONNECT:
            setCaption( "Connector/ODBC - Driver Connect" );
            ppushbuttonTest->hide();
            switch ( pDataSource->nPrompt )
            {
                case MYODBCUTIL_DATASOURCE_PROMPT_COMPLETE:
                    /*
                        </pre>
      <content type="TEXT" name="snippet" u="35" v="3167" />
      <match u="1804" v="1804">ODBC </match>
      <post u="1805" v="1824">RULE

                        We assume caller has already tried to connect and failed. So we 
                        do same thing as PROMPT.
                    */    
                case MYODBCUTIL_</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="1849" v="1868">plabelDataSourceName->hide();
                        ptab1->plineeditDataSourceName->hide();

                        ptab1->plabelDescription->hide();
                        ptab1->plineeditDescription->hide();

                        ptab1->plineeditUser->setFocus();
                    }
                    break;
                case MYODBCUTIL_DATASOURCE_PROMPT_REQUIRED:
                    /*
                        </pre>
      <content type="TEXT" name="snippet" u="35" v="3167" />
      <match u="1869" v="1869">ODBC </match>
      <post u="1870" v="1889">RULE

                        We assume caller has already tried to connect and failed. So we 
                        prompt - but only with the required fields.
                    */    
                    </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="1987" v="2006">setDisabled( true );
                    }

                    ptab1->plineeditUser->setFocus();
                    break;
                case MYODBCUTIL_DATASOURCE_PROMPT_NOPROMPT:
                    /* this should not happen */
                    break;
            }
            break;
        default:
            setCaption( "Connector/</pre>
      <content type="TEXT" name="snippet" u="35" v="3167" />
      <match u="2007" v="2007">ODBC - </match>
      <post u="2008" v="2027">Unknown Mode" );
    }
}

/*!
    \brief  Try connect/disconnect.

            Here we try the connect/disconnect by calling into
            the driver manager. This is </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="2022" v="2041">into
            the driver manager. This is a good test and is used when
            we are working on behalf of the </pre>
      <content type="TEXT" name="snippet" u="35" v="3167" />
      <match u="2042" v="2042">ODBC </match>
      <post u="2043" v="2062">administrator but
            we can not do a test this way when we are being called by
            the driver because we </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... stringURL   = "http://dev.mysql.com/doc/mysql/en/ODBC_Connector.html";

#ifdef Q_WS_WIN
    pprocess->addArgument( " ... Ok"), QString::null, QString::null, 0, 1 );
                return;
            }

            /*!
                ODBC RULE
        
                If the data source name matches an  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/myodbc3.rsp"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/myodbc3.rsp/"
  graph-id-high-water="0" priority="0" vertex="0" i="130" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="36" v="37">INSTALLDRIVER "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="117" />
      <match u="38" v="38">ODBC </match>
      <post u="39" v="58">3.51 Driver|Driver=myodbc3.dll|Setup=myodbc3.dll||"
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "APILevel=2" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="36" v="48">INSTALLDRIVER "MySQL ODBC 3.51 Driver|Driver=myodbc3.dll|Setup=myodbc3.dll||"
CONFIGDRIVER "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="117" />
      <match u="49" v="49">ODBC </match>
      <post u="50" v="69">3.51 Driver" "APILevel=2" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "ConnectFunctions=YYN" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "DriverODBCVer=03.51"
CONFIGDRIVER "</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="36" v="55">INSTALLDRIVER "MySQL ODBC 3.51 Driver|Driver=myodbc3.dll|Setup=myodbc3.dll||"
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "APILevel=2" 
CONFIGDRIVER "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="117" />
      <match u="56" v="56">ODBC </match>
      <post u="57" v="76">3.51 Driver" "ConnectFunctions=YYN" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "DriverODBCVer=03.51"
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "FileUsage=0" 
CONFIGDRIVER "</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="43" v="62">dll|Setup=myodbc3.dll||"
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "APILevel=2" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "ConnectFunctions=YYN" 
CONFIGDRIVER "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="117" />
      <match u="63" v="63">ODBC </match>
      <post u="64" v="83">3.51 Driver" "DriverODBCVer=03.51"
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "FileUsage=0" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "FileExtns=*.txt" 
CONFIGDRIVER "</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="51" v="70">Driver" "APILevel=2" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "ConnectFunctions=YYN" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "DriverODBCVer=03.51"
CONFIGDRIVER "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="117" />
      <match u="71" v="71">ODBC </match>
      <post u="72" v="91">3.51 Driver" "FileUsage=0" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "FileExtns=*.txt" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "SQLLevel=1" 
CONFIGDRIVER "MySQL </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="58" v="77">Driver" "ConnectFunctions=YYN" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "DriverODBCVer=03.51"
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "FileUsage=0" 
CONFIGDRIVER "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="117" />
      <match u="78" v="78">ODBC </match>
      <post u="79" v="98">3.51 Driver" "FileExtns=*.txt" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "SQLLevel=1" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "CPTimeout=60"
CONFIGDSN "MySQL </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="65" v="84">Driver" "DriverODBCVer=03.51"
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "FileUsage=0" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "FileExtns=*.txt" 
CONFIGDRIVER "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="117" />
      <match u="85" v="85">ODBC </match>
      <post u="86" v="105">3.51 Driver" "SQLLevel=1" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "CPTimeout=60"
CONFIGDSN "MySQL ODBC 3.51 Driver" "DSN=myodbc3-test;Description=</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="72" v="91">3.51 Driver" "FileUsage=0" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "FileExtns=*.txt" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "SQLLevel=1" 
CONFIGDRIVER "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="117" />
      <match u="92" v="92">ODBC </match>
      <post u="93" v="112">3.51 Driver" "CPTimeout=60"
CONFIGDSN "MySQL ODBC 3.51 Driver" "DSN=myodbc3-test;Description=MySQL ODBC 3.51 DSN;SERVER=localhost;User=</post>
    </solution>
    <solution rank="8" score="1">
      <pre u="79" v="98">3.51 Driver" "FileExtns=*.txt" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "SQLLevel=1" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "CPTimeout=60"
CONFIGDSN "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="117" />
      <match u="99" v="99">ODBC </match>
      <post u="100" v="117">3.51 Driver" "DSN=myodbc3-test;Description=MySQL ODBC 3.51 DSN;SERVER=localhost;User=root;DB=test;Port=3306||"
</post>
    </solution>
    <solution rank="9" score="1">
      <pre u="87" v="106">Driver" "SQLLevel=1" 
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "CPTimeout=60"
CONFIGDSN "MySQL ODBC 3.51 Driver" "DSN=myodbc3-test;Description=MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="117" />
      <match u="107" v="107">ODBC </match>
      <post u="108" v="117">3.51 DSN;SERVER=localhost;User=root;DB=test;Port=3306||"
</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold">INSTALLDRIVER "MySQL ODBC 3.51 Driver|Driver=myodbc3.dll|Setup=myodbc3.dll||"
CONFIGDRIVER "MySQL ODBC 3.51 Driver" "APILevel=2" 
CONFIGDRIVER "MySQL ODBC  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/README"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/README/"
  graph-id-high-water="0" priority="0" vertex="0" i="133" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="34" v="34">+-------------------------------------------------------------+
| Connector/</pre>
      <content type="TEXT" name="snippet" u="33" v="422" />
      <match u="35" v="35">ODBC </match>
      <post u="36" v="55">3.51                                         |
| (C) Copyright MySQL AB 1995-2005                            |
+-------------------------------------------------------------+

INTRODUCTION
---------------------------------------------------------------


This is the source or binary distribution of ODBC for 
MySQL. This </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="34" v="51">+-------------------------------------------------------------+
| Connector/ODBC 3.51                                         |
| (C) Copyright MySQL AB 1995-2005                            |
+-------------------------------------------------------------+

INTRODUCTION
---------------------------------------------------------------


This is the source or binary distribution of </pre>
      <content type="TEXT" name="snippet" u="33" v="422" />
      <match u="52" v="52">ODBC </match>
      <post u="53" v="72">for 
MySQL. This software is distributed under General Public 
License (GPL). For more information, read the files
COPYING and EXCEPTIONS.

</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="70" v="89">COPYING and EXCEPTIONS.

As a special exception to the MyODBC GPL license, one 
is allowed to use MyODBC with any </pre>
      <content type="TEXT" name="snippet" u="33" v="422" />
      <match u="90" v="90">ODBC </match>
      <post u="91" v="110">manager, even 
if the ODBC manager is not GPL. In other words: The 
ODBC manager itself is not affected by </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="75" v="94">special exception to the MyODBC GPL license, one 
is allowed to use MyODBC with any ODBC manager, even 
if the </pre>
      <content type="TEXT" name="snippet" u="33" v="422" />
      <match u="95" v="95">ODBC </match>
      <post u="96" v="115">manager is not GPL. In other words: The 
ODBC manager itself is not affected by the MyODBC 
GPL license.

MySQL, </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="84" v="103">allowed to use MyODBC with any ODBC manager, even 
if the ODBC manager is not GPL. In other words: The 
</pre>
      <content type="TEXT" name="snippet" u="33" v="422" />
      <match u="104" v="104">ODBC </match>
      <post u="105" v="124">manager itself is not affected by the MyODBC 
GPL license.

MySQL, the most popular Open Source SQL database, is 
provided </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="129" v="148">AB is a commercial company 
that builds its business providing services around the 
MySQL database.

MySQL provides the support for </pre>
      <content type="TEXT" name="snippet" u="33" v="422" />
      <match u="149" v="149">ODBC </match>
      <post u="150" v="169">by means of MyODBC 
and MyODB 3.51 programs. MyODBC 3.51 is the ODBC driver 
for MySQL which is ODBC 3.5</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="142" v="161">MySQL database.

MySQL provides the support for ODBC by means of MyODBC 
and MyODB 3.51 programs. MyODBC 3.51 is the </pre>
      <content type="TEXT" name="snippet" u="33" v="422" />
      <match u="162" v="162">ODBC </match>
      <post u="163" v="182">driver 
for MySQL which is ODBC 3.5x compliant and MyODBC is 
2.5x compliant.

If you want to ensure </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="148" v="167">for ODBC by means of MyODBC 
and MyODB 3.51 programs. MyODBC 3.51 is the ODBC driver 
for MySQL which is </pre>
      <content type="TEXT" name="snippet" u="33" v="422" />
      <match u="168" v="168">ODBC </match>
      <post u="169" v="188">3.5x compliant and MyODBC is 
2.5x compliant.

If you want to ensure the development of this product, you 
</post>
    </solution>
    <solution rank="8" score="1">
      <pre u="192" v="211">MySQL support and tell that you are 
using MyODBC 3.51 in the comment field!

To get all functionality from the </pre>
      <content type="TEXT" name="snippet" u="33" v="422" />
      <match u="212" v="212">ODBC </match>
      <post u="213" v="232">3.51 driver (like 
transaction support) you should use it against MySQL 
3.23.36 or above. This driver also works with MySQL </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="304" v="323">or zip file containing
the binaries.

How one installs the tar-ball binary distribution varies
depending upon the platform, the </pre>
      <content type="TEXT" name="snippet" u="33" v="422" />
      <match u="324" v="324">ODBC </match>
      <post u="325" v="344">vendor, and the admin's
strategy.

The general steps involved are;

1. copy the driver to the system
2. register </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold">+-------------------------------------------------------------+
| Connector/ODBC 3.51                                         |
| (C) Copyright MySQL AB 1995-2005                            |
+-------------------------------------------------------------+

INTRODUCTION
---------------------------------------------------------------


This is the source or binary distribution of ODBC  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/configure"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/configure/"
  graph-id-high-water="0" priority="0" vertex="0" i="146" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="2372" v="2391">FALSE IMYODBC_TRUE IMYODBC_FALSE uname_prog LD PERL PERL5 myodbc_thread_dir MYSQL_LIB MYSQL_THREADSAFE_LIB iodbc_conf </pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="2392" v="2392">ODBC_</match>
      <post u="2393" v="2412">DM_PATH ODBC_DM_LIB isql myodbc_samples_dir EXTRA_LDFLAGS myodbc_test_dir myodbc_test_linklib LIBOBJS LTLIBOBJS'
ac_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="2375" v="2394">IMYODBC_FALSE uname_prog LD PERL PERL5 myodbc_thread_dir MYSQL_LIB MYSQL_THREADSAFE_LIB iodbc_conf ODBC_DM_PATH </pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="2395" v="2395">ODBC_</match>
      <post u="2396" v="2415">DM_LIB isql myodbc_samples_dir EXTRA_LDFLAGS myodbc_test_dir myodbc_test_linklib LIBOBJS LTLIBOBJS'
ac_subst_files=''

# Initialize </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="5291" v="5310">DIR
  --with-iodbc-includes=DIR Find iODBC headers in DIR
  --with-iodbc-libs=DIR   Find iODBC libraries in DIR
  --with-</pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="5311" v="5311">odbc-</match>
      <post u="5312" v="5331">ini=PATH    Location of system odbc.ini IODBCDIR/etc/odbc.ini
  --with-unixODBC=DIR     Use unixODBC located in DIR
  --with-</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="5297" v="5316">iODBC headers in DIR
  --with-iodbc-libs=DIR   Find iODBC libraries in DIR
  --with-odbc-ini=PATH    Location of system </pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="5317" v="5317">odbc.</match>
      <post u="5318" v="5337">ini IODBCDIR/etc/odbc.ini
  --with-unixODBC=DIR     Use unixODBC located in DIR
  --with-unixODBC-includes=DIR Find unixODBC headers </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="5301" v="5320">with-iodbc-libs=DIR   Find iODBC libraries in DIR
  --with-odbc-ini=PATH    Location of system odbc.ini IODBCDIR/etc/</pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="5321" v="5321">odbc.</match>
      <post u="5322" v="5341">ini
  --with-unixODBC=DIR     Use unixODBC located in DIR
  --with-unixODBC-includes=DIR Find unixODBC headers in DIR
  --with-unixODBC-</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="5330" v="5349">DIR
  --with-unixODBC-includes=DIR Find unixODBC headers in DIR
  --with-unixODBC-libs=DIR Find unixODBC libraries in DIR
  --with-</pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="5350" v="5350">odbc-</match>
      <post u="5351" v="5370">ini=PATH    Location of system odbc.ini UnixODBCDIR/etc/odbc.ini
  --with-debug            Build the debug version default=no
  --with-</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="5336" v="5355">unixODBC headers in DIR
  --with-unixODBC-libs=DIR Find unixODBC libraries in DIR
  --with-odbc-ini=PATH    Location of system </pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="5356" v="5356">odbc.</match>
      <post u="5357" v="5376">ini UnixODBCDIR/etc/odbc.ini
  --with-debug            Build the debug version default=no
  --with-samples          Build the samples default=yes
  --</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="5340" v="5359">with-unixODBC-libs=DIR Find unixODBC libraries in DIR
  --with-odbc-ini=PATH    Location of system odbc.ini UnixODBCDIR/etc/</pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="5360" v="5360">odbc.</match>
      <post u="5361" v="5380">ini
  --with-debug            Build the debug version default=no
  --with-samples          Build the samples default=yes
  --with-ldflags=option   Extra </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="7337" v="7356"><![CDATA[LDFLAGS conftest.$ac_ext $LIBS >&amp;5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu



















#AC_PREREQ(2.53)
#AC_INIT([MySQL ]]></pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="7357" v="7357">ODBC </match>
      <post u="7358" v="7377">3.51 Driver],[3.51.11],[myodbc@lists.mysql.com],[libmyodbc3])
ac_aux_dir=
for ac_dir in $srcdir $srcdir/.. $srcdir/../..; do
  if </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="105472" v="105491"><![CDATA[log for errors" >&amp;2;}
   { (exit 1); exit 1; }; }
fi

fi
LIBS=$SAVE_LIBS

echo "END OF MYSQL CONFIGURATION"
echo ""
echo "]]></pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="105492" v="105492">ODBC </match>
      <post u="105493" v="105512">DRIVER MANAGER CONFIGURATION - LIBRARIES AND HEADERS"
###################################################################
#                                                                 #
# iODBC                                                           #
#                                                                 #
###################################################################

use_iODBC=no

# Check whether --with-iODBC or --without-iODBC was given.
if </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... dir MYSQL_LIB MYSQL_THREADSAFE_LIB iodbc_conf ODBC_DM_PATH ODBC_DM_LIB isql myodbc_samples_dir EXTRA_LDFLAGS  ... libs=DIR   Find iODBC libraries in DIR
  --with-odbc-ini=PATH    Location of system odbc.ini IODBCDIR/ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/configure.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/configure.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="153" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="177" v="196">mysql.com)               #
# @date       : 2001-Aug-15                                              #
# @product    : myodbc3                                                  #
#                                                                        #
##########################################################################

###################################################################
#                                                                 #
# Initializations                                                 #
#                                                                 #
###################################################################

AC_INIT(driver/myodbc3.c)
#AC_PREREQ(2.53)
#AC_INIT([MySQL </pre>
      <content type="TEXT" name="snippet" u="34" v="2999" />
      <match u="197" v="197">ODBC </match>
      <post u="198" v="217">3.51 Driver],[3.51.11],[myodbc@lists.mysql.com],[libmyodbc3])
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(MyODBC,3.51.11)

myodbc_version=$VERSION
###################################################################
#                                                                 #
# See </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="1843" v="1862">user test program. Please check config.log for errors]) ])
fi
LIBS=$SAVE_LIBS

echo "END OF MYSQL CONFIGURATION"
echo ""
echo "</pre>
      <content type="TEXT" name="snippet" u="34" v="2999" />
      <match u="1863" v="1863">ODBC </match>
      <post u="1864" v="1883">DRIVER MANAGER CONFIGURATION - LIBRARIES AND HEADERS"
###################################################################
#                                                                 #
# iODBC                                                           #
#                                                                 #
###################################################################

use_iODBC=no
AC_ARG_WITH(iODBC,
[  --with-iODBC[=DIR]     Use iODBC located </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="1979" v="1998">x/usr" ||
     test "x$iodbc" = "x/usr/" ||
     test "x$iodbc" = "x/usr/local" ||
     test "x$iodbc" = "x/usr/local/"
   then
     </pre>
      <content type="TEXT" name="snippet" u="34" v="2999" />
      <match u="1999" v="1999">ODBC_</match>
      <post u="2000" v="2019">FLAGS="-isystem"
  fi
fi

# add iodbc version
AC_PATH_PROG(iodbc_conf,iodbc-config,no)
if test "$iodbc_conf" != "no"
</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="2032" v="2051">MSG_CHECKING([for iodbc version])
AC_MSG_RESULT([$iodbc_version])

AC_CHECK_IODBC($iodbc_includes,$iodbc_libs)

AC_ARG_WITH(</pre>
      <content type="TEXT" name="snippet" u="34" v="2999" />
      <match u="2052" v="2052">odbc-</match>
      <post u="2053" v="2072">ini,
[  --with-odbc-ini=PATH    Location of system odbc.ini [IODBCDIR/etc/odbc.ini]],
odbc_ini="$withval",odbc_ini="$iodbc/</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="2035" v="2054">iodbc version])
AC_MSG_RESULT([$iodbc_version])

AC_CHECK_IODBC($iodbc_includes,$iodbc_libs)

AC_ARG_WITH(odbc-ini,
[  --with-</pre>
      <content type="TEXT" name="snippet" u="34" v="2999" />
      <match u="2055" v="2055">odbc-</match>
      <post u="2056" v="2075">ini=PATH    Location of system odbc.ini [IODBCDIR/etc/odbc.ini]],
odbc_ini="$withval",odbc_ini="$iodbc/etc/odbc.ini")

</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="2041" v="2060">version])

AC_CHECK_IODBC($iodbc_includes,$iodbc_libs)

AC_ARG_WITH(odbc-ini,
[  --with-odbc-ini=PATH    Location of system </pre>
      <content type="TEXT" name="snippet" u="34" v="2999" />
      <match u="2061" v="2061">odbc.</match>
      <post u="2062" v="2081">ini [IODBCDIR/etc/odbc.ini]],
odbc_ini="$withval",odbc_ini="$iodbc/etc/odbc.ini")

if test "x$have_iodbcinst" != "xyes"
</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="2045" v="2064">iodbc_includes,$iodbc_libs)

AC_ARG_WITH(odbc-ini,
[  --with-odbc-ini=PATH    Location of system odbc.ini [IODBCDIR/etc/</pre>
      <content type="TEXT" name="snippet" u="34" v="2999" />
      <match u="2065" v="2065">odbc.</match>
      <post u="2066" v="2085">ini]],
odbc_ini="$withval",odbc_ini="$iodbc/etc/odbc.ini")

if test "x$have_iodbcinst" != "xyes"
then
  AC_DEFINE_UNQUOTED(</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="2047" v="2066">iodbc_libs)

AC_ARG_WITH(odbc-ini,
[  --with-odbc-ini=PATH    Location of system odbc.ini [IODBCDIR/etc/odbc.ini]],
</pre>
      <content type="TEXT" name="snippet" u="34" v="2999" />
      <match u="2067" v="2067">odbc_</match>
      <post u="2068" v="2087">ini="$withval",odbc_ini="$iodbc/etc/odbc.ini")

if test "x$have_iodbcinst" != "xyes"
then
  AC_DEFINE_UNQUOTED(SYSTEM_ODBC_</post>
    </solution>
    <solution rank="8" score="1">
      <pre u="2050" v="2069">ARG_WITH(odbc-ini,
[  --with-odbc-ini=PATH    Location of system odbc.ini [IODBCDIR/etc/odbc.ini]],
odbc_ini="$withval",</pre>
      <content type="TEXT" name="snippet" u="34" v="2999" />
      <match u="2070" v="2070">odbc_</match>
      <post u="2071" v="2090">ini="$iodbc/etc/odbc.ini")

if test "x$have_iodbcinst" != "xyes"
then
  AC_DEFINE_UNQUOTED(SYSTEM_ODBC_INI,"$odbc_ini",
                     [</post>
    </solution>
    <solution rank="9" score="1">
      <pre u="2054" v="2073">with-odbc-ini=PATH    Location of system odbc.ini [IODBCDIR/etc/odbc.ini]],
odbc_ini="$withval",odbc_ini="$iodbc/etc/</pre>
      <content type="TEXT" name="snippet" u="34" v="2999" />
      <match u="2074" v="2074">odbc.</match>
      <post u="2075" v="2094">ini")

if test "x$have_iodbcinst" != "xyes"
then
  AC_DEFINE_UNQUOTED(SYSTEM_ODBC_INI,"$odbc_ini",
                     [Define path to system </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... myodbc3.c)
#AC_PREREQ(2.53)
#AC_INIT([MySQL ODBC 3.51 Driver],[3.51.11],[myodbc@lists.mysql.com],[libmyodbc3])
 ... LIBS

echo "END OF MYSQL CONFIGURATION"
echo ""
echo "ODBC DRIVER MANAGER CONFIGURATION - LIBRARIES AND HEADERS"
###################################################################
#                                                                 #
# iODBC                                                           #
#                                                                 #
###################################################################

use_ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/setup.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/setup.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="170" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="235" v="254"><![CDATA[include "odbcinst.h"
#include &lt;string.h>

#ifndef PORTABLE_GUI
#include "dialogs.h"
#endif

#include &lt;winuser.h>

/* Constants */
const char EMPTYSTR  []= "";

/* ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="3115" />
      <match u="255" v="255">ODBC.</match>
      <post u="256" v="275">INI keywords */
const char ODBC_INI    []="ODBC.INI";  /* ODBC initialization file */
const char INI_KDESC   []="Description"; /* Data source description */
const </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="240" v="259"><![CDATA[h>

#ifndef PORTABLE_GUI
#include "dialogs.h"
#endif

#include &lt;winuser.h>

/* Constants */
const char EMPTYSTR  []= "";

/* ODBC.INI keywords */
const char ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="3115" />
      <match u="260" v="260">ODBC_</match>
      <post u="261" v="280">INI    []="ODBC.INI";  /* ODBC initialization file */
const char INI_KDESC   []="Description"; /* Data source description */
const char INI_KDB     []="Database";
const </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="242" v="261"><![CDATA[PORTABLE_GUI
#include "dialogs.h"
#endif

#include &lt;winuser.h>

/* Constants */
const char EMPTYSTR  []= "";

/* ODBC.INI keywords */
const char ODBC_INI    []="]]></pre>
      <content type="TEXT" name="snippet" u="35" v="3115" />
      <match u="262" v="262">ODBC.</match>
      <post u="263" v="282">INI";  /* ODBC initialization file */
const char INI_KDESC   []="Description"; /* Data source description */
const char INI_KDB     []="Database";
const char INI_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="244" v="263"><![CDATA[include "dialogs.h"
#endif

#include &lt;winuser.h>

/* Constants */
const char EMPTYSTR  []= "";

/* ODBC.INI keywords */
const char ODBC_INI    []="ODBC.INI";  /* ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="3115" />
      <match u="264" v="264">ODBC </match>
      <post u="265" v="284">initialization file */
const char INI_KDESC   []="Description"; /* Data source description */
const char INI_KDB     []="Database";
const char INI_KSERVER []="Server";
</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="318" v="337">char szTranslateName[]= "TranslationName";
const char szTranslateDLL[]= "TranslationDLL";
const char szTranslateOption[]= "TranslationOption";
const char szUnkTrans[]= "Unknown Translator";
const char szDriverIniKey[]= "SOFTWARE\\</pre>
      <content type="TEXT" name="snippet" u="35" v="3115" />
      <match u="338" v="338">ODBC\\</match>
      <post u="339" v="358">ODBCINST.INI\\MySQL ODBC 3.51 Driver";
const char szHelpFileKey[]= "DSNHelpFile";

/* Attribute string look-up table (maps keys to associated indexes) */
</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="322" v="341">char szTranslateDLL[]= "TranslationDLL";
const char szTranslateOption[]= "TranslationOption";
const char szUnkTrans[]= "Unknown Translator";
const char szDriverIniKey[]= "SOFTWARE\\ODBC\\ODBCINST.INI\\MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="3115" />
      <match u="342" v="342">ODBC </match>
      <post u="343" v="362">3.51 Driver";
const char szHelpFileKey[]= "DSNHelpFile";

/* Attribute string look-up table (maps keys to associated indexes) */
static struct
{
  char  szKey[</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="645" v="664">aAttr[KEY_DESC].fSupplied)
    SQLGetPrivateProfileString(lpszDSN, INI_KDESC,
                               EMPTYSTR,
                               lpsetupdlg->aAttr[KEY_DESC].szAttr,
                               sizeof(lpsetupdlg->aAttr[KEY_DESC].szAttr),
                               </pre>
      <content type="TEXT" name="snippet" u="35" v="3115" />
      <match u="665" v="665">ODBC_</match>
      <post u="666" v="685">INI);
  if (!lpsetupdlg->aAttr[KEY_DB].fSupplied)
    SQLGetPrivateProfileString(lpszDSN, INI_KDB,
                               lpszDSN,
                               lpsetupdlg->aAttr[KEY_DB].szAttr,
                               sizeof(lpsetupdlg->aAttr[</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="669" v="688">aAttr[KEY_DB].fSupplied)
    SQLGetPrivateProfileString(lpszDSN, INI_KDB,
                               lpszDSN,
                               lpsetupdlg->aAttr[KEY_DB].szAttr,
                               sizeof(lpsetupdlg->aAttr[KEY_DB].szAttr),
                               </pre>
      <content type="TEXT" name="snippet" u="35" v="3115" />
      <match u="689" v="689">ODBC_</match>
      <post u="690" v="709">INI);
  if (!lpsetupdlg->aAttr[KEY_SERVER].fSupplied)
    SQLGetPrivateProfileString(lpszDSN, INI_KSERVER,
                               EMPTYSTR,
                               lpsetupdlg->aAttr[KEY_SERVER].szAttr,
                               sizeof(lpsetupdlg->aAttr[</post>
    </solution>
    <solution rank="8" score="1">
      <pre u="693" v="712">aAttr[KEY_SERVER].fSupplied)
    SQLGetPrivateProfileString(lpszDSN, INI_KSERVER,
                               EMPTYSTR,
                               lpsetupdlg->aAttr[KEY_SERVER].szAttr,
                               sizeof(lpsetupdlg->aAttr[KEY_SERVER].szAttr),
                               </pre>
      <content type="TEXT" name="snippet" u="35" v="3115" />
      <match u="713" v="713">ODBC_</match>
      <post u="714" v="733">INI);
  if (!lpsetupdlg->aAttr[KEY_USER].fSupplied)
    SQLGetPrivateProfileString(lpszDSN, INI_KUSER,
                               EMPTYSTR,
                               lpsetupdlg->aAttr[KEY_USER].szAttr,
                               sizeof(lpsetupdlg->aAttr[</post>
    </solution>
    <solution rank="9" score="1">
      <pre u="717" v="736">aAttr[KEY_USER].fSupplied)
    SQLGetPrivateProfileString(lpszDSN, INI_KUSER,
                               EMPTYSTR,
                               lpsetupdlg->aAttr[KEY_USER].szAttr,
                               sizeof(lpsetupdlg->aAttr[KEY_USER].szAttr),
                               </pre>
      <content type="TEXT" name="snippet" u="35" v="3115" />
      <match u="737" v="737">ODBC_</match>
      <post u="738" v="757">INI);
  if (!lpsetupdlg->aAttr[KEY_PASSWORD].fSupplied)
    SQLGetPrivateProfileString(lpszDSN, INI_KPASSWORD,
                               EMPTYSTR,
                               lpsetupdlg->aAttr[KEY_PASSWORD].szAttr,
                               sizeof(lpsetupdlg->aAttr[</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... endif

#include &lt;winuser.h>

/* Constants */
const char EMPTYSTR  []= "";

/* ODBC.INI keywords */
const char ODBC_INI    []="ODBC.INI";  /* ODBC initialization file */
const char INI_KDESC   []=" ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/connect.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/connect.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="171" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="203" v="222">code for connection *
 *									   *
 * @author     : MySQL AB (monty@mysql.com, venu@mysql.com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following </pre>
      <content type="TEXT" name="snippet" u="35" v="4637" />
      <match u="223" v="223">ODBC </match>
      <post u="224" v="243"><![CDATA[APIs are implemented in this file:		   *
 *									   *
 *   SQLConnect		(ISO 92)					   *
 *   SQLDriverConnect	(ODBC)						   *
 *   SQLDisconnect	(ISO 92)					   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

#ifndef _UNIX_
#include &lt;]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="214" v="233">com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLConnect		(ISO 92)					   *
 *   SQLDriverConnect	(</pre>
      <content type="TEXT" name="snippet" u="35" v="4637" />
      <match u="234" v="234">ODBC)						   *
 *   </match>
      <post u="235" v="254"><![CDATA[SQLDisconnect	(ISO 92)					   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

#ifndef _UNIX_
#include &lt;odbcinst.h>
#endif

#include "../util/MYODBCUtil.h"

#ifdef PORTABLE_GUI
/* #include "../]]></post>
    </solution>
    <solution rank="2" score="1">
      <pre u="364" v="383"><![CDATA[Transactions are not enabled, Option value SQL_AUTOCOMMIT_OFF changed to \
SQL_AUTOCOMMIT_ON",
			    0);
    else if (autocommit_on(dbc) &amp;&amp;
	     (]]></pre>
      <content type="TEXT" name="snippet" u="35" v="4637" />
      <match u="384" v="384">odbc_</match>
      <post u="385" v="404"><![CDATA[stmt(dbc,"SET AUTOCOMMIT=0") != SQL_SUCCESS))
      DBUG_RETURN(SQL_ERROR);
  }
  else if ((dbc->commit_flag == CHECK_AUTOCOMMIT_ON) &amp;&amp;
	   trans_]]></post>
    </solution>
    <solution rank="3" score="1">
      <pre u="391" v="410"><![CDATA[SUCCESS))
      DBUG_RETURN(SQL_ERROR);
  }
  else if ((dbc->commit_flag == CHECK_AUTOCOMMIT_ON) &amp;&amp;
	   trans_supported(dbc) &amp;&amp; !autocommit_on(dbc))
  {
    if (]]></pre>
      <content type="TEXT" name="snippet" u="35" v="4637" />
      <match u="411" v="411">odbc_</match>
      <post u="412" v="431"><![CDATA[stmt(dbc,"SET AUTOCOMMIT=1") != SQL_SUCCESS)
      DBUG_RETURN(SQL_ERROR);
  }

  if (!(dbc->txn_isolation &amp; DEFAULT_TXN_ISOLATION))/* TXN_ISOLATION */
  {
    ]]></post>
    </solution>
    <solution rank="4" score="1">
      <pre u="479" v="498">DBUG_PRINT("info",("setting transaction isolation to level '%s'",
			 level));
      sprintf(buff,"SET SESSION TRANSACTION ISOLATION LEVEL %s",level);
      if (</pre>
      <content type="TEXT" name="snippet" u="35" v="4637" />
      <match u="499" v="499">odbc_</match>
      <post u="500" v="519">stmt(dbc,buff) != SQL_SUCCESS)
	error= SQL_ERROR;
    }
    else
    {
      DBUG_PRINT("info",("SQL_ATTR_TXN_ISOLATION %ld ignored",
			 dbc->txn_</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="536" v="555">flag
*/

ulong get_client_flag(MYSQL *mysql, ulong option_flag,uint connect_timeout,
		      char *init_stmt)
{
  ulong client_flag= CLIENT_</pre>
      <content type="TEXT" name="snippet" u="35" v="4637" />
      <match u="556" v="556">ODBC;
  </match>
      <post u="557" v="576"><![CDATA[DBUG_ENTER("get_client_flag");

  mysql_init(mysql);

  if (option_flag &amp; (FLAG_FOUND_ROWS | FLAG_SAFE))
    client_flag|=   CLIENT_FOUND_]]></post>
    </solution>
    <solution rank="6" score="1">
      <pre u="632" v="651"><![CDATA[mysql,MYSQL_OPT_NAMED_PIPE,NullS);
#endif

  if (option_flag &amp; FLAG_USE_MYCNF)
    mysql_options(mysql,MYSQL_READ_DEFAULT_GROUP,"]]></pre>
      <content type="TEXT" name="snippet" u="35" v="4637" />
      <match u="652" v="652">odbc");
  </match>
      <post u="653" v="672"><![CDATA[if (init_stmt &amp;&amp; init_stmt[0])
    mysql_options(mysql,MYSQL_INIT_COMMAND,init_stmt);
  if (connect_timeout)
    mysql_options(mysql, ]]></post>
    </solution>
    <solution rank="7" score="1">
      <pre u="718" v="737">length, char *from,int length)
{
  if (from)
  {
    if (length == SQL_NTS)
      length= max_length-1;
    strmake(to,from,length);
  }
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="4637" />
      <match u="738" v="738">ODBC </match>
      <post u="739" v="758">1.o API
  @purpose : to connect to mysql server
*/

SQLRETURN SQL_API SQLConnect(SQLHDBC hdbc, 
                             SQLCHAR FAR *szDSN,
                             SQLSMALLINT cbDSN,
                             </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="856" v="875">0])
    DBUG_RETURN(set_conn_error(hdbc, MYERR_S1000,
			       "Invalid Connection Parameters",0));

  SQLGetPrivateProfileString(dsn_ptr,"user","", user, sizeof(user),"</pre>
      <content type="TEXT" name="snippet" u="35" v="4637" />
      <match u="876" v="876">ODBC.</match>
      <post u="877" v="896">INI");
  SQLGetPrivateProfileString(dsn_ptr,"password","", passwd, sizeof(passwd),"ODBC.INI");
  SQLGetPrivateProfileString(dsn_ptr,"server","localhost", host, sizeof(host),"ODBC.INI");
  </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="865" v="884">Invalid Connection Parameters",0));

  SQLGetPrivateProfileString(dsn_ptr,"user","", user, sizeof(user),"ODBC.INI");
  SQLGetPrivateProfileString(dsn_ptr,"password","", passwd, sizeof(passwd),"</pre>
      <content type="TEXT" name="snippet" u="35" v="4637" />
      <match u="885" v="885">ODBC.</match>
      <post u="886" v="905">INI");
  SQLGetPrivateProfileString(dsn_ptr,"server","localhost", host, sizeof(host),"ODBC.INI");
  SQLGetPrivateProfileString(dsn_ptr,"database",dsn_ptr, database, sizeof(database),"</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLConnect		(ISO 92)					   *
 *   SQLDriverConnect	(ODBC)						   *
 *   SQLDisconnect	(ISO 92)					   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

#ifndef _UNIX_
# ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/error.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/error.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="173" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="197" v="216">3.51 error handling				   *
 *									   *
 * @author     : MySQL AB(monty@mysql.com, venu@mysql.com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following </pre>
      <content type="TEXT" name="snippet" u="35" v="2519" />
      <match u="217" v="217">ODBC </match>
      <post u="218" v="237">APIs are implemented in this file:		   *
 *									   *
 *   SQLGetDiagField	 (ISO 92)					   *
 *   SQLGetDiagRec	 (ISO 92)					   *
 *   SQLError		 (ODBC, Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"
#include "mysqld_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="211" v="230">Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLGetDiagField	 (ISO 92)					   *
 *   SQLGetDiagRec	 (ISO 92)					   *
 *   SQLError		 (</pre>
      <content type="TEXT" name="snippet" u="35" v="2519" />
      <match u="231" v="231">ODBC, </match>
      <post u="232" v="251">Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"
#include "mysqld_error.h"
#include "errmsg.h"

/*
  @type    : myodbc3 internal error structure
  @purpose : set of internal </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="558" v="577">42S21","Column already exists",-1},
  {"42S22","Column not found",-1},
  {"08S01","Communication link failure",-1},
};


/*
  @type    : myodbc3 internal
  @purpose : If </pre>
      <content type="TEXT" name="snippet" u="35" v="2519" />
      <match u="578" v="578">ODBC </match>
      <post u="579" v="598">version is SQL_OV_ODBC2, initialize old SQLSTATEs
*/

void myodbc_sqlstate2_init(void)
{
  /*
    As accessing the SQLSTATE2 is very rear, </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="672" v="691">S0012");
  strmov(myodbc3_errors[MYERR_42S21].sqlstate,"S0021");
  strmov(myodbc3_errors[MYERR_42S22].sqlstate,"S0022");
}


/*
  @type    : myodbc3 internal
  @purpose : If </pre>
      <content type="TEXT" name="snippet" u="35" v="2519" />
      <match u="692" v="692">ODBC </match>
      <post u="693" v="712">version is SQL_OV_ODBC3, initialize to original SQLSTATEs
*/

void myodbc_sqlstate3_init(void)
{
  uint i;

  for (i= MYERR_S1000; </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="934" v="953">prefix,message,NullS);
  stmt->error.native_error= errcode;
  DBUG_RETURN(SQL_ERROR);
}


/*
  @type    : myodbc3 internal
  @purpose : translates SQL error to </pre>
      <content type="TEXT" name="snippet" u="35" v="2519" />
      <match u="954" v="954">ODBC </match>
      <post u="955" v="974">error
*/

void translate_error(char *save_state,myodbc_errid errid,uint mysql_err)
{
  char *state= myodbc3_errors[errid].sqlstate;

  switch (</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="1322" v="1341">prefix);
}


/*
  @type    : myodbc3 internal
  @purpose : sets the error information to appropriate handle.
  it also sets the SQLSTATE based on the </pre>
      <content type="TEXT" name="snippet" u="35" v="2519" />
      <match u="1342" v="1342">ODBC </match>
      <post u="1343" v="1362">VERSION
*/

SQLRETURN set_handle_error(SQLSMALLINT HandleType, SQLHANDLE handle,
			   myodbc_errid errid, const char *errtext,
			   SQLINTEGER errcode)
{
  switch (HandleType) {

  case </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="1675" v="1694">STATUS(SQL_NO_DATA_FOUND);
  }
  DBUG_RETURN_STATUS(copy_str_data(HandleType,Handle,MessageText,
				   BufferLength, TextLengthPtr,
				   (char FAR*) errmsg));
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="2519" />
      <match u="1695" v="1695">ODBC </match>
      <post u="1696" v="1715">3.0 API
  @purpose : returns the current value of a field of a record of the
  diagnostic data structure (associated with </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="2038" v="2057">SQL_DIAG_COLUMN_NUMBER:
    *(SQLINTEGER *) DiagInfoPtr= SQL_COLUMN_NUMBER_UNKNOWN;
    break;

  case SQL_DIAG_CONNECTION_NAME:
    /*
      When the connection fails, </pre>
      <content type="TEXT" name="snippet" u="35" v="2519" />
      <match u="2058" v="2058">ODBC </match>
      <post u="2059" v="2078">DM calls this function, so don't
      return dbc->dsn as the connection name instead return empty string
    */

    if (HandleType == </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="2341" v="2360">DiagInfoPtr, BufferLength,
			   StringLengthPtr,
			   ((ENV FAR*) Handle)->error.sqlstate);
    break;

  default:
    DBUG_RETURN_STATUS(SQL_ERROR);
  }
  DBUG_RETURN_STATUS(error);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="2519" />
      <match u="2361" v="2361">ODBC </match>
      <post u="2362" v="2381">3.0 API
  @purpose : returns the current diagnostic record information
*/

SQLRETURN SQL_API SQLGetDiagRec(SQLSMALLINT HandleType,
				SQLHANDLE   Handle,
				SQLSMALLINT RecNumber,
				SQLCHAR     *</post>
    </solution>
    <solution rank="9" score="1">
      <pre u="2383" v="2402">SQLINTEGER  *NativeErrorPtr,
				SQLCHAR     *MessageText,
				SQLSMALLINT BufferLength,
				SQLSMALLINT *TextLengthPtr)
{
  return my_SQLGetDiagRec(HandleType,Handle,RecNumber,Sqlstate,
			  NativeErrorPtr,MessageText,
			  BufferLength,TextLengthPtr);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="2519" />
      <match u="2403" v="2403">ODBC </match>
      <post u="2404" v="2423">1.0 API - depricated
  @purpose : returns error or status information
*/

SQLRETURN SQL_API SQLError(SQLHENV henv, SQLHDBC hdbc, SQLHSTMT hstmt,
			   SQLCHAR </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLGetDiagField	 (ISO 92)					   *
 *   SQLGetDiagRec	 (ISO 92)					   *
 *   SQLError		 (ODBC, Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"
#include "mysqld_error.h"
# ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/prepare.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/prepare.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="175" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="197" v="216">handling prepare statements			   *
 *									   *
 * @author     : MySQL AB(monty@mysql.com, venu@mysql.com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following </pre>
      <content type="TEXT" name="snippet" u="35" v="1108" />
      <match u="217" v="217">ODBC </match>
      <post u="218" v="237">APIs are implemented in this file:		   *
 *									   *
 *   SQLPrepare		 (ISO 92)					   *
 *   SQLBindParameter	 (ODBC)						   *
 *   SQLDescribeParam	 (ODBC)						   *
 *   SQLParamOptions	 (ODBC, Deprecated)				   *
 *   SQLNumParams	 (ISO 92)					   *
 *   SQLSetScrollOptions (</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="208" v="227">com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLPrepare		 (ISO 92)					   *
 *   SQLBindParameter	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="1108" />
      <match u="228" v="228">ODBC)						   *
 *   </match>
      <post u="229" v="248"><![CDATA[SQLDescribeParam	 (ODBC)						   *
 *   SQLParamOptions	 (ODBC, Deprecated)				   *
 *   SQLNumParams	 (ISO 92)					   *
 *   SQLSetScrollOptions (ODBC, Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"
#ifndef _UNIX_
#include &lt;dos.h>
#endif /* !_]]></post>
    </solution>
    <solution rank="2" score="1">
      <pre u="210" v="229">2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLPrepare		 (ISO 92)					   *
 *   SQLBindParameter	 (ODBC)						   *
 *   SQLDescribeParam	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="1108" />
      <match u="230" v="230">ODBC)						   *
 *   </match>
      <post u="231" v="250"><![CDATA[SQLParamOptions	 (ODBC, Deprecated)				   *
 *   SQLNumParams	 (ISO 92)					   *
 *   SQLSetScrollOptions (ODBC, Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"
#ifndef _UNIX_
#include &lt;dos.h>
#endif /* !_UNIX_ */
#include &lt;]]></post>
    </solution>
    <solution rank="3" score="1">
      <pre u="212" v="231">15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLPrepare		 (ISO 92)					   *
 *   SQLBindParameter	 (ODBC)						   *
 *   SQLDescribeParam	 (ODBC)						   *
 *   SQLParamOptions	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="1108" />
      <match u="232" v="232">ODBC, </match>
      <post u="233" v="252"><![CDATA[Deprecated)				   *
 *   SQLNumParams	 (ISO 92)					   *
 *   SQLSetScrollOptions (ODBC, Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"
#ifndef _UNIX_
#include &lt;dos.h>
#endif /* !_UNIX_ */
#include &lt;my_list.]]></post>
    </solution>
    <solution rank="4" score="1">
      <pre u="218" v="237">APIs are implemented in this file:		   *
 *									   *
 *   SQLPrepare		 (ISO 92)					   *
 *   SQLBindParameter	 (ODBC)						   *
 *   SQLDescribeParam	 (ODBC)						   *
 *   SQLParamOptions	 (ODBC, Deprecated)				   *
 *   SQLNumParams	 (ISO 92)					   *
 *   SQLSetScrollOptions (</pre>
      <content type="TEXT" name="snippet" u="35" v="1108" />
      <match u="238" v="238">ODBC, </match>
      <post u="239" v="258"><![CDATA[Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"
#ifndef _UNIX_
#include &lt;dos.h>
#endif /* !_UNIX_ */
#include &lt;my_list.h>
#include &lt;m_ctype.h>

/*
  @type    : ]]></post>
    </solution>
    <solution rank="5" score="1">
      <pre u="239" v="258"><![CDATA[Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"
#ifndef _UNIX_
#include &lt;dos.h>
#endif /* !_UNIX_ */
#include &lt;my_list.h>
#include &lt;m_ctype.h>

/*
  @type    : ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="1108" />
      <match u="259" v="259">ODBC </match>
      <post u="260" v="279">1.0 API
  @purpose : prepares an SQL string for execution
*/

SQLRETURN SQL_API SQLPrepare(SQLHSTMT hstmt,SQLCHAR FAR *szSqlStr,
			     SQLINTEGER cbSqlStr)
{
  </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="799" v="818">param,ipar))
  {
    set_error(stmt,MYERR_S1001,NULL,4001);
    DBUG_RETURN_STATUS(SQL_ERROR);
  }
  DBUG_RETURN_STATUS(SQL_SUCCESS);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="1108" />
      <match u="819" v="819">ODBC </match>
      <post u="820" v="839">2.0 API
  @purpose : binds a buffer to a parameter marker in an SQL statement.
*/

SQLRETURN SQL_API
SQLBindParameter(SQLHSTMT hstmt,</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="853" v="872">rgbValue, SQLINTEGER cbValueMax,
		 SQLINTEGER FAR *pcbValue)
{
  return my_SQLBindParameter(hstmt, ipar, fParamType, fCType, fSqlType,
			     cbColDef, ibScale, rgbValue, cbValueMax,
			     pcbValue);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="1108" />
      <match u="873" v="873">ODBC </match>
      <post u="874" v="893">1.0 API
  @purpose : returns the description of a parameter marker associated
  with a prepared SQL statement
*/

SQLRETURN SQL_API
SQLDescribeParam(</post>
    </solution>
    <solution rank="8" score="1">
      <pre u="933" v="952"><![CDATA[flag &amp; FLAG_BIG_PACKETS ? 24*1024*1024L : 255);
  if (pfNullable)
    *pfNullable= SQL_NULLABLE_UNKNOWN;
  DBUG_RETURN_STATUS(SQL_SUCCESS);
}


/*
  @type    : ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="1108" />
      <match u="953" v="953">ODBC </match>
      <post u="954" v="973">1.0 API
  @purpose : sets multiple values (arrays) for the set of parameter markers
*/

SQLRETURN SQL_API
SQLParamOptions(SQLHSTMT hstmt, SQLUINTEGER </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="1000" v="1019">return (set_error(hstmt,MYERR_01S02,
		      "Option value changed to default parameter size",0));
  }
  DBUG_RETURN_STATUS(SQL_SUCCESS);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="1108" />
      <match u="1020" v="1020">ODBC </match>
      <post u="1021" v="1040">1.0 API
  @purpose : returns the number of parameter markers.
*/

SQLRETURN SQL_API SQLNumParams(SQLHSTMT hstmt, SQLSMALLINT FAR *pcpar)
{
  STMT FAR *</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLPrepare		 (ISO 92)					   *
 *   SQLBindParameter	 (ODBC)						   *
 *   SQLDescribeParam	 (ODBC)						   *
 *   SQLParamOptions	 (ODBC, Deprecated)				   *
 *   SQLNumParams	 (ISO 92)					   *
 *    ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/handle.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/handle.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="177" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="198" v="217">freeing of handles			   *
 *									   *
 * @author     : MySQL AB(monty@mysql.com, venu@mysql.com)		   *
 * @date       : 2001-Nov-07						   *
 * @product    : myodbc3						   *
 *									   *
****************************************************************************/

/***************************************************************************
 * The following </pre>
      <content type="TEXT" name="snippet" u="35" v="1706" />
      <match u="218" v="218">ODBC </match>
      <post u="219" v="238">APIs are implemented in this file:		   *
 *									   *
 *   SQLAllocHandle	 (ISO 92)					   *
 *   SQLFreeHandle	 (ISO 92)					   *
 *   SQLAllocEnv	 (ODBC, Deprecated)				   *
 *   SQLAllocConnect	 (ODBC, Deprecated)				   *
 *   SQLAllocStmt	 (ODBC, </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="212" v="231">Nov-07						   *
 * @product    : myodbc3						   *
 *									   *
****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLAllocHandle	 (ISO 92)					   *
 *   SQLFreeHandle	 (ISO 92)					   *
 *   SQLAllocEnv	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="1706" />
      <match u="232" v="232">ODBC, </match>
      <post u="233" v="252">Deprecated)				   *
 *   SQLAllocConnect	 (ODBC, Deprecated)				   *
 *   SQLAllocStmt	 (ODBC, Deprecated)				   *
 *   SQLFreeEnv		 (ODBC, Deprecated)				   *
 *   SQLFreeConnect	 (ODBC, Deprecated)				   *
 *   SQLFreeStmt	 (ISO 92)					   *
 *									   *
****************************************************************************/

#include "myodbc3.h"

/*
  @type    : </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="215" v="234">myodbc3						   *
 *									   *
****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLAllocHandle	 (ISO 92)					   *
 *   SQLFreeHandle	 (ISO 92)					   *
 *   SQLAllocEnv	 (ODBC, Deprecated)				   *
 *   SQLAllocConnect	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="1706" />
      <match u="235" v="235">ODBC, </match>
      <post u="236" v="255">Deprecated)				   *
 *   SQLAllocStmt	 (ODBC, Deprecated)				   *
 *   SQLFreeEnv		 (ODBC, Deprecated)				   *
 *   SQLFreeConnect	 (ODBC, Deprecated)				   *
 *   SQLFreeStmt	 (ISO 92)					   *
 *									   *
****************************************************************************/

#include "myodbc3.h"

/*
  @type    : myodbc3 internal
  @purpose : </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="218" v="237">ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLAllocHandle	 (ISO 92)					   *
 *   SQLFreeHandle	 (ISO 92)					   *
 *   SQLAllocEnv	 (ODBC, Deprecated)				   *
 *   SQLAllocConnect	 (ODBC, Deprecated)				   *
 *   SQLAllocStmt	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="1706" />
      <match u="238" v="238">ODBC, </match>
      <post u="239" v="258">Deprecated)				   *
 *   SQLFreeEnv		 (ODBC, Deprecated)				   *
 *   SQLFreeConnect	 (ODBC, Deprecated)				   *
 *   SQLFreeStmt	 (ISO 92)					   *
 *									   *
****************************************************************************/

#include "myodbc3.h"

/*
  @type    : myodbc3 internal
  @purpose : to allocate the </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="221" v="240">implemented in this file:		   *
 *									   *
 *   SQLAllocHandle	 (ISO 92)					   *
 *   SQLFreeHandle	 (ISO 92)					   *
 *   SQLAllocEnv	 (ODBC, Deprecated)				   *
 *   SQLAllocConnect	 (ODBC, Deprecated)				   *
 *   SQLAllocStmt	 (ODBC, Deprecated)				   *
 *   SQLFreeEnv		 (</pre>
      <content type="TEXT" name="snippet" u="35" v="1706" />
      <match u="241" v="241">ODBC, </match>
      <post u="242" v="261">Deprecated)				   *
 *   SQLFreeConnect	 (ODBC, Deprecated)				   *
 *   SQLFreeStmt	 (ISO 92)					   *
 *									   *
****************************************************************************/

#include "myodbc3.h"

/*
  @type    : myodbc3 internal
  @purpose : to allocate the environment handle and </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="224" v="243">file:		   *
 *									   *
 *   SQLAllocHandle	 (ISO 92)					   *
 *   SQLFreeHandle	 (ISO 92)					   *
 *   SQLAllocEnv	 (ODBC, Deprecated)				   *
 *   SQLAllocConnect	 (ODBC, Deprecated)				   *
 *   SQLAllocStmt	 (ODBC, Deprecated)				   *
 *   SQLFreeEnv		 (ODBC, Deprecated)				   *
 *   SQLFreeConnect	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="1706" />
      <match u="244" v="244">ODBC, </match>
      <post u="245" v="264">Deprecated)				   *
 *   SQLFreeStmt	 (ISO 92)					   *
 *									   *
****************************************************************************/

#include "myodbc3.h"

/*
  @type    : myodbc3 internal
  @purpose : to allocate the environment handle and to maintain
       its </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="319" v="338">ZEROFILL))))
  {
    *phenv= SQL_NULL_HENV;
    return (SQL_ERROR);
  }
#endif /* _UNIX_ */

/* --- if OS=WIN32, set default env option for SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="35" v="1706" />
      <match u="339" v="339">ODBC_</match>
      <post u="340" v="359">VERSION */
#ifdef WIN32
  ((ENV FAR*) *phenv)->odbc_ver= SQL_OV_ODBC3;
#else
  ((ENV FAR*) *phenv)->odbc_ver= SQL_OV_ODBC2;
#</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="326" v="345">ERROR);
  }
#endif /* _UNIX_ */

/* --- if OS=WIN32, set default env option for SQL_ATTR_ODBC_VERSION */
#ifdef WIN32
  ((ENV FAR*) *phenv)-></pre>
      <content type="TEXT" name="snippet" u="35" v="1706" />
      <match u="346" v="346">odbc_</match>
      <post u="347" v="366">ver= SQL_OV_ODBC3;
#else
  ((ENV FAR*) *phenv)->odbc_ver= SQL_OV_ODBC2;
#endif /* WIN32 */

  return (SQL_SUCCESS);
}


/*
  @type    : ODBC </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="335" v="354">option for SQL_ATTR_ODBC_VERSION */
#ifdef WIN32
  ((ENV FAR*) *phenv)->odbc_ver= SQL_OV_ODBC3;
#else
  ((ENV FAR*) *phenv)-></pre>
      <content type="TEXT" name="snippet" u="35" v="1706" />
      <match u="355" v="355">odbc_</match>
      <post u="356" v="375">ver= SQL_OV_ODBC2;
#endif /* WIN32 */

  return (SQL_SUCCESS);
}


/*
  @type    : ODBC 1.0 API
  @purpose : to allocate the environment handle
*/

SQLRETURN </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="346" v="365">odbc_ver= SQL_OV_ODBC3;
#else
  ((ENV FAR*) *phenv)->odbc_ver= SQL_OV_ODBC2;
#endif /* WIN32 */

  return (SQL_SUCCESS);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="1706" />
      <match u="366" v="366">ODBC </match>
      <post u="367" v="386">1.0 API
  @purpose : to allocate the environment handle
*/

SQLRETURN SQL_API SQLAllocEnv(SQLHENV FAR *phenv)
{
  return my_SQLAllocEnv(phenv);
}


/*
  @type    : </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... date       : 2001-Nov-07						   *
 * @product    : myodbc3						   *
 *									   *
****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLAllocHandle	 (ISO 92)					   *
 *   SQLFreeHandle	 (ISO 92)					   *
 *   SQLAllocEnv	 (ODBC, Deprecated)				   *
 *   SQLAllocConnect	 (ODBC, Deprecated)				   *
 *   SQLAllocStmt	 (ODBC, Deprecated)				   *
 *   SQLFreeEnv		 ( ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/info.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/info.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="181" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="197" v="216">for information functions				   *
 *									   *
 * @author     : MySQL AB(monty@mysql.com, venu@mysql.com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following </pre>
      <content type="TEXT" name="snippet" u="35" v="6622" />
      <match u="217" v="217">ODBC </match>
      <post u="218" v="237"><![CDATA[APIs are implemented in this file:		   *
 *									   *
 *   SQLGetInfo		 (ISO 92)					   *
 *   SQLGetFunctions	 (ISO 92)					   *
 *   SQLGetTypeInfo	 (ISO 92)					   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"
#include &lt;m_]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="373" v="392">cbInfoValueMax); \
  DBUG_RETURN_STATUS(len >= cbInfoValueMax ? \
		     SQL_SUCCESS_WITH_INFO: \
		     SQL_SUCCESS); \
}

static my_bool myodbc_ov2_inited= 0;


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="6622" />
      <match u="393" v="393">ODBC </match>
      <post u="394" v="413">1.0 API
  @purpose : returns general information about the driver and data
  source associated with a connection
*/

SQLRETURN SQL_API SQLGetInfo(</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="1464" v="1483">sizeof(SQLUINTEGER);
    break;

  case SQL_DRIVER_NAME:
    MYINFO_SET_STR(rgbInfoValue,cbInfoValueMax,pcbInfoValue,DRIVER_DLL_NAME);
    break;

  case SQL_DRIVER_</pre>
      <content type="TEXT" name="snippet" u="35" v="6622" />
      <match u="1484" v="1484">ODBC_</match>
      <post u="1485" v="1504">VER:
    MYINFO_SET_STR(rgbInfoValue,cbInfoValueMax,pcbInfoValue,SQL_SPEC_STRING);
    break;

  case SQL_DRIVER_VER:
    MYINFO_SET_STR(rgbInfoValue,cbInfoValueMax,</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="2228" v="2247">NUM_POWER |
       SQL_FN_NUM_RADIANS | SQL_FN_NUM_ROUND | SQL_FN_NUM_TRUNCATE);
    *pcbInfoValue= sizeof(SQLUINTEGER);
    break;

  case SQL_</pre>
      <content type="TEXT" name="snippet" u="35" v="6622" />
      <match u="2248" v="2248">ODBC_</match>
      <post u="2249" v="2268">API_CONFORMANCE:
    *((SQLSMALLINT*) rgbInfoValue)= SQL_OAC_LEVEL1;
    *pcbInfoValue= sizeof(SQLSMALLINT);
    break;

  case SQL_ODBC_SQL_CONFORMANCE:
    *((SQLSMALLINT*) rgbInfoValue)= SQL_OSC_</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="2242" v="2261">pcbInfoValue= sizeof(SQLUINTEGER);
    break;

  case SQL_ODBC_API_CONFORMANCE:
    *((SQLSMALLINT*) rgbInfoValue)= SQL_OAC_LEVEL1;
    *pcbInfoValue= sizeof(SQLSMALLINT);
    break;

  case SQL_</pre>
      <content type="TEXT" name="snippet" u="35" v="6622" />
      <match u="2262" v="2262">ODBC_</match>
      <post u="2263" v="2282">SQL_CONFORMANCE:
    *((SQLSMALLINT*) rgbInfoValue)= SQL_OSC_CORE;
    *pcbInfoValue= sizeof(SQLSMALLINT);
    break;

  case SQL_ODBC_INTERFACE_CONFORMANCE:
    *((SQLUINTEGER*) rgbInfoValue)= SQL_OIC_</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="2256" v="2275">pcbInfoValue= sizeof(SQLSMALLINT);
    break;

  case SQL_ODBC_SQL_CONFORMANCE:
    *((SQLSMALLINT*) rgbInfoValue)= SQL_OSC_CORE;
    *pcbInfoValue= sizeof(SQLSMALLINT);
    break;

  case SQL_</pre>
      <content type="TEXT" name="snippet" u="35" v="6622" />
      <match u="2276" v="2276">ODBC_</match>
      <post u="2277" v="2296">INTERFACE_CONFORMANCE:
    *((SQLUINTEGER*) rgbInfoValue)= SQL_OIC_LEVEL1;
    *pcbInfoValue= sizeof(SQLUINTEGER);
    break;

  case SQL_OJ_CAPABILITIES:
    using_322= is_prefix(mysql_</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="3145" v="3164"><![CDATA[PRIOR;
    if (dbc->flag &amp; FLAG_FORWARD_CURSOR)
      *((long*) rgbInfoValue)=	(long) SQL_FD_FETCH_NEXT;
    *pcbInfoValue= sizeof(long);
    break;

  case SQL_]]></pre>
      <content type="TEXT" name="snippet" u="35" v="6622" />
      <match u="3165" v="3165">ODBC_</match>
      <post u="3166" v="3185">SAG_CLI_CONFORMANCE:
    *((SQLSMALLINT*) rgbInfoValue)= SQL_OSCC_COMPLIANT;
    *pcbInfoValue= sizeof(SQLSMALLINT);
    break;

  default:
  {
    char buff[80];
    sprintf(buff,"Unsupported option: %</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="5527" v="5546">nullable,
   "0",sql_searchable,"0","0","0","set(value1,value2,value3...)",NULL,NULL,
   sql_varchar,NULL,NULL,NULL}
#endif
};


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="6622" />
      <match u="5547" v="5547">ODBC </match>
      <post u="5548" v="5567">1.0 API
  @purpose : returns info about datata types supported by the data source
*/

SQLRETURN SQL_API SQLGetTypeInfo(SQLHSTMT hstmt, SQLSMALLINT </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="6093" v="6112">endif
#endif

}

/*
  @type    : myodbc3 internal
  @purpose : initializations for SQL_OV_ODBC2 and SQL_OV_ODBC3
*/

void myodbc_ov_init(SQLINTEGER </pre>
      <content type="TEXT" name="snippet" u="35" v="6622" />
      <match u="6113" v="6113">odbc_</match>
      <post u="6114" v="6133">version)
{
  if (odbc_version == SQL_OV_ODBC2)
  {
#if MYSQL_VERSION_ID >= 40100
    int2str(SQL_TIMESTAMP,sql_timestamp,-10,0);
    int2str(SQL_</post>
    </solution>
    <solution rank="9" score="1">
      <pre u="6096" v="6115">myodbc3 internal
  @purpose : initializations for SQL_OV_ODBC2 and SQL_OV_ODBC3
*/

void myodbc_ov_init(SQLINTEGER odbc_version)
{
  if (</pre>
      <content type="TEXT" name="snippet" u="35" v="6622" />
      <match u="6116" v="6116">odbc_</match>
      <post u="6117" v="6136">version == SQL_OV_ODBC2)
  {
#if MYSQL_VERSION_ID >= 40100
    int2str(SQL_TIMESTAMP,sql_timestamp,-10,0);
    int2str(SQL_DATE,sql_date,-</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLGetInfo		 (ISO  ... static my_bool myodbc_ov2_inited= 0;


/*
  @type    : ODBC 1.0 API
  @purpose : returns general information about the  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/options.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/options.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="183" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="197" v="216">handling attribute APIs				   *
 *									   *
 * @author     : MySQL AB(monty@mysql.com, venu@mysql.com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following </pre>
      <content type="TEXT" name="snippet" u="35" v="3023" />
      <match u="217" v="217">ODBC </match>
      <post u="218" v="237">APIs are implemented in this file:		   *
 *									   *
 *   SQLSetEnvAttr	 (ISO 92)					   *
 *   SQLGetEnvAttr	 (ISO 92)					   *
 *   SQLSetConnectAttr	 (ISO 92)					   *
 *   SQLGetConnecyAttr	 (ISO 92)					   *
 *   SQLSetStmtAttr	 (ISO </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="223" v="242">file:		   *
 *									   *
 *   SQLSetEnvAttr	 (ISO 92)					   *
 *   SQLGetEnvAttr	 (ISO 92)					   *
 *   SQLSetConnectAttr	 (ISO 92)					   *
 *   SQLGetConnecyAttr	 (ISO 92)					   *
 *   SQLSetStmtAttr	 (ISO 92)					   *
 *   SQLGetStmtAttr	 (ISO 92)					   *
 *   SQLSetConnectOption (</pre>
      <content type="TEXT" name="snippet" u="35" v="3023" />
      <match u="243" v="243">ODBC, </match>
      <post u="244" v="263">Deprecated)				   *
 *   SQLGetConnectOption (ODBC, Deprecated)				   *
 *   SQLSetStmtOption	 (ODBC, Deprecated)				   *
 *   SQLGetStmtOption	 (ODBC, Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

/*
  @type    : myodbc3 internal
  @purpose : sets the common </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="226" v="245">92)					   *
 *   SQLGetEnvAttr	 (ISO 92)					   *
 *   SQLSetConnectAttr	 (ISO 92)					   *
 *   SQLGetConnecyAttr	 (ISO 92)					   *
 *   SQLSetStmtAttr	 (ISO 92)					   *
 *   SQLGetStmtAttr	 (ISO 92)					   *
 *   SQLSetConnectOption (ODBC, Deprecated)				   *
 *   SQLGetConnectOption (</pre>
      <content type="TEXT" name="snippet" u="35" v="3023" />
      <match u="246" v="246">ODBC, </match>
      <post u="247" v="266">Deprecated)				   *
 *   SQLSetStmtOption	 (ODBC, Deprecated)				   *
 *   SQLGetStmtOption	 (ODBC, Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

/*
  @type    : myodbc3 internal
  @purpose : sets the common connection/stmt attributes
*/

</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="229" v="248">92)					   *
 *   SQLSetConnectAttr	 (ISO 92)					   *
 *   SQLGetConnecyAttr	 (ISO 92)					   *
 *   SQLSetStmtAttr	 (ISO 92)					   *
 *   SQLGetStmtAttr	 (ISO 92)					   *
 *   SQLSetConnectOption (ODBC, Deprecated)				   *
 *   SQLGetConnectOption (ODBC, Deprecated)				   *
 *   SQLSetStmtOption	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="3023" />
      <match u="249" v="249">ODBC, </match>
      <post u="250" v="269">Deprecated)				   *
 *   SQLGetStmtOption	 (ODBC, Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

/*
  @type    : myodbc3 internal
  @purpose : sets the common connection/stmt attributes
*/

static SQLRETURN set_</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="232" v="251">92)					   *
 *   SQLGetConnecyAttr	 (ISO 92)					   *
 *   SQLSetStmtAttr	 (ISO 92)					   *
 *   SQLGetStmtAttr	 (ISO 92)					   *
 *   SQLSetConnectOption (ODBC, Deprecated)				   *
 *   SQLGetConnectOption (ODBC, Deprecated)				   *
 *   SQLSetStmtOption	 (ODBC, Deprecated)				   *
 *   SQLGetStmtOption	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="3023" />
      <match u="252" v="252">ODBC, </match>
      <post u="253" v="272">Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

/*
  @type    : myodbc3 internal
  @purpose : sets the common connection/stmt attributes
*/

static SQLRETURN set_constmt_attr(SQLSMALLINT  </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="1070" v="1089">TRANSACTIONS))
                    DBUG_RETURN(set_conn_error(dbc,MYERR_S1C00,
                                               "Transactions are not enabled", 4000));

                if (autocommit_on(dbc))
                    DBUG_RETURN(</pre>
      <content type="TEXT" name="snippet" u="35" v="3023" />
      <match u="1090" v="1090">odbc_</match>
      <post u="1091" v="1110">stmt(dbc,"SET AUTOCOMMIT=0"));
            }
            else if (!dbc->server) /* no connection yet */
            {
                dbc->commit_flag= CHECK_AUTOCOMMIT_ON;
                DBUG_RETURN_</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="1104" v="1123"><![CDATA[commit_flag= CHECK_AUTOCOMMIT_ON;
                DBUG_RETURN_STATUS(SQL_SUCCESS);
            }
            else if (trans_supported(dbc) &amp;&amp; !(autocommit_on(dbc)))
                DBUG_RETURN(]]></pre>
      <content type="TEXT" name="snippet" u="35" v="3023" />
      <match u="1124" v="1124">odbc_</match>
      <post u="1125" v="1144"><![CDATA[stmt(dbc,"SET AUTOCOMMIT=1"));
            break;

        case SQL_ATTR_CONNECTION_TIMEOUT:
            {
                uint timeout= (SQLUINTEGER)ValuePtr;
                DBUG_RETURN(mysql_options(&amp;dbc->]]></post>
    </solution>
    <solution rank="7" score="1">
      <pre u="1281" v="1300"><![CDATA[pthread_mutex_unlock(&amp;dbc->lock);
            }
            break;

        case SQL_ATTR_LOGIN_TIMEOUT:
            dbc->login_timeout= (SQLUINTEGER)ValuePtr;
            break;

        case SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="35" v="3023" />
      <match u="1301" v="1301">ODBC_</match>
      <post u="1302" v="1321"><![CDATA[CURSORS:
            if ((dbc->flag &amp; FLAG_FORWARD_CURSOR) &amp;&amp;
                (SQLUINTEGER)ValuePtr != SQL_CUR_USE_ODBC)
                DBUG_RETURN(set_conn_error(hdbc,MYERR_]]></post>
    </solution>
    <solution rank="8" score="1">
      <pre u="1294" v="1313"><![CDATA[timeout= (SQLUINTEGER)ValuePtr;
            break;

        case SQL_ATTR_ODBC_CURSORS:
            if ((dbc->flag &amp; FLAG_FORWARD_CURSOR) &amp;&amp;
                (SQLUINTEGER)ValuePtr != SQL_CUR_USE_]]></pre>
      <content type="TEXT" name="snippet" u="35" v="3023" />
      <match u="1314" v="1314">ODBC)
                </match>
      <post u="1315" v="1334">DBUG_RETURN(set_conn_error(hdbc,MYERR_01S02,
                                           "Forcing the Driver Manager to use ODBC cursor library",0));
            break;

        case </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="1309" v="1328">SQLUINTEGER)ValuePtr != SQL_CUR_USE_ODBC)
                DBUG_RETURN(set_conn_error(hdbc,MYERR_01S02,
                                           "Forcing the Driver Manager to use </pre>
      <content type="TEXT" name="snippet" u="35" v="3023" />
      <match u="1329" v="1329">ODBC </match>
      <post u="1330" v="1349">cursor library",0));
            break;

        case SQL_OPT_TRACE:
        case SQL_OPT_TRACEFILE:
        case SQL_QUIET_MODE:
        case SQL_TRANSLATE_DLL:
        </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLSetEnvAttr	 (ISO  ... 92)					   *
 *   SQLSetStmtAttr	 (ISO 92)					   *
 *   SQLGetStmtAttr	 (ISO 92)					   *
 *   SQLSetConnectOption (ODBC, Deprecated)				   *
 *   SQLGetConnectOption (ODBC, Deprecated)				   *
 *   SQLSetStmtOption	 (ODBC, Deprecated)				   *
 *   SQLGetStmtOption	 ( ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/catalog.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/catalog.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="184" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="177" v="196">to the Free Software
   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA */

/***************************************************************************
 * CATALOG.C								   *
 *									   *
 * @description: Handling </pre>
      <content type="TEXT" name="snippet" u="35" v="11298" />
      <match u="197" v="197">ODBC </match>
      <post u="198" v="217">catalog APIs				   *
 *									   *
 * @author     : MySQL AB (monty@mysql.com, venu@mysql.com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="197" v="216">ODBC catalog APIs				   *
 *									   *
 * @author     : MySQL AB (monty@mysql.com, venu@mysql.com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following </pre>
      <content type="TEXT" name="snippet" u="35" v="11298" />
      <match u="217" v="217">ODBC </match>
      <post u="218" v="237">APIs are implemented in this file:		   *
 *									   *
 *   SQLColumnPrivileges (ODBC)						   *
 *   SQLColumns		 (X/Open)					   *
 *   SQLForeignKeys	 (ODBC)						   *
 *   SQLPrimaryKeys	 (ODBC)						   *
 *   SQLProcedureColumns (ODBC)						   *
 *   SQLProcedures	 (ODBC)						   *
 *   SQLSpecialColumns	 (</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="205" v="224">com, venu@mysql.com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLColumnPrivileges (</pre>
      <content type="TEXT" name="snippet" u="35" v="11298" />
      <match u="225" v="225">ODBC)						   *
 *   </match>
      <post u="226" v="245">SQLColumns		 (X/Open)					   *
 *   SQLForeignKeys	 (ODBC)						   *
 *   SQLPrimaryKeys	 (ODBC)						   *
 *   SQLProcedureColumns (ODBC)						   *
 *   SQLProcedures	 (ODBC)						   *
 *   SQLSpecialColumns	 (X/Open)					   *
 *   SQLStatistics	 (ISO 92)					   *
 *   SQLTablePrivileges  (ODBC)						   *
 *   SQLTables		 (</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="210" v="229">2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLColumnPrivileges (ODBC)						   *
 *   SQLColumns		 (X/Open)					   *
 *   SQLForeignKeys	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="11298" />
      <match u="230" v="230">ODBC)						   *
 *   </match>
      <post u="231" v="250">SQLPrimaryKeys	 (ODBC)						   *
 *   SQLProcedureColumns (ODBC)						   *
 *   SQLProcedures	 (ODBC)						   *
 *   SQLSpecialColumns	 (X/Open)					   *
 *   SQLStatistics	 (ISO 92)					   *
 *   SQLTablePrivileges  (ODBC)						   *
 *   SQLTables		 (ODBC)						   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

#define </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="212" v="231">15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLColumnPrivileges (ODBC)						   *
 *   SQLColumns		 (X/Open)					   *
 *   SQLForeignKeys	 (ODBC)						   *
 *   SQLPrimaryKeys	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="11298" />
      <match u="232" v="232">ODBC)						   *
 *   </match>
      <post u="233" v="252">SQLProcedureColumns (ODBC)						   *
 *   SQLProcedures	 (ODBC)						   *
 *   SQLSpecialColumns	 (X/Open)					   *
 *   SQLStatistics	 (ISO 92)					   *
 *   SQLTablePrivileges  (ODBC)						   *
 *   SQLTables		 (ODBC)						   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

#define valid_input_</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="214" v="233">myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLColumnPrivileges (ODBC)						   *
 *   SQLColumns		 (X/Open)					   *
 *   SQLForeignKeys	 (ODBC)						   *
 *   SQLPrimaryKeys	 (ODBC)						   *
 *   SQLProcedureColumns (</pre>
      <content type="TEXT" name="snippet" u="35" v="11298" />
      <match u="234" v="234">ODBC)						   *
 *   </match>
      <post u="235" v="254">SQLProcedures	 (ODBC)						   *
 *   SQLSpecialColumns	 (X/Open)					   *
 *   SQLStatistics	 (ISO 92)					   *
 *   SQLTablePrivileges  (ODBC)						   *
 *   SQLTables		 (ODBC)						   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

#define valid_input_parameter(A) ((</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="216" v="235">following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLColumnPrivileges (ODBC)						   *
 *   SQLColumns		 (X/Open)					   *
 *   SQLForeignKeys	 (ODBC)						   *
 *   SQLPrimaryKeys	 (ODBC)						   *
 *   SQLProcedureColumns (ODBC)						   *
 *   SQLProcedures	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="11298" />
      <match u="236" v="236">ODBC)						   *
 *   </match>
      <post u="237" v="256"><![CDATA[SQLSpecialColumns	 (X/Open)					   *
 *   SQLStatistics	 (ISO 92)					   *
 *   SQLTablePrivileges  (ODBC)						   *
 *   SQLTables		 (ODBC)						   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

#define valid_input_parameter(A) ((A) &amp;&amp; A[]]></post>
    </solution>
    <solution rank="7" score="1">
      <pre u="224" v="243">SQLColumnPrivileges (ODBC)						   *
 *   SQLColumns		 (X/Open)					   *
 *   SQLForeignKeys	 (ODBC)						   *
 *   SQLPrimaryKeys	 (ODBC)						   *
 *   SQLProcedureColumns (ODBC)						   *
 *   SQLProcedures	 (ODBC)						   *
 *   SQLSpecialColumns	 (X/Open)					   *
 *   SQLStatistics	 (ISO 92)					   *
 *   SQLTablePrivileges  (</pre>
      <content type="TEXT" name="snippet" u="35" v="11298" />
      <match u="244" v="244">ODBC)						   *
 *   </match>
      <post u="245" v="264"><![CDATA[SQLTables		 (ODBC)						   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

#define valid_input_parameter(A) ((A) &amp;&amp; A[0])
#define escape_input_parameter(A,B) if (]]></post>
    </solution>
    <solution rank="8" score="1">
      <pre u="226" v="245">SQLColumns		 (X/Open)					   *
 *   SQLForeignKeys	 (ODBC)						   *
 *   SQLPrimaryKeys	 (ODBC)						   *
 *   SQLProcedureColumns (ODBC)						   *
 *   SQLProcedures	 (ODBC)						   *
 *   SQLSpecialColumns	 (X/Open)					   *
 *   SQLStatistics	 (ISO 92)					   *
 *   SQLTablePrivileges  (ODBC)						   *
 *   SQLTables		 (</pre>
      <content type="TEXT" name="snippet" u="35" v="11298" />
      <match u="246" v="246">ODBC)						   *
 *									   *
 ****************************************************************************/

#</match>
      <post u="247" v="266"><![CDATA[include "myodbc3.h"

#define valid_input_parameter(A) ((A) &amp;&amp; A[0])
#define escape_input_parameter(A,B) if (B &amp;&amp; B[]]></post>
    </solution>
    <solution rank="9" score="1">
      <pre u="1923" v="1942">can 
        be used directly in describing columns related information

        Must needed like this inorder to make system tables editable 
        by </pre>
      <content type="TEXT" name="snippet" u="35" v="11298" />
      <match u="1943" v="1943">ODBC </match>
      <post u="1944" v="1963">tools
      */
      while ((row = mysql_fetch_row(sys_result)))
      {    
        data[0]= db;
        data[1]= owner;      
        sprintf(buff,"mysql.%s",row[0]);
        </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MA  02111-1307  USA */

/***************************************************************************
 * CATALOG.C								   *
 *									   *
 * @description: Handling ODBC catalog APIs				   *
 *									   *
 * @author     : MySQL AB (monty@mysql.com,  ... date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLColumnPrivileges (ODBC)						   *
 *    ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/results.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/results.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="185" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="199" v="218">and resultset information	   *
 *									   *
 * @author     : MySQL AB(monty@mysql.com, venu@mysql.com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following </pre>
      <content type="TEXT" name="snippet" u="35" v="4692" />
      <match u="219" v="219">ODBC </match>
      <post u="220" v="239">APIs are implemented in this file:		   *
 *									   *
 *   SQLRowCount	  (ISO 92)					   *
 *   SQLNumResultCols	  (ISO 92)					   *
 *   SQLDescribeCol	  (ISO 92)					   *
 *   SQLColAttribute	  (ISO 92)					   *
 *   SQLColAttributes	  (ODBC, </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="219" v="238">ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLRowCount	  (ISO 92)					   *
 *   SQLNumResultCols	  (ISO 92)					   *
 *   SQLDescribeCol	  (ISO 92)					   *
 *   SQLColAttribute	  (ISO 92)					   *
 *   SQLColAttributes	  (</pre>
      <content type="TEXT" name="snippet" u="35" v="4692" />
      <match u="239" v="239">ODBC, </match>
      <post u="240" v="259">Deprecated)				   *
 *   SQLBindCol		  (ISO 92)					   *
 *   SQLFetch		  (ISO 92)					   *
 *   SQLFetchScroll	  (ISO 92)					   *
 *   SQLGetData		  (ISO 92)					   *
 *   SQLExtendedFetch	  (ODBC, Deprecated)				   *
 *   SQLMoreResults	  (ODBC)					   *
 *									   *
 ****************************************************************************/

#include "myodbc3.</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="234" v="253">92)					   *
 *   SQLColAttribute	  (ISO 92)					   *
 *   SQLColAttributes	  (ODBC, Deprecated)				   *
 *   SQLBindCol		  (ISO 92)					   *
 *   SQLFetch		  (ISO 92)					   *
 *   SQLFetchScroll	  (ISO 92)					   *
 *   SQLGetData		  (ISO 92)					   *
 *   SQLExtendedFetch	  (</pre>
      <content type="TEXT" name="snippet" u="35" v="4692" />
      <match u="254" v="254">ODBC, </match>
      <post u="255" v="274"><![CDATA[Deprecated)				   *
 *   SQLMoreResults	  (ODBC)					   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"
#include &lt;m_ctype.h>
#include &lt;locale.h>

#define SQL_MY_PRIMARY_KEY 1212

SQLRETURN ]]></post>
    </solution>
    <solution rank="3" score="1">
      <pre u="237" v="256">92)					   *
 *   SQLColAttributes	  (ODBC, Deprecated)				   *
 *   SQLBindCol		  (ISO 92)					   *
 *   SQLFetch		  (ISO 92)					   *
 *   SQLFetchScroll	  (ISO 92)					   *
 *   SQLGetData		  (ISO 92)					   *
 *   SQLExtendedFetch	  (ODBC, Deprecated)				   *
 *   SQLMoreResults	  (</pre>
      <content type="TEXT" name="snippet" u="35" v="4692" />
      <match u="257" v="257">ODBC)					   *
 *									   *
 ****************************************************************************/

#</match>
      <post u="258" v="277"><![CDATA[include "myodbc3.h"
#include &lt;m_ctype.h>
#include &lt;locale.h>

#define SQL_MY_PRIMARY_KEY 1212

SQLRETURN SQL_API sql_]]></post>
    </solution>
    <solution rank="4" score="1">
      <pre u="299" v="318">Returns true if we are dealing with a statement which
            is likely to result in reading only (SELECT || SHOW).

            Some </pre>
      <content type="TEXT" name="snippet" u="35" v="4692" />
      <match u="319" v="319">ODBC </match>
      <post u="320" v="339">calls require knowledge about a statement
            which we can not determine until we have executed 
            the statement. This is because </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="451" v="470">TRUE;

    return FALSE;
}

/*
  @type    : myodbc3 internal
  @purpose : execute the query if it is only prepared. This is needed
  because the </pre>
      <content type="TEXT" name="snippet" u="35" v="4692" />
      <match u="471" v="471">ODBC </match>
      <post u="472" v="491">standard allows calling some functions
  before SQLExecute(). (Stupid!)
*/

static SQLRETURN check_result(STMT FAR *stmt )
{
    SQLRETURN error= 0;

    switch ( stmt-></post>
    </solution>
    <solution rank="6" score="1">
      <pre u="640" v="659">return set_stmt_error(stmt,"S1001","Not enough memory",4001);
    }
  }
  stmt->dummy_state= ST_DUMMY_EXECUTED;
  return(SQL_SUCCESS);
}

/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="4692" />
      <match u="660" v="660">ODBC </match>
      <post u="661" v="680">1.0 API
  @purpose : returns the number of columns in a result set
*/

SQLRETURN SQL_API SQLNumResultCols(SQLHSTMT  hstmt, SQLSMALLINT FAR *</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="742" v="761">a select */
  else
    *pccol= stmt->result->field_count;

  DBUG_PRINT("info",("columns: %d",*pccol));
  DBUG_RETURN_STATUS(SQL_SUCCESS);
}

/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="4692" />
      <match u="762" v="762">ODBC </match>
      <post u="763" v="782">1.0 API
  @purpose : returns the result column name, type, column size, decimal
  digits, and nullabilityfor one column in the result </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="1892" v="1911">break;

  default:
    DBUG_PRINT("warning",("Type: %d is not supported by the driver",
			  FieldIdentifier));
  }
  DBUG_RETURN_STATUS(SQL_SUCCESS);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="4692" />
      <match u="1912" v="1912">ODBC </match>
      <post u="1913" v="1932">3.0 API
  @purpose : rerunrs column atribute values
*/

SQLRETURN SQL_API
SQLColAttribute(SQLHSTMT  StatementHandle,
		SQLUSMALLINT ColumnNumber,
		SQLUSMALLINT FieldIdentifier,
		SQLPOINTER  CharacterAttributePtr,
		SQLSMALLINT </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="1930" v="1949">SQLPOINTER  CharacterAttributePtr,
		SQLSMALLINT BufferLength,
		SQLSMALLINT *StringLengthPtr,
		SQLPOINTER  NumericAttributePtr)
{
  return get_col_attr(StatementHandle, ColumnNumber,
		      FieldIdentifier, CharacterAttributePtr,
		      BufferLength, StringLengthPtr,
		      NumericAttributePtr);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="4692" />
      <match u="1950" v="1950">ODBC </match>
      <post u="1951" v="1970">1.0 API
  @purpose : rerunrs column atribute values
*/

SQLRETURN SQL_API
SQLColAttributes(SQLHSTMT hstmt,SQLUSMALLINT icol,
		 SQLUSMALLINT fDescType,
		 SQLPOINTER rgbDesc, SQLSMALLINT </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLRowCount	  (ISO  ... 92)					   *
 *   SQLDescribeCol	  (ISO 92)					   *
 *   SQLColAttribute	  (ISO 92)					   *
 *   SQLColAttributes	  (ODBC, Deprecated)				   *
 *   SQLBindCol		  (ISO 92)					   *
 *   SQLFetch		  (ISO 92)					   *
 *   SQLFetchScroll	  ( ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/utility.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/utility.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="186" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="222" v="241">h"

#if MYSQL_VERSION_ID >= 40100
#undef USE_MB
#endif


/*
  @type    : myodbc internal
  @purpose : executes the specified sql statement
*/

SQLRETURN </pre>
      <content type="TEXT" name="snippet" u="35" v="3999" />
      <match u="242" v="242">odbc_</match>
      <post u="243" v="262">stmt(DBC FAR *dbc, const char *query)
{
  SQLRETURN result= SQL_SUCCESS;
  DBUG_ENTER("odbc_stmt");
  DBUG_PRINT("enter",("stmt: %s",</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="236" v="255">executes the specified sql statement
*/

SQLRETURN odbc_stmt(DBC FAR *dbc, const char *query)
{
  SQLRETURN result= SQL_SUCCESS;
  DBUG_ENTER("</pre>
      <content type="TEXT" name="snippet" u="35" v="3999" />
      <match u="256" v="256">odbc_</match>
      <post u="257" v="276"><![CDATA[stmt");
  DBUG_PRINT("enter",("stmt: %s",query));

  pthread_mutex_lock(&amp;dbc->lock);
  if (check_if_server_is_alive(dbc) ||
      mysql_]]></post>
    </solution>
    <solution rank="2" score="1">
      <pre u="379" v="398">i;
  MYSQL_RES *result= stmt->result;
  DBUG_ENTER("fix_result_types");

  stmt->state= ST_EXECUTED;  /* Mark set found */
  if ((stmt-></pre>
      <content type="TEXT" name="snippet" u="35" v="3999" />
      <match u="399" v="399">odbc_</match>
      <post u="400" v="419"><![CDATA[types= (SQLSMALLINT*)
       my_malloc(sizeof(SQLSMALLINT)*result->field_count, MYF(0))))
  {
    for (i= 0 ; i &lt; result->field_count ; i++)
    {
      MYSQL_]]></post>
    </solution>
    <solution rank="3" score="1">
      <pre u="406" v="425"><![CDATA[result->field_count, MYF(0))))
  {
    for (i= 0 ; i &lt; result->field_count ; i++)
    {
      MYSQL_FIELD *field= result->fields+i;
      stmt->]]></pre>
      <content type="TEXT" name="snippet" u="35" v="3999" />
      <match u="426" v="426">odbc_</match>
      <post u="427" v="446">types[i]= (SQLSMALLINT) unireg_to_c_datatype(field);
    }
  }
  /*                              
    Fix default values for bound columns
    Normally there isn't any bound </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="529" v="548"><![CDATA[i= 0; i &lt; result->field_count ; i++)
    {
      if (stmt->bind[i].fCType == SQL_C_DEFAULT)
	stmt->bind[i].fCType= stmt->]]></pre>
      <content type="TEXT" name="snippet" u="35" v="3999" />
      <match u="549" v="549">odbc_</match>
      <post u="550" v="569">types[i];
      stmt->bind[i].field= mysql_fetch_field(result);
    }
  }
  DBUG_VOID_RETURN;
}


/*
  @type    : myodbc internal
  @purpose : change a string + </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="1654" v="1673">if (buff) strmov(buff,"timestamp");
    *transfer_length= 16;      /* size of timestamp_struct */
    *precision= *display_size= 19;
    if (stmt->dbc->env-></pre>
      <content type="TEXT" name="snippet" u="35" v="3999" />
      <match u="1674" v="1674">odbc_</match>
      <post u="1675" v="1694">ver == SQL_OV_ODBC3)
      return SQL_TYPE_TIMESTAMP;
    return SQL_TIMESTAMP;

  case FIELD_TYPE_DATETIME:
    if (buff) strmov(buff,"datetime");
    *</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="1690" v="1709">if (buff) strmov(buff,"datetime");
    *transfer_length= 16;      /* size of timestamp_struct */
    *precision= *display_size= 19;
    if (stmt->dbc->env-></pre>
      <content type="TEXT" name="snippet" u="35" v="3999" />
      <match u="1710" v="1710">odbc_</match>
      <post u="1711" v="1730">ver == SQL_OV_ODBC3)
      return SQL_TYPE_TIMESTAMP;
    return SQL_TIMESTAMP;

  case FIELD_TYPE_NEWDATE:
  case FIELD_TYPE_DATE:
    if (</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="1730" v="1749">if (buff) strmov(buff,"date");
    *transfer_length= 6;       /* size of date struct */
    *precision= *display_size= 10;
    if (stmt->dbc->env-></pre>
      <content type="TEXT" name="snippet" u="35" v="3999" />
      <match u="1750" v="1750">odbc_</match>
      <post u="1751" v="1770">ver == SQL_OV_ODBC3)
      return SQL_TYPE_DATE;
    return SQL_DATE;

  case FIELD_TYPE_TIME:
    if (buff) strmov(buff,"time");
    *</post>
    </solution>
    <solution rank="8" score="1">
      <pre u="1766" v="1785">if (buff) strmov(buff,"time");
    *transfer_length= 6;       /* size of time struct */
    *precision= *display_size= 8;
    if (stmt->dbc->env-></pre>
      <content type="TEXT" name="snippet" u="35" v="3999" />
      <match u="1786" v="1786">odbc_</match>
      <post u="1787" v="1806">ver == SQL_OV_ODBC3)
      return SQL_TYPE_TIME;
    return SQL_TIME;

  case FIELD_TYPE_STRING:
    /* Binary flag is for handling "</post>
    </solution>
    <solution rank="9" score="1">
      <pre u="3157" v="3176">name to current_database()
*/

my_bool reget_current_catalog(DBC FAR *dbc)
{
    my_free((gptr) dbc->database,MYF(0));
    if (</pre>
      <content type="TEXT" name="snippet" u="35" v="3999" />
      <match u="3177" v="3177">odbc_</match>
      <post u="3178" v="3197"><![CDATA[stmt(dbc, "select database()"))
    {
        return 1;
    }
    else
    {
        MYSQL_RES *res;
        MYSQL_ROW row;

        if ((res= mysql_store_result(&amp;dbc->mysql)) &amp;&amp;
            (]]></post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... internal
  @purpose : executes the specified sql statement
*/

SQLRETURN odbc_stmt(DBC FAR *dbc, const char *query)
{
  SQLRETURN result= SQL_SUCCESS;
  DBUG_ENTER("odbc_stmt");
  DBUG_PRINT("enter",("stmt: %s",query));

  pthread_ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/README.osx"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/README.osx/"
  graph-id-high-water="0" priority="0" vertex="0" i="190" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="35" v="35">+-------------------------------------------------------------+
| Connector/</pre>
      <content type="TEXT" name="snippet" u="34" v="3374" />
      <match u="36" v="36">ODBC                                              |
| </match>
      <post u="37" v="56">Apple OSX                                                   |
+-------------------------------------------------------------+

INTRODUCTION
---------------------------------------------------------------

These are my notes from my experiences building a binary MyODBC 
distribution on/for OSX. This was </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="118" v="137">3.51.10: Now using a G5 single 1.8 Ghz.

Well; actually I had to reinstall everything after ending up 
with multiple </pre>
      <content type="TEXT" name="snippet" u="34" v="3374" />
      <match u="138" v="138">ODBC </match>
      <post u="139" v="158">systems on my OSX. Apple has not done a good 
job of taking charge of the core ODBC stuff so </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="136" v="155">with multiple ODBC systems on my OSX. Apple has not done a good 
job of taking charge of the core </pre>
      <content type="TEXT" name="snippet" u="34" v="3374" />
      <match u="156" v="156">ODBC </match>
      <post u="157" v="176">stuff so the driver 
vendors and others are all trying to lead it in various self 
serving directions and this </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="395" v="414">version which came with my 
OSX distribution. Its gcc with some GUI stuff.  

NOTE 3.51.10: Now using xcode v1.5.

</pre>
      <content type="TEXT" name="snippet" u="34" v="3374" />
      <match u="415" v="415">ODBC
----

</match>
      <post u="416" v="435">My goal was to get things to work with the default ODBC 
environment. This is a version of iODBC built </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="407" v="426">stuff.  

NOTE 3.51.10: Now using xcode v1.5.

ODBC
----

My goal was to get things to work with the default </pre>
      <content type="TEXT" name="snippet" u="34" v="3374" />
      <match u="427" v="427">ODBC 
</match>
      <post u="428" v="447">environment. This is a version of iODBC built by
Apple - unfortunately this has many problems. I think it is 
preferrable </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="438" v="457">unfortunately this has many problems. I think it is 
preferrable to live with the problems and bug Apple to update 
</pre>
      <content type="TEXT" name="snippet" u="34" v="3374" />
      <match u="458" v="458">ODBC </match>
      <post u="459" v="478">in future releases than to install a new Driver Manager (as 
some are doing).

MySQL
-----

I used the latest general </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="1436" v="1455">with-mysql-path=/usr/local
$ make

This build process will fail because it lacks a config.h
needed by an </pre>
      <content type="TEXT" name="snippet" u="34" v="3374" />
      <match u="1456" v="1456">odbc </match>
      <post u="1457" v="1476">include file. I had the source for iodbc
(www.iodbc.org) laying around so I did a quick configure
in </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="2067" v="2086">dl warnings - but these should get sorted 
      out at some point in the future. 


myodbcinst
----------

Ensure that you have the </pre>
      <content type="TEXT" name="snippet" u="34" v="3374" />
      <match u="2087" v="2087">ODBC </match>
      <post u="2088" v="2107">config files we are going
to use. They are;

~/Library/ODBC/odbcinst.ini
~/Library/ODBC/odbc.ini

If they are </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="2078" v="2097">in the future. 


myodbcinst
----------

Ensure that you have the ODBC config files we are going
to use. They are;

~/Library/</pre>
      <content type="TEXT" name="snippet" u="34" v="3374" />
      <match u="2098" v="2098">ODBC/</match>
      <post u="2099" v="2118">odbcinst.ini
~/Library/ODBC/odbc.ini

If they are missing simply create empty ones. In 
anycase ensure that you have </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="2082" v="2101">Ensure that you have the ODBC config files we are going
to use. They are;

~/Library/ODBC/odbcinst.ini
~/Library/</pre>
      <content type="TEXT" name="snippet" u="34" v="3374" />
      <match u="2102" v="2102">ODBC/</match>
      <post u="2103" v="2122">odbc.ini

If they are missing simply create empty ones. In 
anycase ensure that you have read/write privs. on
</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold">+-------------------------------------------------------------+
| Connector/ODBC                                              |
| Apple OSX                                                   |
+-------------------------------------------------------------+

INTRODUCTION
---------------------------------------------------------------

These are my notes from my experiences building a binary MyODBC 
distribution on/for  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/acinclude.m4"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/acinclude.m4/"
  graph-id-high-water="0" priority="0" vertex="0" i="192" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="75" v="94">if test -r "$i/$j"; then
      $3=$i
      break 2
    fi
  done
done
])

dnl ---------------------------------------------------------
dnl
dnl Macro: 
dnl     AC_CHECK_</pre>
      <content type="TEXT" name="snippet" u="34" v="1989" />
      <match u="95" v="95">ODBC_</match>
      <post u="96" v="115">TYPE
dnl
dnl Arguments:
dnl
dnl Description:
dnl     Checks if $1 is a valid type in the ODBC environment,
dnl     </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="93" v="112">AC_CHECK_ODBC_TYPE
dnl
dnl Arguments:
dnl
dnl Description:
dnl     Checks if $1 is a valid type in the </pre>
      <content type="TEXT" name="snippet" u="34" v="1989" />
      <match u="113" v="113">ODBC </match>
      <post u="114" v="133">environment,
dnl     and #defines it to $2 if not
dnl
dnl ---------------------------------------------------------

AC_DEFUN(AC_CHECK_ODBC_TYPE,
[

AC_MSG_CHECKING([</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="109" v="128">valid type in the ODBC environment,
dnl     and #defines it to $2 if not
dnl
dnl ---------------------------------------------------------

AC_DEFUN(AC_CHECK_</pre>
      <content type="TEXT" name="snippet" u="34" v="1989" />
      <match u="129" v="129">ODBC_</match>
      <post u="130" v="149">TYPE,
[

AC_MSG_CHECKING([for $1])
AC_CACHE_VAL(ac_cv_odbc_$1,
[
echo > conftest.c

for i in $odbc_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="121" v="140">if not
dnl
dnl ---------------------------------------------------------

AC_DEFUN(AC_CHECK_ODBC_TYPE,
[

AC_MSG_CHECKING([for $1])
AC_CACHE_VAL(ac_cv_</pre>
      <content type="TEXT" name="snippet" u="34" v="1989" />
      <match u="141" v="141">odbc_$</match>
      <post u="142" v="161"><![CDATA[1,
[
echo > conftest.c

for i in $odbc_headers
do
	echo "#include &lt;$i>" >> conftest.c
done

echo "int main(void) { $]]></post>
    </solution>
    <solution rank="4" score="1">
      <pre u="129" v="148">ODBC_TYPE,
[

AC_MSG_CHECKING([for $1])
AC_CACHE_VAL(ac_cv_odbc_$1,
[
echo > conftest.c

for i in $</pre>
      <content type="TEXT" name="snippet" u="34" v="1989" />
      <match u="149" v="149">odbc_</match>
      <post u="150" v="169"><![CDATA[headers
do
	echo "#include &lt;$i>" >> conftest.c
done

echo "int main(void) { $1 x; return 0; }" >> conftest.c

if $CC -]]></post>
    </solution>
    <solution rank="5" score="1">
      <pre u="164" v="183">return 0; }" >> conftest.c

if $CC -c $CFLAGS $CPPFLAGS conftest.c > /dev/null 2> /dev/null
then
	eval ac_cv_</pre>
      <content type="TEXT" name="snippet" u="34" v="1989" />
      <match u="184" v="184">odbc_$</match>
      <post u="185" v="204">1=yes
else
	eval ac_cv_odbc_$2=no
fi
rm -f conftest*
])

eval ac_odbc_check_res=$ac_cv_</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="171" v="190">CFLAGS $CPPFLAGS conftest.c > /dev/null 2> /dev/null
then
	eval ac_cv_odbc_$1=yes
else
	eval ac_cv_</pre>
      <content type="TEXT" name="snippet" u="34" v="1989" />
      <match u="191" v="191">odbc_$</match>
      <post u="192" v="211">2=no
fi
rm -f conftest*
])

eval ac_odbc_check_res=$ac_cv_odbc_$1
if test "x$ac_odbc_</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="180" v="199">then
	eval ac_cv_odbc_$1=yes
else
	eval ac_cv_odbc_$2=no
fi
rm -f conftest*
])

eval ac_</pre>
      <content type="TEXT" name="snippet" u="34" v="1989" />
      <match u="200" v="200">odbc_</match>
      <post u="201" v="220">check_res=$ac_cv_odbc_$1
if test "x$ac_odbc_check_res" = "xyes"
then
	AC_MSG_RESULT(yes)
else
	</post>
    </solution>
    <solution rank="8" score="1">
      <pre u="185" v="204">1=yes
else
	eval ac_cv_odbc_$2=no
fi
rm -f conftest*
])

eval ac_odbc_check_res=$ac_cv_</pre>
      <content type="TEXT" name="snippet" u="34" v="1989" />
      <match u="205" v="205">odbc_$</match>
      <post u="206" v="225">1
if test "x$ac_odbc_check_res" = "xyes"
then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT([no ($2)])
	</post>
    </solution>
    <solution rank="9" score="1">
      <pre u="191" v="210">odbc_$2=no
fi
rm -f conftest*
])

eval ac_odbc_check_res=$ac_cv_odbc_$1
if test "x$ac_</pre>
      <content type="TEXT" name="snippet" u="34" v="1989" />
      <match u="211" v="211">odbc_</match>
      <post u="212" v="231">check_res" = "xyes"
then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT([no ($2)])
	AC_DEFINE($1,$2,[Define if $</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... done
])

dnl ---------------------------------------------------------
dnl
dnl Macro: 
dnl     AC_CHECK_ODBC_TYPE
dnl
dnl Arguments:
dnl
dnl Description:
dnl      ... if $1 is a valid type in the ODBC environment,
dnl     and #defines it to $2 if  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/README.unix"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/README.unix/"
  graph-id-high-water="0" priority="0" vertex="0" i="193" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="35" v="35">+-------------------------------------------------------------+
| Connector/</pre>
      <content type="TEXT" name="snippet" u="34" v="433" />
      <match u="36" v="36">ODBC                                              |
| </match>
      <post u="37" v="56">UNIX Platforms                                              |
+-------------------------------------------------------------+

INTRODUCTION
---------------------------------------------------------------

In this document I provide a general explaination of how to 
build the MyODBC driver on UNIX </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="87" v="106">UNIX.
	
WHAT YOU NEED
---------------------------------------------------------------

UNIX
----

UNIX or some UNIX-like operating system such as;

- Solaris
- Linux
- HP-UX
- AIX
- OSX

</pre>
      <content type="TEXT" name="snippet" u="34" v="433" />
      <match u="107" v="107">ODBC
----

</match>
      <post u="108" v="127">You need an ODBC SDK and you probably want an ODBC Driver 
Manager. 

ODBC has not, traditionally, been a standard </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="91" v="110">UNIX
----

UNIX or some UNIX-like operating system such as;

- Solaris
- Linux
- HP-UX
- AIX
- OSX

ODBC
----

You need an </pre>
      <content type="TEXT" name="snippet" u="34" v="433" />
      <match u="111" v="111">ODBC </match>
      <post u="112" v="131">SDK and you probably want an ODBC Driver 
Manager. 

ODBC has not, traditionally, been a standard part of any UNIX 
</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="98" v="117">system such as;

- Solaris
- Linux
- HP-UX
- AIX
- OSX

ODBC
----

You need an ODBC SDK and you probably want an </pre>
      <content type="TEXT" name="snippet" u="34" v="433" />
      <match u="118" v="118">ODBC </match>
      <post u="119" v="138">Driver 
Manager. 

ODBC has not, traditionally, been a standard part of any UNIX 
or UNIX-like platform. This caused a </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="101" v="120">Solaris
- Linux
- HP-UX
- AIX
- OSX

ODBC
----

You need an ODBC SDK and you probably want an ODBC Driver 
Manager. 

</pre>
      <content type="TEXT" name="snippet" u="34" v="433" />
      <match u="121" v="121">ODBC </match>
      <post u="122" v="141">has not, traditionally, been a standard part of any UNIX 
or UNIX-like platform. This caused a number of vendors </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="124" v="143">traditionally, been a standard part of any UNIX 
or UNIX-like platform. This caused a number of vendors to 
provide </pre>
      <content type="TEXT" name="snippet" u="34" v="433" />
      <match u="144" v="144">ODBC </match>
      <post u="145" v="164">solutions which can be added to UNIX. In theory 
this should not be a problem but in practice this can </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="166" v="185">compatability and portability issues.

Recently; Linux distributions have been including unixODBC as a
standard option and Apple OSX now has </pre>
      <content type="TEXT" name="snippet" u="34" v="433" />
      <match u="186" v="186">ODBC </match>
      <post u="187" v="206">by default.

We recommend, and use, unixODBC on all UNIX-like platforms
except OSX where we use the default ODBC.

</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="186" v="205">ODBC by default.

We recommend, and use, unixODBC on all UNIX-like platforms
except OSX where we use the default </pre>
      <content type="TEXT" name="snippet" u="34" v="433" />
      <match u="206" v="206">ODBC.

</match>
      <post u="207" v="226">see;
	http://www.unixodbc.org

Compiler Tools
--------------

We try to build using the native compiler tool set for the 
target </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="384" v="403">point all of the MyODBC files should be in place but you
probably want to register the driver with the </pre>
      <content type="TEXT" name="snippet" u="34" v="433" />
      <match u="404" v="404">ODBC </match>
      <post u="405" v="424">on your system.

See your ODBC documentation for more on how to do this. For
unixODBC one could use the </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="390" v="409">should be in place but you
probably want to register the driver with the ODBC on your system.

See your </pre>
      <content type="TEXT" name="snippet" u="34" v="433" />
      <match u="410" v="410">ODBC </match>
      <post u="411" v="430"><![CDATA[documentation for more on how to do this. For
unixODBC one could use the odbcinst command line tool.


+-------------------------------------------------------------+
| Peter Harvey &lt;]]></post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold">+-------------------------------------------------------------+
| Connector/ODBC                                              |
| UNIX Platforms                                              |
+-------------------------------------------------------------+

INTRODUCTION
---------------------------------------------------------------

In this document I provide a general explaination of how to 
build the MyODBC  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/ChangeLog"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/ChangeLog/"
  graph-id-high-water="0" priority="0" vertex="0" i="194" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="34" v="34">		***************************************
		*       MySQL </pre>
      <content type="TEXT" name="snippet" u="33" v="2195" />
      <match u="35" v="35">ODBC </match>
      <post u="36" v="55">3.51 Driver        *
		*             CHANGELOG               *
		***************************************

---------------------------------------------
28-Jan-2005 (3.51.11): pharvey@mysql.com 
---------------------------------------------

-- Corrected SQLDriverConnect now *always* prompting when
   SQL_DRIVER_PROMPT
-- Corrected </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="82" v="101">for read - silently converts upon write.
   
---------------------------------------------
15-Dec-2004 : pharvey@mysql.com
---------------------------------------------
This is the 'bug fix' release of Connector/</pre>
      <content type="TEXT" name="snippet" u="33" v="2195" />
      <match u="102" v="102">ODBC '</match>
      <post u="103" v="122">3.51.10a'. Here is
the list of changes in the 3.51.10a:

-- SQLDriverConnect heavily reworked to more fully support prompting
-- </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="130" v="149">Improvements for working with Crystal Reports

---------------------------------------------		
25-Oct-2004 : pharvey@mysql.com
---------------------------------------------
This is the 'bug fix' release of Connector/</pre>
      <content type="TEXT" name="snippet" u="33" v="2195" />
      <match u="150" v="150">ODBC '</match>
      <post u="151" v="170">3.51.10'. Here is 
the list of changes in the 3.51.10:

-- Use MyODBC with 4.1 client library
-- Introduction of a Qt </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="176" v="195">3456
-- Updated documentation

---------------------------------------------		
10-Oct-2003 : monty@mysql.com, venu@mysql.com
---------------------------------------------
This is the 'bug fix' release of Connector/</pre>
      <content type="TEXT" name="snippet" u="33" v="2195" />
      <match u="196" v="196">ODBC '</match>
      <post u="197" v="216">3.51.07'. Here is 
the list of changes in the 3.51.07:

-- Use MyODBC with 4.0 client library
-- Fix configure to take </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="249" v="268">compiler warnings
-- Compile thread safe library as default
-- Disable sigpipe if not compiling threadsafe
-- Test are now run with users '</pre>
      <content type="TEXT" name="snippet" u="33" v="2195" />
      <match u="269" v="269">odbc', </match>
      <post u="270" v="289">password ''
-- Big code cleanup to make the code (more) conformant to MYSQL coding
   conventions
-- Fixed a crash when SQLSetPos is </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="451" v="470">the platform dependant compilers

---------------------------------------------		
27-Feb-2003 : monty@mysql.com, venu@mysql.com
---------------------------------------------
This is the 'stable' release of Connector/</pre>
      <content type="TEXT" name="snippet" u="33" v="2195" />
      <match u="471" v="471">ODBC '</match>
      <post u="472" v="491">3.51.06'.

The development is started in 3.52 tree which mainly 
aims to support the following features:

  - Binary protocol compatible with </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="578" v="597"><![CDATA[the table &amp; 
    - the schema of the table is changed.

-- Fixed to refresh the initialized SQLSTATEs in the 
   driver when the ]]></pre>
      <content type="TEXT" name="snippet" u="33" v="2195" />
      <match u="598" v="598">ODBC </match>
      <post u="599" v="618">version is changed and when the 
   multiple instances of driver is loaded into to the 
   memory.

-- Fixed a minor bug </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="837" v="856"><![CDATA[handle 
   SQL_NUMERIC_STRUCT conversion due to lack of descriptors 
   support.
   (Request from Michael Thomas &lt;mithomas@microsoft.com>
    from Microsoft ]]></pre>
      <content type="TEXT" name="snippet" u="33" v="2195" />
      <match u="857" v="857">ODBC </match>
      <post u="858" v="877">team)

-- Added missed ROWS_FETCH_PTR status to SQLFetch and 
   SQLExtendedFetch as that of SQLFetchScroll along 
   with PARAMA_PROCESSED_PTR.

-- </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="1377" v="1396">is processing 
   to c:/myodbc.sql file (or /tmp/myodbc.sql)
  
-- Added code to have one time initialization when the 
   </pre>
      <content type="TEXT" name="snippet" u="33" v="2195" />
      <match u="1397" v="1397">ODBC </match>
      <post u="1398" v="1417">version specified is SQL_OV_ODBC2, so that the 
   subsequent driver calls will not perform any checks 
   on ODBC version.
   
-- </post>
    </solution>
    <solution rank="9" score="1">
      <pre u="1396" v="1415">the 
   ODBC version specified is SQL_OV_ODBC2, so that the 
   subsequent driver calls will not perform any checks 
   on </pre>
      <content type="TEXT" name="snippet" u="33" v="2195" />
      <match u="1416" v="1416">ODBC </match>
      <post u="1417" v="1436">version.
   
-- Fix to return an error when the float fields are used 
   in positioned options( Info from Jim Dickenson 
   [dickenson@</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold">		***************************************
		*       MySQL ODBC 3.51 Driver        *
		*             CHANGELOG               *
		***************************************

---------------------------------------------
28-Jan-2005 (3.51.11): pharvey@mysql.com 
---------------------------------------------

-- Corrected SQLDriverConnect now *always* prompting when
   SQL_ ... This is the 'bug fix' release of Connector/ODBC '3.51.10a'. Here is
the list of changes  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/myodbcinst/myodbcinst.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/myodbcinst/myodbcinst.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="198" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="221" v="240">create
          a sample dsn. The key thing here is that it does this with 
          cross-platform code - thanks to the </pre>
      <content type="TEXT" name="snippet" u="35" v="3132" />
      <match u="241" v="241">ODBC </match>
      <post u="242" v="261">installer API. This is
          most useful to those creating installers (apps using myodbc or 
          myodbc itself).

          For example; this program </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="348" v="367">likely to expand over time. */
char *szSyntax =
"\n" \
"myodbcinst\n" \
"----------\n" \
"\n" \
"Purpose:\n" \
"\n" \
"  Use this program to manage </pre>
      <content type="TEXT" name="snippet" u="35" v="3132" />
      <match u="368" v="368">ODBC </match>
      <post u="369" v="388">system information from the\n" \
"  command-line. This is particularly useful for installation \n" \
"  processes. It is also useful for </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="375" v="394">line. This is particularly useful for installation \n" \
"  processes. It is also useful for testing the abstraction/\n" \
"  portability of </pre>
      <content type="TEXT" name="snippet" u="35" v="3132" />
      <match u="395" v="395">ODBC </match>
      <post u="396" v="415"><![CDATA[system information provided by the  \n" \
"  MYODBCUtil library.\n" \
"\n" \
"Usage:\n" \
"\n" \
"  $ myodbcinst &lt;action> &lt;object> &lt;option>\n" \
"\n" \
"  +----------------------------------------------------------+\n" \
"  |                      ]]></post>
    </solution>
    <solution rank="3" score="1">
      <pre u="607" v="626">data source names;\n" \
"    $ myodbcinst -q -s\n" \
"  List data source attributes for MyODBC;\n" \
"    $ myodbcinst -q -s -n\"MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="3132" />
      <match u="627" v="627">ODBC </match>
      <post u="628" v="647">3.51 Driver\"\n" \
"  Register a driver;\n" \
"    $ myodbcinst -a -d -t\"MySQL ODBC 3.51 Driver;DRIVER=/usr/lib/libmyodbc3.so;</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="620" v="639">MyODBC;\n" \
"    $ myodbcinst -q -s -n\"MySQL ODBC 3.51 Driver\"\n" \
"  Register a driver;\n" \
"    $ myodbcinst -a -d -t\"MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="3132" />
      <match u="640" v="640">ODBC </match>
      <post u="641" v="660">3.51 Driver;DRIVER=/usr/lib/libmyodbc3.so;SETUP=/usr/lib/libmyodbc3S.so\"\n" \
"  Create a user data source name;\n" \
"    $ </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="649" v="668">usr/lib/libmyodbc3S.so\"\n" \
"  Create a user data source name;\n" \
"    $ myodbcinst -a -su -t\"DSN=MyDSN;DRIVER=MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="3132" />
      <match u="669" v="669">ODBC </match>
      <post u="670" v="689">3.51 Driver;SERVER=localhost;UID=pharvey\"\n" \
"\n" \
"Enjoy\n" \
"Peter Harvey\n";

/*
    Register Driver for Various Platforms
    
    XP
    
        $ myodbcinst -</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="674" v="693">UID=pharvey\"\n" \
"\n" \
"Enjoy\n" \
"Peter Harvey\n";

/*
    Register Driver for Various Platforms
    
    XP
    
        $ myodbcinst -a -d -t"MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="3132" />
      <match u="694" v="694">ODBC </match>
      <post u="695" v="714">3.51 Driver;DRIVER=myodbc3.dll;SETUP=myodbc3S.dll"
        
        OR for old GUI...
        
        $ myodbcinst -a -d -t"MySQL ODBC 3.51 Driver;</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="692" v="711">t"MySQL ODBC 3.51 Driver;DRIVER=myodbc3.dll;SETUP=myodbc3S.dll"
        
        OR for old GUI...
        
        $ myodbcinst -a -d -t"MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="3132" />
      <match u="712" v="712">ODBC </match>
      <post u="713" v="732">3.51 Driver;DRIVER=myodbc3.dll;SETUP=myodbc3.dll"
        
    OSX

          At least some of the functions dealing with the
          odbc system </post>
    </solution>
    <solution rank="8" score="1">
      <pre u="711" v="730">MySQL ODBC 3.51 Driver;DRIVER=myodbc3.dll;SETUP=myodbc3.dll"
        
    OSX

          At least some of the functions dealing with the
          </pre>
      <content type="TEXT" name="snippet" u="35" v="3132" />
      <match u="731" v="731">odbc </match>
      <post u="732" v="751">system information are case sensitive
          (contrary to the ODBC spec.). They appear to like
          leading caps.
          
        $ myodbcinst -a -d -t"</post>
    </solution>
    <solution rank="9" score="1">
      <pre u="720" v="739">dll"
        
    OSX

          At least some of the functions dealing with the
          odbc system information are case sensitive
          (contrary to the </pre>
      <content type="TEXT" name="snippet" u="35" v="3132" />
      <match u="740" v="740">ODBC </match>
      <post u="741" v="760">spec.). They appear to like
          leading caps.
          
        $ myodbcinst -a -d -t"MySQL ODBC 3.51 Driver;Driver=/usr/lib/libmyodbc3.so;</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... this with 
          cross-platform code - thanks to the ODBC installer API. This is
          most useful to those  ... Purpose:\n" \
"\n" \
"  Use this program to manage ODBC system information from the\n" \
"  command-line. This  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtilWriteDataSource.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtilWriteDataSource.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="41" la-score="0.1"
  vse-base-score="1.99609"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="273" v="292"><![CDATA[name */
    if ( !SQLWriteDSNToIni( pDataSource->pszDSN, pDataSource->pszDRIVER ) )
        return FALSE;

    /* add details */
    if ( pDataSource->pszDATABASE &amp;&amp; 
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "DATABASE", pDataSource->pszDATABASE, "]]></pre>
      <content type="TEXT" name="snippet" u="35" v="402" />
      <match u="293" v="293">odbc.</match>
      <post u="294" v="313"><![CDATA[ini" ) )
        return FALSE;
    if ( pDataSource->pszDESCRIPTION &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "DESCRIPTION", pDataSource->pszDESCRIPTION, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszOPTION &amp;&amp;
         !SQLWritePrivateProfileString( ]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="286" v="305"><![CDATA[pszDATABASE &amp;&amp; 
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "DATABASE", pDataSource->pszDATABASE, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszDESCRIPTION &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "DESCRIPTION", pDataSource->pszDESCRIPTION, "]]></pre>
      <content type="TEXT" name="snippet" u="35" v="402" />
      <match u="306" v="306">odbc.</match>
      <post u="307" v="326"><![CDATA[ini" ) )
        return FALSE;
    if ( pDataSource->pszOPTION &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "OPTION", pDataSource->pszOPTION, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszPASSWORD &amp;&amp;
         !SQLWritePrivateProfileString( ]]></post>
    </solution>
    <solution rank="2" score="1">
      <pre u="299" v="318"><![CDATA[pszDESCRIPTION &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "DESCRIPTION", pDataSource->pszDESCRIPTION, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszOPTION &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "OPTION", pDataSource->pszOPTION, "]]></pre>
      <content type="TEXT" name="snippet" u="35" v="402" />
      <match u="319" v="319">odbc.</match>
      <post u="320" v="339"><![CDATA[ini" ) )
        return FALSE;
    if ( pDataSource->pszPASSWORD &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "PWD", pDataSource->pszPASSWORD, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszPORT &amp;&amp;
         !SQLWritePrivateProfileString( ]]></post>
    </solution>
    <solution rank="3" score="1">
      <pre u="312" v="331"><![CDATA[pszOPTION &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "OPTION", pDataSource->pszOPTION, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszPASSWORD &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "PWD", pDataSource->pszPASSWORD, "]]></pre>
      <content type="TEXT" name="snippet" u="35" v="402" />
      <match u="332" v="332">odbc.</match>
      <post u="333" v="352"><![CDATA[ini" ) )
        return FALSE;
    if ( pDataSource->pszPORT &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "PORT", pDataSource->pszPORT, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszSERVER &amp;&amp;
         !SQLWritePrivateProfileString( ]]></post>
    </solution>
    <solution rank="4" score="1">
      <pre u="325" v="344"><![CDATA[pszPASSWORD &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "PWD", pDataSource->pszPASSWORD, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszPORT &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "PORT", pDataSource->pszPORT, "]]></pre>
      <content type="TEXT" name="snippet" u="35" v="402" />
      <match u="345" v="345">odbc.</match>
      <post u="346" v="365"><![CDATA[ini" ) )
        return FALSE;
    if ( pDataSource->pszSERVER &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "SERVER", pDataSource->pszSERVER, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszSOCKET &amp;&amp;
         !SQLWritePrivateProfileString( ]]></post>
    </solution>
    <solution rank="5" score="1">
      <pre u="338" v="357"><![CDATA[pszPORT &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "PORT", pDataSource->pszPORT, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszSERVER &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "SERVER", pDataSource->pszSERVER, "]]></pre>
      <content type="TEXT" name="snippet" u="35" v="402" />
      <match u="358" v="358">odbc.</match>
      <post u="359" v="378"><![CDATA[ini" ) )
        return FALSE;
    if ( pDataSource->pszSOCKET &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "SOCKET", pDataSource->pszSOCKET, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszSTMT &amp;&amp; 
         !SQLWritePrivateProfileString( ]]></post>
    </solution>
    <solution rank="6" score="1">
      <pre u="351" v="370"><![CDATA[pszSERVER &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "SERVER", pDataSource->pszSERVER, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszSOCKET &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "SOCKET", pDataSource->pszSOCKET, "]]></pre>
      <content type="TEXT" name="snippet" u="35" v="402" />
      <match u="371" v="371">odbc.</match>
      <post u="372" v="391"><![CDATA[ini" ) )
        return FALSE;
    if ( pDataSource->pszSTMT &amp;&amp; 
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "STMT", pDataSource->pszSTMT, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszUSER &amp;&amp;
         !SQLWritePrivateProfileString( ]]></post>
    </solution>
    <solution rank="7" score="1">
      <pre u="364" v="383"><![CDATA[pszSOCKET &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "SOCKET", pDataSource->pszSOCKET, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszSTMT &amp;&amp; 
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "STMT", pDataSource->pszSTMT, "]]></pre>
      <content type="TEXT" name="snippet" u="35" v="402" />
      <match u="384" v="384">odbc.</match>
      <post u="385" v="402"><![CDATA[ini" ) )
        return FALSE;
    if ( pDataSource->pszUSER &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "UID", pDataSource->pszUSER, "odbc.ini" ) )
        return FALSE;

    return TRUE;
}


]]></post>
    </solution>
    <solution rank="8" score="1">
      <pre u="377" v="396"><![CDATA[pszSTMT &amp;&amp; 
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "STMT", pDataSource->pszSTMT, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszUSER &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "UID", pDataSource->pszUSER, "]]></pre>
      <content type="TEXT" name="snippet" u="35" v="402" />
      <match u="397" v="397">odbc.</match>
      <post u="398" v="402">ini" ) )
        return FALSE;

    return TRUE;
}


</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... pDataSource->pszDATABASE &amp;&amp; 
         !SQLWritePrivateProfileString( pDataSource->pszDSN, "DATABASE", pDataSource->pszDATABASE, "odbc.ini" ) )
        return FALSE;
    if ( pDataSource->pszDESCRIPTION &amp;&amp;
         !SQLWritePrivateProfileString( pDataSource-> ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_keys.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_keys.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="22" la-score="0.1"
  vse-base-score="1.99219"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="2439" v="2458">tables (MySQL specific)
*/
static void my_init_mysql_fkey(SQLHDBC hdbc,SQLHSTMT hstmt)
{
  SQLRETURN rc;  	

    SQLExecDirect(hstmt,"DROP DATABASE test_</pre>
      <content type="TEXT" name="snippet" u="36" v="5153" />
      <match u="2459" v="2459">odbc_</match>
      <post u="2460" v="2479">fk",SQL_NTS);
    SQLExecDirect(hstmt,"CREATE DATABASE test_odbc_fk",SQL_NTS);
    SQLExecDirect(hstmt,"use test_odbc_fk",SQL_NTS);
  
    </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="2448" v="2467">SQLHDBC hdbc,SQLHSTMT hstmt)
{
  SQLRETURN rc;  	

    SQLExecDirect(hstmt,"DROP DATABASE test_odbc_fk",SQL_NTS);
    SQLExecDirect(hstmt,"CREATE DATABASE test_</pre>
      <content type="TEXT" name="snippet" u="36" v="5153" />
      <match u="2468" v="2468">odbc_</match>
      <post u="2469" v="2488">fk",SQL_NTS);
    SQLExecDirect(hstmt,"use test_odbc_fk",SQL_NTS);
  
    rc = SQLExecDirect(hstmt,"DROP TABLE test_fkey_c1",SQL_</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="2456" v="2475">DROP DATABASE test_odbc_fk",SQL_NTS);
    SQLExecDirect(hstmt,"CREATE DATABASE test_odbc_fk",SQL_NTS);
    SQLExecDirect(hstmt,"use test_</pre>
      <content type="TEXT" name="snippet" u="36" v="5153" />
      <match u="2476" v="2476">odbc_</match>
      <post u="2477" v="2496">fk",SQL_NTS);
  
    rc = SQLExecDirect(hstmt,"DROP TABLE test_fkey_c1",SQL_NTS);
	  rc = SQLExecDirect(hstmt,"DROP TABLE test_fkey3",</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="3146" v="3165">the foreignkey tables (std)
*/
static void my_init_fkey(SQLHDBC hdbc,SQLHSTMT hstmt)
{
  SQLRETURN rc;  	

    SQLExecDirect(hstmt,"DROP DATABASE test_</pre>
      <content type="TEXT" name="snippet" u="36" v="5153" />
      <match u="3166" v="3166">odbc_</match>
      <post u="3167" v="3186">fk",SQL_NTS);
    SQLExecDirect(hstmt,"CREATE DATABASE test_odbc_fk",SQL_NTS);
    SQLExecDirect(hstmt,"use test_odbc_fk",SQL_NTS);
  
    </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="3155" v="3174">SQLHDBC hdbc,SQLHSTMT hstmt)
{
  SQLRETURN rc;  	

    SQLExecDirect(hstmt,"DROP DATABASE test_odbc_fk",SQL_NTS);
    SQLExecDirect(hstmt,"CREATE DATABASE test_</pre>
      <content type="TEXT" name="snippet" u="36" v="5153" />
      <match u="3175" v="3175">odbc_</match>
      <post u="3176" v="3195">fk",SQL_NTS);
    SQLExecDirect(hstmt,"use test_odbc_fk",SQL_NTS);
  
    rc = SQLExecDirect(hstmt,"DROP TABLE test_fkey_c1",SQL_</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="3163" v="3182">DROP DATABASE test_odbc_fk",SQL_NTS);
    SQLExecDirect(hstmt,"CREATE DATABASE test_odbc_fk",SQL_NTS);
    SQLExecDirect(hstmt,"use test_</pre>
      <content type="TEXT" name="snippet" u="36" v="5153" />
      <match u="3183" v="3183">odbc_</match>
      <post u="3184" v="3203">fk",SQL_NTS);
  
    rc = SQLExecDirect(hstmt,"DROP TABLE test_fkey_c1",SQL_NTS);
	  rc = SQLExecDirect(hstmt,"DROP TABLE test_fkey3",</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="3650" v="3669">foreign_keys");
	
    server_is_mysql(hdbc) ? my_init_mysql_fkey(hdbc,hstmt) : my_init_fkey(hdbc,hstmt);

    strcpy(dbc, "test_</pre>
      <content type="TEXT" name="snippet" u="36" v="5153" />
      <match u="3670" v="3670">odbc_</match>
      <post u="3671" v="3690">fk");

	  myprintf("\n WITH ONLY PK OPTION");
	  rc = SQLForeignKeys(hstmt,
						  dbc, SQL_NTS,			      /*PK CATALOG*/
						  NULL, SQL_NTS,			    /*PK SCHEMA*/
						  "</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="4348" v="4367">hstmt,rc);
	  myassert(1 == myresult(hstmt));  

    {
      char buff[255];
      sprintf(buff,"use %s",mydb);
      rc = SQLExecDirect(hstmt, "DROP DATABASE test_</pre>
      <content type="TEXT" name="snippet" u="36" v="5153" />
      <match u="4368" v="4368">odbc_</match>
      <post u="4369" v="4388">fk", SQL_NTS);
      mystmt(hstmt, rc);
      SQLFreeStmt(hstmt, SQL_CLOSE);
      SQLExecDirect(hstmt, buff, SQL_NTS);
      SQLFreeStmt(hstmt, SQL_CLOSE);
    }
}

void </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... hstmt)
{
  SQLRETURN rc;  	

    SQLExecDirect(hstmt,"DROP DATABASE test_odbc_fk",SQL_NTS);
    SQLExecDirect(hstmt,"CREATE DATABASE test_odbc_fk",SQL_NTS);
    SQLExecDirect(hstmt,"use test_odbc_ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtil.h"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtil.h/"
  graph-id-high-water="0" priority="0" vertex="0" i="38" la-score="0.1"
  vse-base-score="1.99219"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="286" v="305">use DRIVER_NAME but trying to keep dependency upon driver specific code to a min */
#define MYODBCINST_DRIVER_NAME "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="972" />
      <match u="306" v="306">ODBC </match>
      <post u="307" v="326">3.51 Driver"

/* max dsn's we can have in odbc sys info - need to get rid of this limit */
#define </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="296" v="315">specific code to a min */
#define MYODBCINST_DRIVER_NAME "MySQL ODBC 3.51 Driver"

/* max dsn's we can have in </pre>
      <content type="TEXT" name="snippet" u="35" v="972" />
      <match u="316" v="316">odbc </match>
      <post u="317" v="336">sys info - need to get rid of this limit */
#define MYODBCUTIL_MAX_DSN_NAMES 50

/*!
    \internal
    \brief      Delimiter type used </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="438" v="457">reflects what we can have in odbcinst.ini.
*/
typedef struct tMYODBCUTIL_DRIVER
{
    char *pszName;              /* Friendly name for driver.                (ie "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="972" />
      <match u="458" v="458">ODBC </match>
      <post u="459" v="478">3.51 Driver")   */
    char *pszDRIVER;            /* File name - typically complete abs path. (ie "/usr/lib/libmyodbc3.so")   */
    char *pszSETUP;             /* File name - typically </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="509" v="528">DRIVER,
    MYODBCUTIL_DATASOURCE_CONNECT_DSN

} MYODBCUTIL_DATASOURCE_CONNECT;

/*!
    \brief      Prompting used during SQLDriverConnect.

                Could be a SQLUSMALLINT and then standard
                </pre>
      <content type="TEXT" name="snippet" u="35" v="972" />
      <match u="529" v="529">ODBC </match>
      <post u="530" v="549">values such as SQL_DRIVER_PROMPT but there
                are worthwhile advantages to creating this type
                internally.
*/
typedef enum tMYODBCUTIL_DATASOURCE_</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="574" v="593">Reason why we have created a MYODBCUTIL_DATASOURCE.
*/
typedef enum tMYODBCUTIL_DATASOURCE_MODE
{
    MYODBCUTIL_DATASOURCE_MODE_DSN_ADD,         /* For ConfigDSN() - </pre>
      <content type="TEXT" name="snippet" u="35" v="972" />
      <match u="594" v="594">ODBC_</match>
      <post u="595" v="614">ADD_DSN.              */
    MYODBCUTIL_DATASOURCE_MODE_DSN_EDIT,        /* For ConfigDSN() - ODBC_CONFIG_DSN.           */
    MYODBCUTIL_DATASOURCE_MODE_DSN_VIEW,        /* For command-line </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="584" v="603">tMYODBCUTIL_DATASOURCE_MODE
{
    MYODBCUTIL_DATASOURCE_MODE_DSN_ADD,         /* For ConfigDSN() - ODBC_ADD_DSN.              */
    MYODBCUTIL_DATASOURCE_MODE_DSN_EDIT,        /* For ConfigDSN() - </pre>
      <content type="TEXT" name="snippet" u="35" v="972" />
      <match u="604" v="604">ODBC_</match>
      <post u="605" v="624">CONFIG_DSN.           */
    MYODBCUTIL_DATASOURCE_MODE_DSN_VIEW,        /* For command-line tools to list DSN details.  */
    MYODBCUTIL_DATASOURCE_MODE_DRIVER_CONNECT   /* </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="619" v="638">details.  */
    MYODBCUTIL_DATASOURCE_MODE_DRIVER_CONNECT   /* For SQLDriverConnect().                      */

} MYODBCUTIL_DATASOURCE_MODE;


/*!
    DSN fields.

    This reflects what we can have in </pre>
      <content type="TEXT" name="snippet" u="35" v="972" />
      <match u="639" v="639">odbc.</match>
      <post u="640" v="659">ini and also includes information
    used during an SQLDriverConnect().
*/
typedef struct tMYODBCUTIL_DATASOURCE
{
    char *pszDriverFileName;    /* As used in DSN; often </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="674" v="693">of our data source.                         (ie "test")                             */    
    char *pszDRIVER;            /* Friendly driver name as used in DSN and connect str. (ie "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="972" />
      <match u="694" v="694">ODBC </match>
      <post u="695" v="714">3.51 Driver (32 bit)")  */
    char *pszDESCRIPTION;       /* General description or long name of DSN.                                                     */
    char *pszSERVER;            /* The hostname of the MySQL </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... to a min */
#define MYODBCINST_DRIVER_NAME "MySQL ODBC 3.51 Driver"

/* max dsn's we can have in odbc sys info - need to get rid of this  ... char *pszName;              /* Friendly name for driver.                (ie "MySQL ODBC 3.51 Driver")   */
    char *pszDRIVER;            /* File name - typically complete  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/myodbc3_d.rc"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/myodbc3_d.rc/"
  graph-id-high-water="0" priority="0" vertex="0" i="121" la-score="0.1"
  vse-base-score="1.99219"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="97" v="116">43, 335, 210 
STYLE DS_ABSALIGN | DS_MODALFRAME | DS_CENTER | WS_POPUP | WS_VISIBLE | 
    WS_CAPTION | WS_SYSMENU 
CAPTION "   MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="1220" />
      <match u="117" v="117">ODBC </match>
      <post u="118" v="137">3.51 Driver - DSN Configuration, Version 3.51.11"
FONT 8, "MS Sans Serif", 0, 0, 0x1
BEGIN     
	EDITTEXT    IDC_DSNAME,97,34,</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="194" v="213">97,147,29,14,ES_NUMBER     
	EDITTEXT    IDC_STMT,97,164,140,14     
	CTEXT       "This dialog helps you configure an </pre>
      <content type="TEXT" name="snippet" u="36" v="1220" />
      <match u="214" v="214">ODBC </match>
      <post u="215" v="234">Data Source Name to use for connecting to MySQL Server",
			IDC_STATIC,22,7,289,19     
	GROUPBOX    "DSN Information",IDC_</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="395" v="414">MYOPTIONDLG DIALOG DISCARDABLE  65, 43, 336, 210 
STYLE DS_MODALFRAME | DS_CENTER | WS_POPUP | WS_CAPTION | WS_SYSMENU 
CAPTION "   MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="1220" />
      <match u="415" v="415">ODBC </match>
      <post u="416" v="435">3.51 Driver - DSN Configuration, Version 3.51.11"
FONT 8, "MS Sans Serif" 
BEGIN     
	CONTROL         "Don't Optimize Column Width",IDC_CHECK1,"</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="1024" v="1043">0x29L 
#else  
	FILEFLAGS 0x28L 
#endif  
	FILEOS 0x40004L  
	FILETYPE 0x2L  
	FILESUBTYPE 0x0L 
BEGIN     
	BLOCK "StringFileInfo"     
	BEGIN         
		BLOCK "040904e4"         
		BEGIN             
			VALUE "Comments", "</pre>
      <content type="TEXT" name="snippet" u="36" v="1220" />
      <match u="1044" v="1044">ODBC </match>
      <post u="1045" v="1064">driver to access MySQL (debug version)\0"
            	VALUE "CompanyName", "MySQL AB\0"
            	VALUE "FileDescription", "MySQL Connector/ODBC 3.51 Driver (debug)\</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="1041" v="1060">BEGIN             
			VALUE "Comments", "ODBC driver to access MySQL (debug version)\0"
            	VALUE "CompanyName", "MySQL AB\0"
            	VALUE "FileDescription", "MySQL Connector/</pre>
      <content type="TEXT" name="snippet" u="36" v="1220" />
      <match u="1061" v="1061">ODBC </match>
      <post u="1062" v="1081">3.51 Driver (debug)\0"
            	VALUE "FileVersion", "3.51.11 (debug)\0"
            	VALUE "InternalName", "myodbc3\0"
            	VALUE "LegalCopyright", "Copyright © MySQL AB 1995-2005\</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="1069" v="1088">debug)\0"
            	VALUE "InternalName", "myodbc3\0"
            	VALUE "LegalCopyright", "Copyright © MySQL AB 1995-2005\0"
            	VALUE "LegalTrademarks", "MySQL, MyODBC and Connector/</pre>
      <content type="TEXT" name="snippet" u="36" v="1220" />
      <match u="1089" v="1089">ODBC </match>
      <post u="1090" v="1109">are trademarks of MySQL AB\0"
            	VALUE "OriginalFilename", "myodbc3d.dll\0"             
			VALUE "PrivateBuild", "Production\0"
            	VALUE "ProductName", "Connector/ODBC 3.51\</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="1088" v="1107">Connector/ODBC are trademarks of MySQL AB\0"
            	VALUE "OriginalFilename", "myodbc3d.dll\0"             
			VALUE "PrivateBuild", "Production\0"
            	VALUE "ProductName", "Connector/</pre>
      <content type="TEXT" name="snippet" u="36" v="1220" />
      <match u="1108" v="1108">ODBC </match>
      <post u="1109" v="1128">3.51\0"
            	VALUE "ProductVersion", "3.51\0"             
			VALUE "SpecialBuild", "Production Public release (debug version)\0"
        
		END     
	END     
	BLOCK "VarFileInfo"     
	BEGIN         
		VALUE "</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="1166" v="1185">3 TEXTINCLUDE MOVEABLE PURE 
BEGIN     
	"\r\n"     
	"\0" 
END  

#endif    // APSTUDIO_INVOKED   

///////////////////////////////////////////////////////////////////////////// 
// 
// String Table 
//  

STRINGTABLE DISCARDABLE 
BEGIN     
	IDS_MSGTITLE            "MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="1220" />
      <match u="1186" v="1186">ODBC </match>
      <post u="1187" v="1206">3.51 Driver DSN Setup (32 bit)"     
	IDS_BADDSN              "%s cannot be used as a data source name." 
END
  
#endif    // Finnish </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... WS_VISIBLE | 
    WS_CAPTION | WS_SYSMENU 
CAPTION "   MySQL ODBC 3.51 Driver - DSN Configuration, Version 3.51.11"
FONT 8, " ... 14     
	CTEXT       "This dialog helps you configure an ODBC Data Source Name to use for connecting to  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/myodbc3.rc"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/myodbc3.rc/"
  graph-id-high-water="0" priority="0" vertex="0" i="132" la-score="0.1"
  vse-base-score="1.99219"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="96" v="115">43, 335, 210
STYLE DS_ABSALIGN | DS_MODALFRAME | DS_CENTER | WS_POPUP | WS_VISIBLE |
    WS_CAPTION | WS_SYSMENU
CAPTION "   MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="1216" />
      <match u="116" v="116">ODBC </match>
      <post u="117" v="136">3.51 Driver - DSN Configuration, Version 3.51.11"
FONT 8, "MS Sans Serif", 0, 0, 0x1
BEGIN
    EDITTEXT        IDC_DSNAME,97,34,</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="193" v="212">97,147,29,14,ES_NUMBER
    EDITTEXT        IDC_STMT,97,164,140,14
    CTEXT           "This dialog helps you configure an </pre>
      <content type="TEXT" name="snippet" u="35" v="1216" />
      <match u="213" v="213">ODBC </match>
      <post u="214" v="233">Data Source Name to use for connecting to MySQL Server",
                    IDC_STATIC,22,7,289,19
    GROUPBOX        "DSN Information",IDC_</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="394" v="413">MYOPTIONDLG DIALOG DISCARDABLE  65, 43, 336, 210
STYLE DS_MODALFRAME | DS_CENTER | WS_POPUP | WS_CAPTION | WS_SYSMENU
CAPTION "   MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="1216" />
      <match u="414" v="414">ODBC </match>
      <post u="415" v="434">3.51 Driver - DSN Configuration, Version 3.51.11"
FONT 8, "MS Sans Serif"
BEGIN
    CONTROL         "Don't Optimize Column Width",IDC_CHECK1,"</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="1023" v="1042">0x29L
#else
 FILEFLAGS 0x28L
#endif
 FILEOS 0x40004L
 FILETYPE 0x2L
 FILESUBTYPE 0x0L
BEGIN
    BLOCK "StringFileInfo"
    BEGIN
        BLOCK "040904e4"
        BEGIN
            VALUE "Comments", "</pre>
      <content type="TEXT" name="snippet" u="35" v="1216" />
      <match u="1043" v="1043">ODBC </match>
      <post u="1044" v="1063">driver to access MySQL (built-in setup)\0"
            VALUE "CompanyName", "MySQL AB"
            VALUE "FileDescription", "MySQL ODBC 3.51 Driver\0"
            VALUE "</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="1039" v="1058">040904e4"
        BEGIN
            VALUE "Comments", "ODBC driver to access MySQL (built-in setup)\0"
            VALUE "CompanyName", "MySQL AB"
            VALUE "FileDescription", "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="1216" />
      <match u="1059" v="1059">ODBC </match>
      <post u="1060" v="1079">3.51 Driver\0"
            VALUE "FileVersion", "3.51.10 (production)\0"
            VALUE "InternalName", "myodbc3\0"
            VALUE "LegalCopyright", "Copyright © MySQL AB 1995-2005\0"
            </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="1065" v="1084">3.51.10 (production)\0"
            VALUE "InternalName", "myodbc3\0"
            VALUE "LegalCopyright", "Copyright © MySQL AB 1995-2005\0"
            VALUE "LegalTrademarks", "MySQL, MyODBC, Connector/</pre>
      <content type="TEXT" name="snippet" u="35" v="1216" />
      <match u="1085" v="1085">ODBC </match>
      <post u="1086" v="1105">are trademarks of MySQL AB\0"
            VALUE "OriginalFilename", "myodbc3.dll\0"
            VALUE "PrivateBuild", "Production\0"
            VALUE "ProductName", "Connector/ODBC 3.51\</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="1084" v="1103">Connector/ODBC are trademarks of MySQL AB\0"
            VALUE "OriginalFilename", "myodbc3.dll\0"
            VALUE "PrivateBuild", "Production\0"
            VALUE "ProductName", "Connector/</pre>
      <content type="TEXT" name="snippet" u="35" v="1216" />
      <match u="1104" v="1104">ODBC </match>
      <post u="1105" v="1124">3.51\0"
            VALUE "ProductVersion", "3.51\0"
            VALUE "SpecialBuild", "Production Public release  (Share version)\0"
        END
    END
    BLOCK "VarFileInfo"
    BEGIN
        VALUE "</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="1162" v="1181">3 TEXTINCLUDE MOVEABLE PURE
BEGIN
    "\r\n"
    "\0"
END

#endif    // APSTUDIO_INVOKED


/////////////////////////////////////////////////////////////////////////////
//
// String Table
//

STRINGTABLE DISCARDABLE
BEGIN
    IDS_MSGTITLE            "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="1216" />
      <match u="1182" v="1182">ODBC </match>
      <post u="1183" v="1202">3.51 Driver DSN Setup (32 bit)"
    IDS_BADDSN              "%s cannot be used as a data source name."
END

#endif    // Finnish </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... WS_VISIBLE |
    WS_CAPTION | WS_SYSMENU
CAPTION "   MySQL ODBC 3.51 Driver - DSN Configuration, Version 3.51.11"
FONT 8, " ... 14
    CTEXT           "This dialog helps you configure an ODBC Data Source Name to use for connecting to  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/scripts/myodbc3.spec.sh"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/scripts/myodbc3.spec.sh/"
  graph-id-high-water="0" priority="0" vertex="0" i="148" la-score="0.1"
  vse-base-score="1.99219"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="37" v="53">#!/bin/sh

#
# MyODBC 3.51 RPM spec 
#

%define myodbc_version @VERSION@
%define release 1

Name:		MyODBC
Summary:	An </pre>
      <content type="TEXT" name="snippet" u="36" v="300" />
      <match u="54" v="54">ODBC </match>
      <post u="55" v="74">3.51 driver for MySQL
Group:		Applications/Databases
Version:	%{myodbc_version}
Release:	1
Copyright:	Public Domain, GPL
Source0:	%{name}-%{version}.tar.</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="103" v="122">is to
# run a rm -rf
BuildRoot:	%{_tmppath}/%{name}-%{version}-build

# From the manual
%description
MyODBC is a 32-bit </pre>
      <content type="TEXT" name="snippet" u="36" v="300" />
      <match u="123" v="123">ODBC (</match>
      <post u="124" v="143">3.50) level 0 (with level 1 and level 2 features)
driver for connecting an ODBC-aware application to MySQL. MyODBC </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="118" v="137">MyODBC is a 32-bit ODBC (3.50) level 0 (with level 1 and level 2 features)
driver for connecting an </pre>
      <content type="TEXT" name="snippet" u="36" v="300" />
      <match u="138" v="138">ODBC-</match>
      <post u="139" v="158">aware application to MySQL. MyODBC works on
Windows 9x/Me/NT/2000/XP, and most Unix platforms (incl. OSX and </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="151" v="170">XP, and most Unix platforms (incl. OSX and Linux).

MyODBC 3.51 is an enhanced version of MyODBC 2.50 to meet </pre>
      <content type="TEXT" name="snippet" u="36" v="300" />
      <match u="171" v="171">ODBC </match>
      <post u="172" v="191">3.5 
specification. The driver is commonly referred to as 'MySQL ODBC 3.51 Driver'.

%prep
%setup -n %{name}-%{version}

%define ODBC_</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="162" v="181">is an enhanced version of MyODBC 2.50 to meet ODBC 3.5 
specification. The driver is commonly referred to as 'MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="300" />
      <match u="182" v="182">ODBC </match>
      <post u="183" v="202">3.51 Driver'.

%prep
%setup -n %{name}-%{version}

%define ODBC_DM_PATH @ODBC_DM_PATH@
%define MYSQL_LIBS  @MYSQL_USED_LIB_</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="171" v="190">ODBC 3.5 
specification. The driver is commonly referred to as 'MySQL ODBC 3.51 Driver'.

%prep
%setup -n %{name}-%{version}

%define </pre>
      <content type="TEXT" name="snippet" u="36" v="300" />
      <match u="191" v="191">ODBC_</match>
      <post u="192" v="211">DM_PATH @ODBC_DM_PATH@
%define MYSQL_LIBS  @MYSQL_USED_LIB_PATH@
%define MYSQL_INCLUDES @MYSQL_USED_INCLUDE_PATH@

%build
./</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="174" v="193">The driver is commonly referred to as 'MySQL ODBC 3.51 Driver'.

%prep
%setup -n %{name}-%{version}

%define ODBC_DM_PATH @</pre>
      <content type="TEXT" name="snippet" u="36" v="300" />
      <match u="194" v="194">ODBC_</match>
      <post u="195" v="214">DM_PATH@
%define MYSQL_LIBS  @MYSQL_USED_LIB_PATH@
%define MYSQL_INCLUDES @MYSQL_USED_INCLUDE_PATH@

%build
./configure \
	--prefix=${RPM_</post>
    </solution>
    <solution rank="7" score="1">
      <pre u="208" v="227">USED_INCLUDE_PATH@

%build
./configure \
	--prefix=${RPM_BUILD_ROOT}%{prefix} \
  --with-mysql-libs=%{MYSQL_LIBS} \
  --with-mysql-includes=%{MYSQL_INCLUDES} \
  %{</pre>
      <content type="TEXT" name="snippet" u="36" v="300" />
      <match u="228" v="228">ODBC_</match>
      <post u="229" v="248">DM_PATH} \
  --enable-thread-safe \
  --enable-shared=yes \
  --enable-myodbcinst \
  --enable-imyodbc \
  --without-debug \
  --without-docs
make

%clean 
[ -n "$RPM_</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... VERSION@
%define release 1

Name:		MyODBC
Summary:	An ODBC 3.51 driver for MySQL
Group:		Applications/Databases
Version:	%{ ... the manual
%description
MyODBC is a 32-bit ODBC (3.50) level 0 (with level 1 and level  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/cursor.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/cursor.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="176" la-score="0.1"
  vse-base-score="1.99219"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="198" v="217">cursor functionality handling		   *
 *									   *
 * @author     : MySQL AB(monty@mysql.com, venu@mysql.com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following </pre>
      <content type="TEXT" name="snippet" u="35" v="4849" />
      <match u="218" v="218">ODBC </match>
      <post u="219" v="238">APIs are implemented in this file:		   *
 *									   *
 *   SQLSetCursorName	 (ISO 92)					   *
 *   SQLGetCursorName	 (ISO 92)					   *
 *   SQLCloseCursor	 (ISO 92)					   *
 *   SQLSetPos		 (ODBC)						   *
 *   SQLBulkOperations	 (ODBC)						   *
 *									   *
 ****************************************************************************/

#include "</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="215" v="234">myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLSetCursorName	 (ISO 92)					   *
 *   SQLGetCursorName	 (ISO 92)					   *
 *   SQLCloseCursor	 (ISO 92)					   *
 *   SQLSetPos		 (</pre>
      <content type="TEXT" name="snippet" u="35" v="4849" />
      <match u="235" v="235">ODBC)						   *
 *   </match>
      <post u="236" v="255"><![CDATA[SQLBulkOperations	 (ODBC)						   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"
#include &lt;locale.h>

/*
  @type    : myodbc3 internal
  @purpose : returns the table used by this query and
  ]]></post>
    </solution>
    <solution rank="2" score="1">
      <pre u="217" v="236">following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLSetCursorName	 (ISO 92)					   *
 *   SQLGetCursorName	 (ISO 92)					   *
 *   SQLCloseCursor	 (ISO 92)					   *
 *   SQLSetPos		 (ODBC)						   *
 *   SQLBulkOperations	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="4849" />
      <match u="237" v="237">ODBC)						   *
 *									   *
 ****************************************************************************/

#</match>
      <post u="238" v="257"><![CDATA[include "myodbc3.h"
#include &lt;locale.h>

/*
  @type    : myodbc3 internal
  @purpose : returns the table used by this query and
  ensures that ]]></post>
    </solution>
    <solution rank="3" score="1">
      <pre u="4432" v="4451">options.rowStatusPtr, 0);
    break;
  }

  default:
    DBUG_RETURN_STATUS(set_error(stmt,MYERR_S1009,NULL,0));
  }
  DBUG_RETURN_STATUS(sqlRet);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="4849" />
      <match u="4452" v="4452">ODBC </match>
      <post u="4453" v="4472">1.0 API
  @purpose : associates a cursor name with an active statement.
  If an application does not call SQLSetCursorName, the driver
  </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="4572" v="4591">x_free((gptr) stmt->cursor.name);
  stmt->cursor.name= dupp_str((char*) szCursor,cbCursor);
  DBUG_RETURN_STATUS(SQL_SUCCESS);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="4849" />
      <match u="4592" v="4592">ODBC </match>
      <post u="4593" v="4612">1.0 API
  @purpose : returns the cursor name associated with a specified statement
*/

SQLRETURN SQL_API SQLGetCursorName(SQLHSTMT hstmt, SQLCHAR FAR *</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="4686" v="4705">cbCursorMax);

  if (nLength != *pcbCursor)
    DBUG_RETURN_STATUS(set_error(stmt,MYERR_01004,NULL,0));

  DBUG_RETURN_STATUS(SQL_SUCCESS);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="4849" />
      <match u="4706" v="4706">ODBC </match>
      <post u="4707" v="4726">1.0 API
  @purpose : sets the cursor position in a rowset and allows an application
  to refresh data in the rowset </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="4737" v="4756">SQLRETURN SQL_API SQLSetPos(SQLHSTMT hstmt, SQLUSMALLINT irow,
			     SQLUSMALLINT fOption, SQLUSMALLINT fLock)
{
  return my_SQLSetPos(hstmt,irow,fOption,fLock);
}

/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="4849" />
      <match u="4757" v="4757">ODBC </match>
      <post u="4758" v="4777">1.0 API
  @purpose : performs bulk insertions and bulk bookmark operations,
  including update, delete, and fetch by bookmark
*/

SQLRETURN SQL_API </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="4794" v="4813">SQLSetPos(Handle, 0, SQL_ADD, SQL_LOCK_NO_CHANGE));

  DBUG_RETURN_STATUS(set_error(Handle,MYERR_S1C00,NULL,0));
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="4849" />
      <match u="4814" v="4814">ODBC </match>
      <post u="4815" v="4834">3.0 API
  @purpose : closes a cursor that has been opened on a statement
  and discards any pending results
*/

SQLRETURN SQL_</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLSetCursorName	 (ISO 92)					   *
 *   SQLGetCursorName	 (ISO 92)					   *
 *   SQLCloseCursor	 (ISO 92)					   *
 *   SQLSetPos		 (ODBC)						   *
 *   SQLBulkOperations	 (ODBC)						   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"
#include &lt;locale.h>

/*
  @ ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/execute.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/execute.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="178" la-score="0.1"
  vse-base-score="1.99219"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="199" v="218">executing SQL Commands			   *
 *									   *
 * @author     : MySQL AB(monty@mysql.com, venu@mysql.com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following </pre>
      <content type="TEXT" name="snippet" u="35" v="2975" />
      <match u="219" v="219">ODBC </match>
      <post u="220" v="239">APIs are implemented in this file:		   *
 *									   *
 *   SQLExecute		 (ISO 92)					   *
 *   SQLExecDirect	 (ISO 92)					   *
 *   SQLParamData	 (ISO 92)					   *
 *   SQLPutData		 (ISO 92)					   *
 *   SQLCancel		 (ISO </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="1786" v="1805">SQL_LONGVARCHAR:
  case SQL_BINARY:
  case SQL_VARBINARY:
  case SQL_LONGVARBINARY:
  {
    to= add_to_buffer(net,to,"'",1);
    to= mysql_</pre>
      <content type="TEXT" name="snippet" u="35" v="2975" />
      <match u="1806" v="1806">odbc_</match>
      <post u="1807" v="1826">escape_string(mysql,
				 to, (net->max_packet -
				      (ulong) (to - (char*) net->buff)),
				 data, length,
				 (void*) net, extend_escape_buffer);
    if (</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="2115" v="2134"><![CDATA[0);

  if (sqlRet == SQL_SUCCESS || sqlRet == SQL_SUCCESS_WITH_INFO)
    stmt->state= ST_EXECUTED;

  dynstr_free(&amp;dynQuery);
  return(sqlRet);
}


/*
  @type    : ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="2975" />
      <match u="2135" v="2135">ODBC </match>
      <post u="2136" v="2155">1.0 API
  @purpose : executes a prepared statement, using the current values
  of the parameter marker variables if any parameter markers
  </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="2436" v="2455">STATUS(SQL_NEED_DATA);
      }
    }
    query= insert_params(stmt);	    /* Checked in do_query */
  }
  DBUG_RETURN_STATUS(do_query(stmt, query));
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="2975" />
      <match u="2456" v="2456">ODBC </match>
      <post u="2457" v="2476">1.0 API
  @purpose : executes a preparable statement, using the current values of
  the parameter marker variables if any parameters exist </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="2498" v="2517">my_SQLPrepare(hstmt,szSqlStr,cbSqlStr)))
    DBUG_RETURN_STATUS(error);
  error= my_SQLExecute((STMT FAR*) hstmt);
  DBUG_RETURN_STATUS(error);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="2975" />
      <match u="2518" v="2518">ODBC </match>
      <post u="2519" v="2538">1.0 API
  @purpose : returns the SQL string as modified by the driver
*/

SQLRETURN SQL_API SQLNativeSql(SQLHDBC hdbc,
			       SQLCHAR FAR *</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="2556" v="2575"><![CDATA[DBUG_RETURN_STATUS(copy_lresult(SQL_HANDLE_DBC, hdbc,
				  szSqlStr,cbSqlStrMax,pcbSqlStr,
				  (char*) szSqlStrIn, cbSqlStrIn,0L,0L,
				  &amp;offset,0));
}


/*
  @type    : ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="2975" />
      <match u="2576" v="2576">ODBC </match>
      <post u="2577" v="2596">1.0 API
  @purpose : is used in conjunction with SQLPutData to supply parameter
  data at statement execution time
*/

SQLRETURN SQL_API </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="2667" v="2686">0;
      param->alloced= 0;
      DBUG_RETURN_STATUS(SQL_NEED_DATA);
    }
  }
  DBUG_RETURN_STATUS(do_query(stmt,insert_params(stmt)));
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="2975" />
      <match u="2687" v="2687">ODBC </match>
      <post u="2688" v="2707">1.0 API
  @purpose : allows an application to send data for a parameter or column to
  the driver at statement execution </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="2929" v="2948">cbValue);
    param->value_length= cbValue;
    param->value[param->value_length]= 0;
    param->alloced= 1;
  }
  DBUG_RETURN_STATUS(SQL_SUCCESS);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="2975" />
      <match u="2949" v="2949">ODBC </match>
      <post u="2950" v="2969">1.0 API
  @purpose : cancels the processing on a statement
*/

SQLRETURN SQL_API SQLCancel(SQLHSTMT hstmt)
{
  DBUG_ENTER("SQLCancel");
  DBUG_RETURN_</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLExecute		 (ISO  ... add_to_buffer(net,to,"'",1);
    to= mysql_odbc_escape_string(mysql,
				 to, (net->max_packet -
				      (ulong) ( ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/Makefile.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/Makefile.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="11" la-score="0.1"
  vse-base-score="1.98438"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="1325" v="1344">MYODBCINST_FALSE = @MYODBCINST_FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
</pre>
      <content type="TEXT" name="snippet" u="35" v="3867" />
      <match u="1345" v="1345">ODBC_</match>
      <post u="1346" v="1365">DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="1328" v="1347">FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @</pre>
      <content type="TEXT" name="snippet" u="35" v="3867" />
      <match u="1348" v="1348">ODBC_</match>
      <post u="1349" v="1368">DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="1331" v="1350">MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
</pre>
      <content type="TEXT" name="snippet" u="35" v="3867" />
      <match u="1351" v="1351">ODBC_</match>
      <post u="1352" v="1371">DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="1334" v="1353">LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @</pre>
      <content type="TEXT" name="snippet" u="35" v="3867" />
      <match u="1354" v="1354">ODBC_</match>
      <post u="1355" v="1374">DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="1663" v="1682">MYUID = 
MYPWD = 

#	
# COMPILATION SPECIFICATION
# Mainly for WINDOWS, on UNIX it will be ovveritten in Makefile.am
# 
MYSQL_DIR = c:\\mysql
</pre>
      <content type="TEXT" name="snippet" u="35" v="3867" />
      <match u="1683" v="1683">ODBC_</match>
      <post u="1684" v="1703">DIR = ../
INCLUDE = -I. -I$(MYSQL_DIR)/include -I$(ODBC_DIR)/include
LIBDIR = -L$(MYSQL_DIR)/lib/opt -L$(ODBC_DIR)/</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="1672" v="1691">it will be ovveritten in Makefile.am
# 
MYSQL_DIR = c:\\mysql
ODBC_DIR = ../
INCLUDE = -I. -I$(MYSQL_DIR)/include -I$(</pre>
      <content type="TEXT" name="snippet" u="35" v="3867" />
      <match u="1692" v="1692">ODBC_</match>
      <post u="1693" v="1712">DIR)/include
LIBDIR = -L$(MYSQL_DIR)/lib/opt -L$(ODBC_DIR)/win32/Release/myodbc3.lib

#	
# COMPILATION SPECIFICATION
# 
INCLUDES = -I. -I../</post>
    </solution>
    <solution rank="6" score="1">
      <pre u="1682" v="1701">mysql
ODBC_DIR = ../
INCLUDE = -I. -I$(MYSQL_DIR)/include -I$(ODBC_DIR)/include
LIBDIR = -L$(MYSQL_DIR)/lib/opt -L$(</pre>
      <content type="TEXT" name="snippet" u="35" v="3867" />
      <match u="1702" v="1702">ODBC_</match>
      <post u="1703" v="1722">DIR)/win32/Release/myodbc3.lib

#	
# COMPILATION SPECIFICATION
# 
INCLUDES = -I. -I../include
AM_LDFLAGS = @myodbc_test_linklib@
EXTRA_DIST = mytest3.h </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_use_result.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_use_result.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="27" la-score="0.1"
  vse-base-score="1.98438"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="126" v="145"><![CDATA[SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLRETURN rc;
  
  myheader("t_clean_data");
    
    myconnect(&amp;henv,&amp;hdbc,&amp;hstmt);

    rc = SQLExecDirect(hstmt,"drop database client_]]></pre>
      <content type="TEXT" name="snippet" u="37" v="792" />
      <match u="146" v="146">odbc_</match>
      <post u="147" v="166"><![CDATA[test1",SQL_NTS);
    mystmt(hstmt,rc);

    mydisconnect(&amp;henv,&amp;hdbc,&amp;hstmt);
}
/**
  Initialize data
*/
void t_init_data()
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  ]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="172" v="191"><![CDATA[i;
  SQLCHAR    ch[]="MySQL AB";
  
  myheader("t_init_data");

    
    myconnect(&amp;henv,&amp;hdbc,&amp;hstmt);

    SQLExecDirect(hstmt,"drop database if exists client_]]></pre>
      <content type="TEXT" name="snippet" u="37" v="792" />
      <match u="192" v="192">odbc_</match>
      <post u="193" v="212">test1",SQL_NTS);
    
    rc = SQLExecDirect(hstmt,"create database client_odbc_test1",SQL_NTS);
    mystmt(hstmt,rc);

    SQLExecDirect(hstmt,"drop table </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="182" v="201"><![CDATA[henv,&amp;hdbc,&amp;hstmt);

    SQLExecDirect(hstmt,"drop database if exists client_odbc_test1",SQL_NTS);
    
    rc = SQLExecDirect(hstmt,"create database client_]]></pre>
      <content type="TEXT" name="snippet" u="37" v="792" />
      <match u="202" v="202">odbc_</match>
      <post u="203" v="222">test1",SQL_NTS);
    mystmt(hstmt,rc);

    SQLExecDirect(hstmt,"drop table client_odbc_test1.t_use_result",SQL_NTS);

    rc = SQLExecDirect(</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="194" v="213">SQL_NTS);
    
    rc = SQLExecDirect(hstmt,"create database client_odbc_test1",SQL_NTS);
    mystmt(hstmt,rc);

    SQLExecDirect(hstmt,"drop table client_</pre>
      <content type="TEXT" name="snippet" u="37" v="792" />
      <match u="214" v="214">odbc_</match>
      <post u="215" v="234">test1.t_use_result",SQL_NTS);

    rc = SQLExecDirect(hstmt,"create table client_odbc_test1.t_use_result(id int,name </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="207" v="226">hstmt,rc);

    SQLExecDirect(hstmt,"drop table client_odbc_test1.t_use_result",SQL_NTS);

    rc = SQLExecDirect(hstmt,"create table client_</pre>
      <content type="TEXT" name="snippet" u="37" v="792" />
      <match u="227" v="227">odbc_</match>
      <post u="228" v="247">test1.t_use_result(id int,name char(10))",SQL_NTS);
    mystmt(hstmt,rc);

    rc = SQLPrepare(hstmt,"insert into client_</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="228" v="247">test1.t_use_result(id int,name char(10))",SQL_NTS);
    mystmt(hstmt,rc);

    rc = SQLPrepare(hstmt,"insert into client_</pre>
      <content type="TEXT" name="snippet" u="37" v="792" />
      <match u="248" v="248">odbc_</match>
      <post u="249" v="268">test1.t_use_result values(?,?)",SQL_NTS);
    mystmt(hstmt,rc);

    rc = SQLBindParameter(hstmt,1,SQL_PARAM_INPUT, SQL_C_ULONG,
                          </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="438" v="457">hstmt, SQL_ATTR_CURSOR_TYPE, (SQLPOINTER) SQL_CURSOR_FORWARD_ONLY, 0);

    t_start = clock();
    rc = SQLExecDirect(hstmt,"select * from client_</pre>
      <content type="TEXT" name="snippet" u="37" v="792" />
      <match u="458" v="458">odbc_</match>
      <post u="459" v="478">test1.t_use_result",SQL_NTS);
    mystmt(hstmt,rc);
    t_end = clock();

    my_time = difftime(t_end,t_start)/CLOCKS_</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... hdbc,&amp;hstmt);

    rc = SQLExecDirect(hstmt,"drop database client_odbc_test1",SQL_NTS);
    mystmt(hstmt,rc);

    mydisconnect(&amp;henv,&amp; ... hstmt);

    SQLExecDirect(hstmt,"drop database if exists client_odbc_test1",SQL_NTS);
    
    rc = SQLExecDirect(hstmt,"create database  ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/myodbc3.h"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/myodbc3.h/"
  graph-id-high-water="0" priority="0" vertex="0" i="168" la-score="0.1"
  vse-base-score="1.98438"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="528" v="547">SPEC_STRING
#undef SQL_SPEC_STRING
#endif

#define SQL_SPEC_STRING   "03.51"
#define DRIVER_VERSION	  "03.51.11"
#define </pre>
      <content type="TEXT" name="snippet" u="35" v="1488" />
      <match u="548" v="548">ODBC_</match>
      <post u="549" v="568">DRIVER	  "ODBC 3.51 Driver"
#define DRIVER_NAME	  "MySQL ODBC 3.51 Driver"
#define DRIVER_NONDSN_TAG "DRIVER={MySQL ODBC 3.51 Driver}"

#</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="530" v="549">undef SQL_SPEC_STRING
#endif

#define SQL_SPEC_STRING   "03.51"
#define DRIVER_VERSION	  "03.51.11"
#define ODBC_DRIVER	  "</pre>
      <content type="TEXT" name="snippet" u="35" v="1488" />
      <match u="550" v="550">ODBC </match>
      <post u="551" v="570">3.51 Driver"
#define DRIVER_NAME	  "MySQL ODBC 3.51 Driver"
#define DRIVER_NONDSN_TAG "DRIVER={MySQL ODBC 3.51 Driver}"

#ifndef _UNIX_
#</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="537" v="556">SPEC_STRING   "03.51"
#define DRIVER_VERSION	  "03.51.11"
#define ODBC_DRIVER	  "ODBC 3.51 Driver"
#define DRIVER_NAME	  "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="1488" />
      <match u="557" v="557">ODBC </match>
      <post u="558" v="577">3.51 Driver"
#define DRIVER_NONDSN_TAG "DRIVER={MySQL ODBC 3.51 Driver}"

#ifndef _UNIX_
#define DRIVER_DLL_NAME   "myodbc3.dll"
#ifndef </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="546" v="565">11"
#define ODBC_DRIVER	  "ODBC 3.51 Driver"
#define DRIVER_NAME	  "MySQL ODBC 3.51 Driver"
#define DRIVER_NONDSN_TAG "DRIVER={MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="1488" />
      <match u="566" v="566">ODBC </match>
      <post u="567" v="586">3.51 Driver}"

#ifndef _UNIX_
#define DRIVER_DLL_NAME   "myodbc3.dll"
#ifndef DBUG_OFF
#define DRIVER_QUERY_LOGFILE "c:\\myodbc.sql"
#</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="1006" v="1025">bind_offset;
  SQLUSMALLINT	   *paramStatusPtr;
  SQLUSMALLINT	   *rowStatusPtr;
  SQLUSMALLINT	   *rowOperationPtr;
  my_bool	   retrieve_data;
} STMT_OPTIONS;


/* Environment handler */

typedef struct	tagENV
{
  SQLINTEGER   </pre>
      <content type="TEXT" name="snippet" u="35" v="1488" />
      <match u="1026" v="1026">odbc_</match>
      <post u="1027" v="1046">ver;
  LIST	       *connections;
  MYERROR      error;

} ENV;


/* Connection handler */

typedef struct tagDBC
{
  ENV		*env;
  MYSQL		mysql;
  LIST		*statements;
  LIST		*descriptors;
  LIST		</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="1370" v="1389">count,current_param,
		rows_found_in_set,bound_columns;
  enum MY_STATE state;
  enum MY_DUMMY_STATE dummy_state;
  SQLSMALLINT	*</pre>
      <content type="TEXT" name="snippet" u="35" v="1488" />
      <match u="1390" v="1390">odbc_</match>
      <post u="1391" v="1410">types;

  /*
    DESC PART..not yet supported....., to make MS ODBC DM to work
    without crashing, just return the dummy pointers, </post>
    </solution>
    <solution rank="6" score="1">
      <pre u="1380" v="1399">MY_STATE state;
  enum MY_DUMMY_STATE dummy_state;
  SQLSMALLINT	*odbc_types;

  /*
    DESC PART..not yet supported....., to make MS </pre>
      <content type="TEXT" name="snippet" u="35" v="1488" />
      <match u="1400" v="1400">ODBC </match>
      <post u="1401" v="1420">DM to work
    without crashing, just return the dummy pointers, when it
    internally calls SQLGetStmtAttr at the time of stmt </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... 51"
#define DRIVER_VERSION	  "03.51.11"
#define ODBC_DRIVER	  "ODBC 3.51 Driver"
#define DRIVER_NAME	  "MySQL ODBC 3.51 Driver"
#define DRIVER_NONDSN_TAG "DRIVER={MySQL  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/scripts/Makefile.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/scripts/Makefile.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="150" la-score="0.1"
  vse-base-score="1.96875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="579" v="598">MYODBCINST_FALSE = @MYODBCINST_FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
</pre>
      <content type="TEXT" name="snippet" u="35" v="1630" />
      <match u="599" v="599">ODBC_</match>
      <post u="600" v="619">DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="582" v="601">FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @</pre>
      <content type="TEXT" name="snippet" u="35" v="1630" />
      <match u="602" v="602">ODBC_</match>
      <post u="603" v="622">DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="585" v="604">MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
</pre>
      <content type="TEXT" name="snippet" u="35" v="1630" />
      <match u="605" v="605">ODBC_</match>
      <post u="606" v="625">DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="588" v="607">LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @</pre>
      <content type="TEXT" name="snippet" u="35" v="1630" />
      <match u="608" v="608">ODBC_</match>
      <post u="609" v="628">DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="1524" v="1543">t
	sed \
	-e 's!@''VERSION''@!@VERSION@!' \
	-e 's!@''MACHINE_TYPE''@!@MACHINE_TYPE@!' \
	-e 's!@''SYSTEM_TYPE''@!@SYSTEM_TYPE@!' \
	-e 's!@''</pre>
      <content type="TEXT" name="snippet" u="35" v="1630" />
      <match u="1544" v="1544">ODBC_</match>
      <post u="1545" v="1564">DM_PATH''@!@ODBC_DM_PATH@!' \
	-e 's!@''MYSQL_USED_LIB_PATH''@!@MYSQL_USED_LIB_PATH@!' \
	-e 's!@''MYSQL_USED_INCLUDE_</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="1527" v="1546">s!@''VERSION''@!@VERSION@!' \
	-e 's!@''MACHINE_TYPE''@!@MACHINE_TYPE@!' \
	-e 's!@''SYSTEM_TYPE''@!@SYSTEM_TYPE@!' \
	-e 's!@''ODBC_DM_PATH''@!@</pre>
      <content type="TEXT" name="snippet" u="35" v="1630" />
      <match u="1547" v="1547">ODBC_</match>
      <post u="1548" v="1567">DM_PATH@!' \
	-e 's!@''MYSQL_USED_LIB_PATH''@!@MYSQL_USED_LIB_PATH@!' \
	-e 's!@''MYSQL_USED_INCLUDE_PATH''@!@MYSQL_USED_</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/scripts/make_win_src_distribution.sh"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/scripts/make_win_src_distribution.sh/"
  graph-id-high-water="0" priority="0" vertex="0" i="151" la-score="0.1"
  vse-base-score="1.9375"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="39" v="41">#!/bin/sh

#
# Connector/</pre>
      <content type="TEXT" name="snippet" u="38" v="847" />
      <match u="42" v="42">ODBC-</match>
      <post u="43" v="62">3.51
# Script to create a Windows src package
#

version=@VERSION@
export version
SOURCE=`pwd`
CP="cp -p"

DEBUG=0
SILENT=</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="53" v="72">export version
SOURCE=`pwd`
CP="cp -p"

DEBUG=0
SILENT=0
SUFFIX=""
OUTTAR=0

#
# This script must run from Connector/</pre>
      <content type="TEXT" name="snippet" u="38" v="847" />
      <match u="73" v="73">ODBC </match>
      <post u="74" v="93">top directory
#

if [ ! -f scripts/make_win_src_distribution ]; then
  echo "ERROR : You must run this script from the Connector/</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="74" v="93">top directory
#

if [ ! -f scripts/make_win_src_distribution ]; then
  echo "ERROR : You must run this script from the Connector/</pre>
      <content type="TEXT" name="snippet" u="38" v="847" />
      <match u="94" v="94">ODBC </match>
      <post u="95" v="114">top-level directory"
  exit 1
fi

#
# Debug print of the status
#

print_debug() 
{
  for statement 
  do
    if [ "$DEBUG" = "1" ] ; then
      </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="107" v="126">debug() 
{
  for statement 
  do
    if [ "$DEBUG" = "1" ] ; then
      echo $statement
    fi
  done
}

#
# Usage of the script
#

show_usage() 
{
  echo "Connector/</pre>
      <content type="TEXT" name="snippet" u="38" v="847" />
      <match u="127" v="127">ODBC </match>
      <post u="128" v="147">utility script to create a Windows src package, and it takes"
  echo "the following arguments:"
  echo ""
  echo "  --debug   Debug, without </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="552" v="571">i ] 
  then
    $CP $i $BASE/$i
  fi
done

#
# Specify the distribution package name and copy it
#

NEW_FILE_NAME=connector-</pre>
      <content type="TEXT" name="snippet" u="38" v="847" />
      <match u="572" v="572">odbc-$</match>
      <post u="573" v="592">version
BASE2=$TMP/$NEW_FILE_NAME
rm -r -f $BASE2
mv $BASE $BASE2
BASE=$BASE2

#
# If debugging, don't create </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold">#!/bin/sh

#
# Connector/ODBC-3.51
# Script to create a Windows src package
#

version=@VERSION@
export version
SOURCE=`pwd`
CP="cp -p"

DEBUG=0
 ... OUTTAR=0

#
# This script must run from Connector/ODBC top directory
#

if [ ! -f scripts/make_win_src_ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/imyodbc/Makefile.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/imyodbc/Makefile.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="205" la-score="0.1"
  vse-base-score="1.9375"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="558" v="577">MYODBCINST_FALSE = @MYODBCINST_FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
</pre>
      <content type="TEXT" name="snippet" u="35" v="2146" />
      <match u="578" v="578">ODBC_</match>
      <post u="579" v="598">DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="561" v="580">FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @</pre>
      <content type="TEXT" name="snippet" u="35" v="2146" />
      <match u="581" v="581">ODBC_</match>
      <post u="582" v="601">DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="564" v="583">MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
</pre>
      <content type="TEXT" name="snippet" u="35" v="2146" />
      <match u="584" v="584">ODBC_</match>
      <post u="585" v="604">DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="567" v="586">LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @</pre>
      <content type="TEXT" name="snippet" u="35" v="2146" />
      <match u="587" v="587">ODBC_</match>
      <post u="588" v="607">DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="885" v="904">prog@
x_includes = @x_includes@
x_libraries = @x_libraries@
@IMYODBC_TRUE@imyodbc_SOURCES = imyodbc.c
@IMYODBC_TRUE@imyodbc_LDADD = @LIBS@ @</pre>
      <content type="TEXT" name="snippet" u="35" v="2146" />
      <match u="905" v="905">ODBC_</match>
      <post u="906" v="925">DM_LIB@ 

# LDFLAGS=@EXTRA_LDFLAGS@

###################################################################
# 
# More files to include in source distro. 
#
###################################################################
EXTRA_DIST = \
	imyodbc.h \
	imyodbc.pro \
	Makefile.win \
	</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_scroll.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_scroll.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="4" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="1444" v="1463">hstmt,SQL_FETCH_RELATIVE,max_rows);/* after last */    
    mystmt_err(hstmt,rc==SQL_NO_DATA_FOUND,rc);

    /* 
       the scenarios from </pre>
      <content type="TEXT" name="snippet" u="36" v="5196" />
      <match u="1464" v="1464">ODBC </match>
      <post u="1465" v="1484">spec     
    */    

    /* CASE 1 */
    rc = SQLFetchScroll(hstmt,SQL_FETCH_FIRST,1);/* 1 */    
    mystmt(hstmt,rc);
    my_assert(i==1);

    rc = SQLFetchScroll(</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="2363" v="2382">hstmt,SQL_FETCH_RELATIVE,max_rows);/* after last */    
    mystmt_err(hstmt,rc==SQL_NO_DATA_FOUND,rc);

    /* 
       the scenarios from </pre>
      <content type="TEXT" name="snippet" u="36" v="5196" />
      <match u="2383" v="2383">ODBC </match>
      <post u="2384" v="2403">spec     
    */    

    /* CASE 1 */
    rc = SQLFetchScroll(hstmt,SQL_FETCH_FIRST,1);/* 1 */    
    mystmt(hstmt,rc);
    my_assert(nrows == 2);
    my_assert(</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="3678" v="3697">SQLFetchScroll(hstmt,SQL_FETCH_ABSOLUTE,0);/* before start */    
    mystmt_err(hstmt,rc==SQL_NO_DATA_FOUND,rc);

    /* 
       the scenarios from </pre>
      <content type="TEXT" name="snippet" u="36" v="5196" />
      <match u="3698" v="3698">ODBC </match>
      <post u="3699" v="3718"><![CDATA[spec     
    */    

    /* CASE 1 */
    rc = SQLFetchScroll(hstmt,SQL_FETCH_FIRST,1);/* 1 */    
    mystmt(hstmt,rc);
    my_assert(i==1);

    /* FetchOffset &lt; 0 ]]></post>
    </solution>
    <solution rank="3" score="1">
      <pre u="4416" v="4435">SQLFetchScroll(hstmt,SQL_FETCH_ABSOLUTE,0);/* before start */    
    mystmt_err(hstmt,rc==SQL_NO_DATA_FOUND,rc);

    /* 
       the scenarios from </pre>
      <content type="TEXT" name="snippet" u="36" v="5196" />
      <match u="4436" v="4436">ODBC </match>
      <post u="4437" v="4456">spec     
    */    

    /* CASE 1 */
    rc = SQLFetchScroll(hstmt,SQL_FETCH_FIRST,1);/* 1 */    
    mystmt(hstmt,rc);
    my_assert(nrows == 2);
    my_assert(</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... SQL_NO_DATA_FOUND,rc);

    /* 
       the scenarios from ODBC spec     
    */    

    /* CASE 1 */
    rc = SQLFetchScroll(hstmt,SQL_FETCH_ ... SQL_NO_DATA_FOUND,rc);

    /* 
       the scenarios from ODBC spec     
    */    

    /* CASE 1 */
    rc = SQLFetchScroll(hstmt,SQL_FETCH_ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_col_length.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_col_length.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="14" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="193" v="212">DSN=%s;UID=%s;PWD=%s;OPTION=0",mydsn,myuid,mypwd); 
    rc = SQLExecDirect(hstmt,"CREATE DATABASE IF NOT EXISTS client_</pre>
      <content type="TEXT" name="snippet" u="37" v="868" />
      <match u="213" v="213">odbc_</match>
      <post u="214" v="233">test",SQL_NTS);
    mystmt(hstmt,rc);
    
    rc = SQLExecDirect(hstmt,"use client_odbc_test",SQL_NTS);
    mystmt(hstmt,rc);

    rc = SQLExecDirect(</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="205" v="224">SQLExecDirect(hstmt,"CREATE DATABASE IF NOT EXISTS client_odbc_test",SQL_NTS);
    mystmt(hstmt,rc);
    
    rc = SQLExecDirect(hstmt,"use client_</pre>
      <content type="TEXT" name="snippet" u="37" v="868" />
      <match u="225" v="225">odbc_</match>
      <post u="226" v="245">test",SQL_NTS);
    mystmt(hstmt,rc);

    rc = SQLExecDirect(hstmt,"drop table t_true_length",SQL_NTS);
    mystmt(hstmt,rc);

    rc = </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="512" v="531">DSN=%s;UID=%s;PWD=%s;OPTION=0",mydsn,myuid,mypwd); 

    rc = SQLExecDirect(hstmt,"CREATE DATABASE IF NOT EXISTS client_</pre>
      <content type="TEXT" name="snippet" u="37" v="868" />
      <match u="532" v="532">odbc_</match>
      <post u="533" v="552">test",SQL_NTS);
    mystmt(hstmt,rc);
    
    rc = SQLExecDirect(hstmt,"use client_odbc_test",SQL_NTS);
    mystmt(hstmt,rc);

    SQLExecDirect(hstmt,"</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="524" v="543">SQLExecDirect(hstmt,"CREATE DATABASE IF NOT EXISTS client_odbc_test",SQL_NTS);
    mystmt(hstmt,rc);
    
    rc = SQLExecDirect(hstmt,"use client_</pre>
      <content type="TEXT" name="snippet" u="37" v="868" />
      <match u="544" v="544">odbc_</match>
      <post u="545" v="564">test",SQL_NTS);
    mystmt(hstmt,rc);

    SQLExecDirect(hstmt,"drop table t_max_length",SQL_NTS);
    mystmt(hstmt,rc);

    rc = SQLExecDirect(</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... SQLExecDirect(hstmt,"CREATE DATABASE IF NOT EXISTS client_odbc_test",SQL_NTS);
    mystmt(hstmt,rc);
    
    rc = SQLExecDirect(hstmt,"use client_odbc_test",SQL_NTS);
    mystmt(hstmt,rc);

    rc = SQLExecDirect( ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtilDSNExists.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtilDSNExists.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="32" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="187" v="206">330, Boston, MA  02111-1307  USA */

#include "MYODBCUtil.h"

/*!
    \internal
    \brief      Checks to see if a DSN exists in the </pre>
      <content type="TEXT" name="snippet" u="35" v="424" />
      <match u="207" v="207">ODBC </match>
      <post u="208" v="227">system information.

    \note       This function uses the current SQLSetConfigMode().
*/                
BOOL MYODBCUtilDSNExists( char *pszDataSourceName )
{
    char    szSectionNames[SQL_MAX_DSN_LENGTH * MYODBCUTIL_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="304" v="323">and hope that there is at least one 
                attribute (its likley anyway).
    */
    if ( SQLGetPrivateProfileString( pszDataSourceName, NULL, "", szSectionNames, sizeof( szSectionNames ) - 1, "</pre>
      <content type="TEXT" name="snippet" u="35" v="424" />
      <match u="324" v="324">ODBC.</match>
      <post u="325" v="344">INI" ) > 0 )
        return TRUE;
    else
#elif defined(__OSX__)    
    /*!
        \note   OSX

                SQLGetPrivateProfileString is the proper call and is available - but
                at </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="346" v="365">time it appears utterly broken. So we call an alternative
                instead. 
    */
    if ( GetPrivateProfileString( NULL, NULL, NULL, szSectionNames, sizeof( szSectionNames ) - 1, "</pre>
      <content type="TEXT" name="snippet" u="35" v="424" />
      <match u="366" v="366">ODBC.</match>
      <post u="367" v="386"><![CDATA[INI" ) &lt; 1 )
#else
    if ( SQLGetPrivateProfileString( NULL, NULL, "", szSectionNames, sizeof( szSectionNames ) - 1, "ODBC.INI" ) &lt; 1 )
#endif
    {
        /*! oops - we take easy way ]]></post>
    </solution>
    <solution rank="3" score="1">
      <pre u="358" v="377"><![CDATA[GetPrivateProfileString( NULL, NULL, NULL, szSectionNames, sizeof( szSectionNames ) - 1, "ODBC.INI" ) &lt; 1 )
#else
    if ( SQLGetPrivateProfileString( NULL, NULL, "", szSectionNames, sizeof( szSectionNames ) - 1, "]]></pre>
      <content type="TEXT" name="snippet" u="35" v="424" />
      <match u="378" v="378">ODBC.</match>
      <post u="379" v="398"><![CDATA[INI" ) &lt; 1 )
#endif
    {
        /*! oops - we take easy way out and just say we did not find it */
        return FALSE; 
    }

    /*!
        Scan ]]></post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... to see if a DSN exists in the ODBC system information.

    \note       This function uses the current  ... if ( SQLGetPrivateProfileString( pszDataSourceName, NULL, "", szSectionNames, sizeof( szSectionNames ) - 1, "ODBC.INI" ) > 0 )
        return TRUE;
    else
#elif defined(__OSX__)    
    /*!
        \ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/Makefile.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/Makefile.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="46" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="653" v="672">MYODBCINST_FALSE = @MYODBCINST_FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
</pre>
      <content type="TEXT" name="snippet" u="35" v="2343" />
      <match u="673" v="673">ODBC_</match>
      <post u="674" v="693">DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="656" v="675">FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @</pre>
      <content type="TEXT" name="snippet" u="35" v="2343" />
      <match u="676" v="676">ODBC_</match>
      <post u="677" v="696">DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="659" v="678">MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
</pre>
      <content type="TEXT" name="snippet" u="35" v="2343" />
      <match u="679" v="679">ODBC_</match>
      <post u="680" v="699">DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="662" v="681">LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @</pre>
      <content type="TEXT" name="snippet" u="35" v="2343" />
      <match u="682" v="682">ODBC_</match>
      <post u="683" v="702">DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/Makefile.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/Makefile.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="61" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="456" v="475">MYODBCINST_FALSE = @MYODBCINST_FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
</pre>
      <content type="TEXT" name="snippet" u="35" v="1407" />
      <match u="476" v="476">ODBC_</match>
      <post u="477" v="496">DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="459" v="478">FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @</pre>
      <content type="TEXT" name="snippet" u="35" v="1407" />
      <match u="479" v="479">ODBC_</match>
      <post u="480" v="499">DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="462" v="481">MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
</pre>
      <content type="TEXT" name="snippet" u="35" v="1407" />
      <match u="482" v="482">ODBC_</match>
      <post u="483" v="502">DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="465" v="484">LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @</pre>
      <content type="TEXT" name="snippet" u="35" v="1407" />
      <match u="485" v="485">ODBC_</match>
      <post u="486" v="505">DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/Makefile.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/Makefile.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="86" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="1028" v="1047">MYODBCINST_FALSE = @MYODBCINST_FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
</pre>
      <content type="TEXT" name="snippet" u="35" v="3586" />
      <match u="1048" v="1048">ODBC_</match>
      <post u="1049" v="1068">DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="1031" v="1050">FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @</pre>
      <content type="TEXT" name="snippet" u="35" v="3586" />
      <match u="1051" v="1051">ODBC_</match>
      <post u="1052" v="1071">DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="1034" v="1053">MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
</pre>
      <content type="TEXT" name="snippet" u="35" v="3586" />
      <match u="1054" v="1054">ODBC_</match>
      <post u="1055" v="1074">DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="1037" v="1056">LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @</pre>
      <content type="TEXT" name="snippet" u="35" v="3586" />
      <match u="1057" v="1057">ODBC_</match>
      <post u="1058" v="1077">DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/myodbc3_portable_gui.rc"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/myodbc3_portable_gui.rc/"
  graph-id-high-water="0" priority="0" vertex="0" i="122" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="122" v="141">0x29L
#else
 FILEFLAGS 0x28L
#endif
 FILEOS 0x40004L
 FILETYPE 0x2L
 FILESUBTYPE 0x0L
BEGIN
    BLOCK "StringFileInfo"
    BEGIN
        BLOCK "040904e4"
        BEGIN
            VALUE "Comments", "</pre>
      <content type="TEXT" name="snippet" u="37" v="226" />
      <match u="142" v="142">ODBC </match>
      <post u="143" v="162">driver to access MySQL\0"
            VALUE "CompanyName", "MySQL AB"
            VALUE "FileDescription", "MySQL ODBC 3.51 Driver\0"
            VALUE "FileVersion", "3.51.10 (GA)\</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="135" v="154">StringFileInfo"
    BEGIN
        BLOCK "040904e4"
        BEGIN
            VALUE "Comments", "ODBC driver to access MySQL\0"
            VALUE "CompanyName", "MySQL AB"
            VALUE "FileDescription", "MySQL </pre>
      <content type="TEXT" name="snippet" u="37" v="226" />
      <match u="155" v="155">ODBC </match>
      <post u="156" v="175">3.51 Driver\0"
            VALUE "FileVersion", "3.51.10 (GA)\0"
            VALUE "InternalName", "myodbc3\0"
            VALUE "LegalCopyright", "Copyright © MySQL AB 1995-2005\0"
            </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="161" v="180">3.51.10 (GA)\0"
            VALUE "InternalName", "myodbc3\0"
            VALUE "LegalCopyright", "Copyright © MySQL AB 1995-2005\0"
            VALUE "LegalTrademarks", "MySQL, MyODBC, Connector/</pre>
      <content type="TEXT" name="snippet" u="37" v="226" />
      <match u="181" v="181">ODBC </match>
      <post u="182" v="201">are trademarks of MySQL AB\0"
            VALUE "OriginalFilename", "myodbc3.dll\0"
            VALUE "PrivateBuild", "Production\0"
            VALUE "ProductName", "Connector/ODBC 3.51\</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="180" v="199">Connector/ODBC are trademarks of MySQL AB\0"
            VALUE "OriginalFilename", "myodbc3.dll\0"
            VALUE "PrivateBuild", "Production\0"
            VALUE "ProductName", "Connector/</pre>
      <content type="TEXT" name="snippet" u="37" v="226" />
      <match u="200" v="200">ODBC </match>
      <post u="201" v="220">3.51\0"
            VALUE "ProductVersion", "3.51\0"
            VALUE "SpecialBuild", "GA release  (Share version)\0"
        END
    END
    BLOCK "VarFileInfo"
    BEGIN
        VALUE "Translation", </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... BLOCK "StringFileInfo"
    BEGIN
        BLOCK "040904e4"
        BEGIN
            VALUE "Comments", "ODBC driver to access MySQL\0"
            VALUE "CompanyName", "MySQL AB"
            VALUE "FileDescription", "MySQL ODBC 3.51 Driver\0"
            VALUE "FileVersion", "3.51.10 (GA)\0"
             ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_utility.h"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_utility.h/"
  graph-id-high-water="0" priority="0" vertex="0" i="137" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="162" v="181">begin		 : Fri Nov 2 2001
    copyright		 : (C) MySQL AB 1995-2002, www.mysql.com
    author		 : venu ( venu@mysql.com )
 ***************************************************************************/

/***************************************************************************
 *									   *
 *	  MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="684" />
      <match u="182" v="182">ODBC </match>
      <post u="183" v="202"><![CDATA[3.51 Driver - samples utility header		   *
 *									   *
 ***************************************************************************/

#ifndef __TMYODBC_UTILITY_H__
#define __TMYODBC_UTILITY_H__

#ifdef HAVE_CONFIG_H
#include &lt;myconf.h>
#]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="202" v="221"><![CDATA[h>
#endif

#ifdef WIN32
#include &lt;windows.h>
#endif

/* STANDARD C HEADERS */
#include &lt;stdio.h>
#include &lt;stdlib.h>
#include &lt;assert.h>

/* ]]></pre>
      <content type="TEXT" name="snippet" u="36" v="684" />
      <match u="222" v="222">ODBC </match>
      <post u="223" v="242"><![CDATA[HEADERS */
#include &lt;sql.h>
#include &lt;sqlext.h>

#ifndef NULL
#define NULL 0
#endif

#ifndef ushort
#define ushort unsigned short
#endif

#]]></post>
    </solution>
    <solution rank="2" score="1">
      <pre u="266" v="285">95
#define MAX_COLUMNS 255
#define MAX_ROW_DATA_LEN 255

char *mydsn= (char*) "test";			/* Test database */
char *myuid= (char*) "</pre>
      <content type="TEXT" name="snippet" u="36" v="684" />
      <match u="286" v="286">odbc";			/* </match>
      <post u="287" v="306">User name for test sute */
char *mypwd= (char*) "";			/* Password for test suite */

/* PROTOTYPE */
void myerror(SQLRETURN rc,SQLSMALLINT htype, SQLHANDLE </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="520" v="539">printf("\nmyconnect:\n");

  rc = SQLAllocHandle(SQL_HANDLE_ENV,SQL_NULL_HANDLE,henv);
  myenv(*henv,rc);

  rc = SQLSetEnvAttr(*henv,SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="36" v="684" />
      <match u="540" v="540">ODBC_</match>
      <post u="541" v="560">VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
  myenv(*henv,rc);

  rc = SQLAllocHandle(SQL_HANDLE_DBC,*henv, hdbc);
  myenv(*henv,rc);

  printf(" </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... mysql.com
    author		 : venu ( venu@mysql.com )
 ***************************************************************************/

/***************************************************************************
 *									   *
 *	  MySQL ODBC 3.51 Driver - samples utility header		   *
 *									   *
 ***************************************************************************/

#ifndef __TMYODBC_UTILITY_ ... stdio.h>
#include &lt;stdlib.h>
#include &lt;assert.h>

/* ODBC HEADERS */
#include &lt;sql.h>
#include &lt;sqlext.h>

#ifndef  ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/Makefile.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/Makefile.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="139" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="823" v="842">MYODBCINST_FALSE = @MYODBCINST_FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
</pre>
      <content type="TEXT" name="snippet" u="35" v="2468" />
      <match u="843" v="843">ODBC_</match>
      <post u="844" v="863">DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="826" v="845">FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @</pre>
      <content type="TEXT" name="snippet" u="35" v="2468" />
      <match u="846" v="846">ODBC_</match>
      <post u="847" v="866">DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="829" v="848">MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
</pre>
      <content type="TEXT" name="snippet" u="35" v="2468" />
      <match u="849" v="849">ODBC_</match>
      <post u="850" v="869">DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="832" v="851">LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @</pre>
      <content type="TEXT" name="snippet" u="35" v="2468" />
      <match u="852" v="852">ODBC_</match>
      <post u="853" v="872">DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver_r/Makefile.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver_r/Makefile.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="164" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="796" v="815">MYODBCINST_FALSE = @MYODBCINST_FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
</pre>
      <content type="TEXT" name="snippet" u="36" v="9583" />
      <match u="816" v="816">ODBC_</match>
      <post u="817" v="836">DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="799" v="818">FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @</pre>
      <content type="TEXT" name="snippet" u="36" v="9583" />
      <match u="819" v="819">ODBC_</match>
      <post u="820" v="839">DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="802" v="821">MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
</pre>
      <content type="TEXT" name="snippet" u="36" v="9583" />
      <match u="822" v="822">ODBC_</match>
      <post u="823" v="842">DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="805" v="824">LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @</pre>
      <content type="TEXT" name="snippet" u="36" v="9583" />
      <match u="825" v="825">ODBC_</match>
      <post u="826" v="845">DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/transact.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/transact.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="166" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="196" v="215">For processing transactions				   *
 *									   *
 * @author     : MySQL AB(monty@mysql.com, venu@mysql.com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following </pre>
      <content type="TEXT" name="snippet" u="35" v="572" />
      <match u="216" v="216">ODBC </match>
      <post u="217" v="236">APIs are implemented in this file:		   *
 *									   *
 *   SQLEndTran		 (ISO 92)					   *
 *   SQLTransact	 (ODBC, Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

/*
  @type    : internal
  @purpose : to do </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="207" v="226">com)		   *
 * @date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLEndTran		 (ISO 92)					   *
 *   SQLTransact	 (</pre>
      <content type="TEXT" name="snippet" u="35" v="572" />
      <match u="227" v="227">ODBC, </match>
      <post u="228" v="247">Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

/*
  @type    : internal
  @purpose : to do the transaction at the connection level
*/

SQLRETURN my_transact(SQLHDBC hdbc,</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="349" v="368"><![CDATA[error(hdbc,MYERR_S1000,
			     mysql_error(&amp;dbc->mysql),
			     mysql_errno(&amp;dbc->mysql));
    }
    pthread_mutex_unlock(&amp;dbc->lock);
  }
  return(result);
}


/*
  @type    : ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="572" />
      <match u="369" v="369">ODBC </match>
      <post u="370" v="389">3.0
  @purpose : requests a commit or rollback operation for all active
  operations on all statements associated with a connection
*/

SQLRETURN </post>
    </solution>
    <solution rank="3" score="1">
      <pre u="477" v="496">Handle,CompletionType);
    break;

  default:
    result= SQL_ERROR;
    set_error(Handle,MYERR_S1092,NULL,0);
    break;
  }
  DBUG_RETURN_STATUS(result);
}


/*
  @type    : </pre>
      <content type="TEXT" name="snippet" u="35" v="572" />
      <match u="497" v="497">ODBC </match>
      <post u="498" v="517">1.0
  @purpose : Requests a commit or rollback operation for all active
  operations on all statement handles (hstmts) associated
  with a </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... date       : 2001-Aug-15						   *
 * @product    : myodbc3						   *
 *									   *
 ****************************************************************************/

/***************************************************************************
 * The following ODBC APIs are implemented in this file:		   *
 *									   *
 *   SQLEndTran		 (ISO 92)					   *
 *   SQLTransact	 (ODBC, Deprecated)				   *
 *									   *
 ****************************************************************************/

#include "myodbc3.h"

/*
  @type    : internal
  @purpose : to  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/myconf.h.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/myconf.h.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="172" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="168" v="187">02111-1307  USA           *
****************************************************************************/

/*************************************************************************** 
 * ACCONFIG.H                                                              *                                             
 *                                                                         *
 * @description: Defines for UNIX                                          *
 *                                                                         *
 * @author     : MySQL AB                                                  *
 * @date       : 2001-Aug-15                                               *
 * @product    : myodbc3                                                   *
 *                                                                         *
****************************************************************************/
#undef _UNIX_

/* </pre>
      <content type="TEXT" name="snippet" u="36" v="717" />
      <match u="188" v="188">odbc </match>
      <post u="189" v="208">types */
#undef SQLHENV
#undef SQLHDBC
#undef SQLHSTMT
#undef SQLINTEGER
#undef SQLUINTEGER
#undef SQLSMALLINT
#undef SQLUSMALLINT
#undef SQLPOINTER
#undef SQLRETURN
#undef </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="197" v="216">SQLINTEGER
#undef SQLUINTEGER
#undef SQLSMALLINT
#undef SQLUSMALLINT
#undef SQLPOINTER
#undef SQLRETURN
#undef SQLCHAR
#undef SQLHWND

#undef HAVE_SQLGETPRIVATEPROFILESTRING

#undef SYSTEM_</pre>
      <content type="TEXT" name="snippet" u="36" v="717" />
      <match u="217" v="217">ODBC_</match>
      <post u="218" v="237"><![CDATA[INI

#undef HAVE_LOCALTIME_R


/* Define to 1 if you have the &lt;dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* ]]></post>
    </solution>
    <solution rank="2" score="1">
      <pre u="673" v="692">SQLUSMALLINT

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Define path to system wide </pre>
      <content type="TEXT" name="snippet" u="36" v="717" />
      <match u="693" v="693">odbc.</match>
      <post u="694" v="713">ini file */
#undef SYSTEM_ODBC_INI

/* Version number of package */
#undef VERSION

/* Define if we are using unix build environment (</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="678" v="697">you have the ANSI C header files. */
#undef STDC_HEADERS

/* Define path to system wide odbc.ini file */
#undef SYSTEM_</pre>
      <content type="TEXT" name="snippet" u="36" v="717" />
      <match u="698" v="698">ODBC_</match>
      <post u="699" v="717">INI

/* Version number of package */
#undef VERSION

/* Define if we are using unix build environment (always true) */
#undef _UNIX_
</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... date       : 2001-Aug-15                                               *
 * @product    : myodbc3                                                   *
 *                                                                         *
****************************************************************************/
#undef _UNIX_

/* odbc types */
#undef SQLHENV
#undef SQLHDBC
#undef SQLHSTMT
#undef  ... SQLCHAR
#undef SQLHWND

#undef HAVE_SQLGETPRIVATEPROFILESTRING

#undef SYSTEM_ODBC_INI

#undef HAVE_LOCALTIME_R


/* Define to 1  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/Makefile.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/Makefile.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="180" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="764" v="783">MYODBCINST_FALSE = @MYODBCINST_FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
</pre>
      <content type="TEXT" name="snippet" u="35" v="2662" />
      <match u="784" v="784">ODBC_</match>
      <post u="785" v="804">DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="767" v="786">FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @</pre>
      <content type="TEXT" name="snippet" u="35" v="2662" />
      <match u="787" v="787">ODBC_</match>
      <post u="788" v="807">DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="770" v="789">MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
</pre>
      <content type="TEXT" name="snippet" u="35" v="2662" />
      <match u="790" v="790">ODBC_</match>
      <post u="791" v="810">DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="773" v="792">LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @</pre>
      <content type="TEXT" name="snippet" u="35" v="2662" />
      <match u="793" v="793">ODBC_</match>
      <post u="794" v="813">DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/misc.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/misc.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="182" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="241" v="260">FILE *system_ini= NULL, *user_ini= NULL;

  if ((odbcini= getenv("ODBCINI")))
    user_ini= fopen(odbcini,"r");

  /* only look in $HOME/.</pre>
      <content type="TEXT" name="snippet" u="35" v="792" />
      <match u="261" v="261">odbc.</match>
      <post u="262" v="281">ini if $ODBCINI wasn't there */
  if (!user_ini)
  {
    /* find the homedir */
    if (!(home_dir= getenv("HOME")))
    {
      struct passwd *pwd;
      /*
	</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="294" v="313"><![CDATA[getpwuid(getuid())))
	home_dir= pwd->pw_dir;
    }

    if (home_dir &amp;&amp; home_dir[0])
    {
      char tmp[1024];
      strxmov(tmp, home_dir, "/.]]></pre>
      <content type="TEXT" name="snippet" u="35" v="792" />
      <match u="314" v="314">odbc.</match>
      <post u="315" v="334">ini", NullS);
      user_ini= fopen(tmp,"r");
    }
  }

  system_ini= fopen(SYSTEM_ODBC_INI,"r");
  *sys_file= system_ini;
  *user_file= </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="306" v="325">0])
    {
      char tmp[1024];
      strxmov(tmp, home_dir, "/.odbc.ini", NullS);
      user_ini= fopen(tmp,"r");
    }
  }

  system_ini= fopen(SYSTEM_</pre>
      <content type="TEXT" name="snippet" u="35" v="792" />
      <match u="326" v="326">ODBC_</match>
      <post u="327" v="346">INI,"r");
  *sys_file= system_ini;
  *user_file= user_ini;
}


static void close_ini_files(FILE *sys_file, FILE *user_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="727" v="746"><![CDATA[-1;

  if (buf == NULL || buf_len &lt;= 1 || section == NULL || entry== NULL)
    return -1;					/* no need to bother */

  if (!strcmp(filename,"]]></pre>
      <content type="TEXT" name="snippet" u="35" v="792" />
      <match u="747" v="747">ODBC.</match>
      <post u="748" v="767">INI"))
  {
    value= find_key_by_dsn(section,entry);
    src= value ? value : def_value;

    length= 0;
    buf[0]= 0;
    if (src)
      </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... ini= fopen(odbcini,"r");

  /* only look in $HOME/.odbc.ini if $ODBCINI wasn't there */
  if (!user_ ... 0])
    {
      char tmp[1024];
      strxmov(tmp, home_dir, "/.odbc.ini", NullS);
      user_ini= fopen(tmp,"r");
    }
  }

  system_ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/Makefile.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/Makefile.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="188" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="703" v="722">MYODBCINST_FALSE = @MYODBCINST_FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
</pre>
      <content type="TEXT" name="snippet" u="34" v="2889" />
      <match u="723" v="723">ODBC_</match>
      <post u="724" v="743">DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="706" v="725">FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @</pre>
      <content type="TEXT" name="snippet" u="34" v="2889" />
      <match u="726" v="726">ODBC_</match>
      <post u="727" v="746">DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="709" v="728">MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
</pre>
      <content type="TEXT" name="snippet" u="34" v="2889" />
      <match u="729" v="729">ODBC_</match>
      <post u="730" v="749">DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="712" v="731">LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @</pre>
      <content type="TEXT" name="snippet" u="34" v="2889" />
      <match u="732" v="732">ODBC_</match>
      <post u="733" v="752">DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/myodbcinst/Makefile.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/myodbcinst/Makefile.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="196" la-score="0.1"
  vse-base-score="1.875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="628" v="647">MYODBCINST_FALSE = @MYODBCINST_FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
</pre>
      <content type="TEXT" name="snippet" u="35" v="2217" />
      <match u="648" v="648">ODBC_</match>
      <post u="649" v="668">DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="631" v="650">FALSE@
MYODBCINST_TRUE = @MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @</pre>
      <content type="TEXT" name="snippet" u="35" v="2217" />
      <match u="651" v="651">ODBC_</match>
      <post u="652" v="671">DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="634" v="653">MYODBCINST_TRUE@
MYSQL_LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
</pre>
      <content type="TEXT" name="snippet" u="35" v="2217" />
      <match u="654" v="654">ODBC_</match>
      <post u="655" v="674">DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="637" v="656">LIB = @MYSQL_LIB@
MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @</pre>
      <content type="TEXT" name="snippet" u="35" v="2217" />
      <match u="657" v="657">ODBC_</match>
      <post u="658" v="677">DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MYSQL_THREADSAFE_LIB = @MYSQL_THREADSAFE_LIB@
OBJEXT = @OBJEXT@
ODBC_DM_LIB = @ODBC_DM_LIB@
ODBC_DM_PATH = @ODBC_DM_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_utility.h"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_utility.h/"
  graph-id-high-water="0" priority="0" vertex="0" i="7" la-score="0.1"
  vse-base-score="1.75"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="83" v="102">published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *        MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="571" />
      <match u="103" v="103">ODBC </match>
      <post u="104" v="123"><![CDATA[3.51 Driver - samples utility header                  *
 *                                                                         *
 ***************************************************************************/

#ifndef __TMYODBC_UTILITY_H__
#define __TMYODBC_UTILITY_H__

#ifdef HAVE_CONFIG_H
#include &lt;myconf.h>
#]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="123" v="142"><![CDATA[h>
#endif

#ifdef WIN32
#include &lt;windows.h>
#endif 

/* STANDARD C HEADERS */
#include &lt;stdio.h>
#include &lt;stdlib.h>
#include &lt;assert.h>

/* ]]></pre>
      <content type="TEXT" name="snippet" u="36" v="571" />
      <match u="143" v="143">ODBC </match>
      <post u="144" v="163"><![CDATA[HEADERS */
#include &lt;sql.h>
#include &lt;sqlext.h>

#ifndef NULL
#define NULL 0
#endif

#ifndef ushort
#define ushort unsigned short
#endif

#]]></post>
    </solution>
    <solution rank="2" score="1">
      <pre u="428" v="447">printf("\nmyconnect:\n");

    rc = SQLAllocHandle(SQL_HANDLE_ENV,SQL_NULL_HANDLE,henv);
    myenv(*henv,rc);   
  
    rc = SQLSetEnvAttr(*henv,SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="36" v="571" />
      <match u="448" v="448">ODBC_</match>
      <post u="449" v="468">VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(*henv,rc);   

    rc = SQLAllocHandle(SQL_HANDLE_DBC,*henv, hdbc);
    myenv(*henv,rc);    

    printf(" </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *        MySQL ODBC 3.51 Driver - samples utility header                  *
 *                                                                         *
 ***************************************************************************/

#ifndef __TMYODBC_UTILITY_ ... stdio.h>
#include &lt;stdlib.h>
#include &lt;assert.h>

/* ODBC HEADERS */
#include &lt;sql.h>
#include &lt;sqlext.h>

#ifndef  ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/Makefile.ini"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/Makefile.ini/"
  graph-id-high-water="0" priority="0" vertex="0" i="17" la-score="0.1"
  vse-base-score="1.75"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="62" v="81">MYUID      = 
MYPWD      = 

#	
# COMPILATION SPECIFICATION
# Mainly for WINDOWS, on UNIX it will be ovveritten in Makefile.am
# 

MYSQL_DIR  = c:\\mysql
</pre>
      <content type="TEXT" name="snippet" u="35" v="106" />
      <match u="82" v="82">ODBC_</match>
      <post u="83" v="102">DIR   = ../
INCLUDE    = -I. -I$(MYSQL_DIR)/include -I$(ODBC_DIR)/include
LIBDIR     = -L$(MYSQL_DIR)/lib/opt -L$(ODBC_DIR)/</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="71" v="90">it will be ovveritten in Makefile.am
# 

MYSQL_DIR  = c:\\mysql
ODBC_DIR   = ../
INCLUDE    = -I. -I$(MYSQL_DIR)/include -I$(</pre>
      <content type="TEXT" name="snippet" u="35" v="106" />
      <match u="91" v="91">ODBC_</match>
      <post u="92" v="106">DIR)/include
LIBDIR     = -L$(MYSQL_DIR)/lib/opt -L$(ODBC_DIR)/win32/Release/myodbc3.lib


</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="81" v="100">mysql
ODBC_DIR   = ../
INCLUDE    = -I. -I$(MYSQL_DIR)/include -I$(ODBC_DIR)/include
LIBDIR     = -L$(MYSQL_DIR)/lib/opt -L$(</pre>
      <content type="TEXT" name="snippet" u="35" v="106" />
      <match u="101" v="101">ODBC_</match>
      <post u="102" v="106">DIR)/win32/Release/myodbc3.lib


</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... ovveritten in Makefile.am
# 

MYSQL_DIR  = c:\\mysql
ODBC_DIR   = ../
INCLUDE    = -I. -I$(MYSQL_DIR)/include -I$(ODBC_DIR)/include
LIBDIR     = -L$(MYSQL_DIR)/lib/opt -L$(ODBC_DIR)/win32/Release/myodbc3.lib


</content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/main.cpp.alternative"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/main.cpp.alternative/"
  graph-id-high-water="0" priority="0" vertex="0" i="57" la-score="0.1"
  vse-base-score="1.75"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="265" v="284">can work with
              any implementation of a setup library.
*/

/*!
    Default args (in case missing on command-line).
*/
char *pszDriver         = "MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="550" />
      <match u="285" v="285">ODBC </match>
      <post u="286" v="305">3.51 Driver";
char *pszAttributes     = "DSN=myodbc";

int main( int argc, char **argv )
{
#ifdef WIN32
        HMODULE hModule = NULL;
#else
        void *hModule  = </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="336" v="355">driver name (friendly name).
           So lets determine the setup library file name (better to not 
           assume name). We read from </pre>
      <content type="TEXT" name="snippet" u="36" v="550" />
      <match u="356" v="356">ODBC </match>
      <post u="357" v="376">system info.
        */
        MYODBCUtilReadDriver( pDriver, pszDriver );

        if ( !pDriver->pszSETUP )
        {
            fprintf( stderr, "Could not determine the file name of setup library.\n" );
            </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="485" v="504">if ( pFunc == NULL )
        {
            fprintf( stderr, "Could not find ConfigDSN in setup library.\n" );
            goto exit1;
        }

        /*
           Prompt. 
        */
        if ( !pFunc( (HWND)1, </pre>
      <content type="TEXT" name="snippet" u="36" v="550" />
      <match u="505" v="505">ODBC_</match>
      <post u="506" v="525">CONFIG_DSN, pszDriver, pszAttributes ) )
        {
            fprintf( stderr, "ConfigDSN failed.\n" );
            exit1; 

        /*
           Cleanup - we do not need the setup lib now :)
        */
#ifdef </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... case missing on command-line).
*/
char *pszDriver         = "MySQL ODBC 3.51 Driver";
char *pszAttributes     = "DSN=myodbc";

int main(  ... better to not 
           assume name). We read from ODBC system info.
        */
        MYODBCUtilReadDriver( pDriver, pszDriver );

        if ( !pDriver->pszSETUP )
        {
             ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/scripts/makerpm.sh"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/scripts/makerpm.sh/"
  graph-id-high-water="0" priority="0" vertex="0" i="147" la-score="0.1"
  vse-base-score="1.75"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="44" v="63">autoheader; aclocal; automake; autoconf
  ./configure \
    --prefix=${RPM_BUILD_ROOT}%{prefix} \
    --with-mysql-libs=%{MYSQL_LIBS} \
    --with-mysql-includes=%{MYSQL_INCLUDES} \
    ${</pre>
      <content type="TEXT" name="snippet" u="35" v="343" />
      <match u="64" v="64">ODBC_</match>
      <post u="65" v="84">DM_PATH} \
    --enable-thread-safe \
    --enable-shared=yes \
    --enable-static=yes \
    --without-debug \
    --without-docs \
    --without-samples
  make dist;
}

#
# MyODBC </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="120" v="139">driver/myodbc3.c" ]; 
then
  echo "ERROR : You must run this script from the MyODBC top-level directory"
  exit 1
fi

</pre>
      <content type="TEXT" name="snippet" u="35" v="343" />
      <match u="140" v="140">ODBC_</match>
      <post u="141" v="160">DM_PATH="@ODBC_DM_PATH@"
MYSQL_LIBS="@MYSQL_USED_LIB_PATH@"
MYSQL_INCLUDES="@MYSQL_USED_INCLUDE_PATH@"
MyODBC_ROOT=`pwd`

#
# </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="123" v="142">then
  echo "ERROR : You must run this script from the MyODBC top-level directory"
  exit 1
fi

ODBC_DM_PATH="@</pre>
      <content type="TEXT" name="snippet" u="35" v="343" />
      <match u="143" v="143">ODBC_</match>
      <post u="144" v="163">DM_PATH@"
MYSQL_LIBS="@MYSQL_USED_LIB_PATH@"
MYSQL_INCLUDES="@MYSQL_USED_INCLUDE_PATH@"
MyODBC_ROOT=`pwd`

#
# Find the RPM </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... libs=%{MYSQL_LIBS} \
    --with-mysql-includes=%{MYSQL_INCLUDES} \
    ${ODBC_DM_PATH} \
    --enable-thread-safe \
    --enable-shared=yes \
    -- ... the MyODBC top-level directory"
  exit 1
fi

ODBC_DM_PATH="@ODBC_DM_PATH@"
MYSQL_LIBS="@MYSQL_ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/imyodbc/imyodbc.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/imyodbc/imyodbc.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="201" la-score="0.1"
  vse-base-score="1.75"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="181" v="200">Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA */

/*!
    \file		A mysql-like console interface which uses </pre>
      <content type="TEXT" name="snippet" u="35" v="2249" />
      <match u="201" v="201">ODBC </match>
      <post u="202" v="221"><![CDATA[exclusively.
*/  

#include "imyodbc.h"
#ifdef HAVE_READLINE
    #include &lt;readline/readline.h>
    #include &lt;readline/history.h>
#endif

#ifdef HAVE_SETLOCALE
    #ifdef ]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="853" v="872">HANDLE_ENV, NULL, phEnv ) != SQL_SUCCESS )
    {
        fprintf( stderr, "[imyodbc]ERROR: Could not SQLAllocEnv\n" );
        return 0;
    }

    SQLSetEnvAttr( *phEnv, SQL_ATTR_</pre>
      <content type="TEXT" name="snippet" u="35" v="2249" />
      <match u="873" v="873">ODBC_</match>
      <post u="874" v="893">VERSION, (SQLPOINTER)SQL_OV_ODBC3, 0 );

    if ( SQLAllocHandle( SQL_HANDLE_DBC, *phEnv, phDbc ) != SQL_SUCCESS )
    {
        if ( bVerbose ) DumpODBCLog( hEnv, 0, </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="1682" v="1701"><![CDATA[break;
        printf( "&lt;/tr>\n" );
    }
}

void WriteFooterHTMLTable( SQLHSTMT hStmt )
{
    printf( "&lt;/table>\n" );
}

/****************************
 * WRITE DELIMITED
 * - this output can be used by the ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="2249" />
      <match u="1702" v="1702">ODBC </match>
      <post u="1703" v="1722">Text File driver
 * - last column no longer has a delimit char (it is implicit)...
 *   this is consistent with odbctxt
 ***************************/
void </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... file		A mysql-like console interface which uses ODBC exclusively.
*/  

#include "imyodbc.h"
#ifdef HAVE_READLINE
    #include &lt; ... SQLAllocEnv\n" );
        return 0;
    }

    SQLSetEnvAttr( *phEnv, SQL_ATTR_ODBC_VERSION, (SQLPOINTER)SQL_OV_ODBC3, 0 );

    if ( SQLAllocHandle(  ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/README"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/README/"
  graph-id-high-water="0" priority="0" vertex="0" i="6" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="35" v="36">#########################################################
#                                                       #
#              MySQL Connector/</pre>
      <content type="TEXT" name="snippet" u="34" v="121" />
      <match u="37" v="37">ODBC </match>
      <post u="38" v="57">3.51                #
#                   TEST - README                       #
#                                                       #
#           Copyright (C) MySQL AB 1995-2003            #
#########################################################

This README can be used to run Connector/ODBC 3.51 test 
</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="35" v="54">#########################################################
#                                                       #
#              MySQL Connector/ODBC 3.51                #
#                   TEST - README                       #
#                                                       #
#           Copyright (C) MySQL AB 1995-2003            #
#########################################################

This README can be used to run Connector/</pre>
      <content type="TEXT" name="snippet" u="34" v="121" />
      <match u="55" v="55">ODBC </match>
      <post u="56" v="75">3.51 test 
library from BK repository located from 'test' subdir.

First build the driver, and then cd to 'test' dir </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold">#########################################################
#                                                       #
#              MySQL Connector/ODBC 3.51                #
#                   TEST - README                       #
#                                                       #
#           Copyright (C) MySQL AB 1995-2003            #
#########################################################

This README can be used to run Connector/ODBC  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_relative.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_relative.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="12" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="1430" v="1449">hstmt,SQL_FETCH_RELATIVE,max_rows);/* after last */    
    mystmt_err(hstmt,rc==SQL_NO_DATA_FOUND,rc);

    /* 
       the scenarios from </pre>
      <content type="TEXT" name="snippet" u="36" v="3161" />
      <match u="1450" v="1450">ODBC </match>
      <post u="1451" v="1470">spec     
    */    

    /* CASE 1 */
    rc = SQLFetchScroll(hstmt,SQL_FETCH_FIRST,1);/* 1 */    
    mystmt(hstmt,rc);
    my_assert(i==1);

    rc = SQLFetchScroll(</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="2337" v="2356">hstmt,SQL_FETCH_RELATIVE,max_rows);/* after last */    
    mystmt_err(hstmt,rc==SQL_NO_DATA_FOUND,rc);

    /* 
       the scenarios from </pre>
      <content type="TEXT" name="snippet" u="36" v="3161" />
      <match u="2357" v="2357">ODBC </match>
      <post u="2358" v="2377">spec     
    */    

    /* CASE 1 */
    rc = SQLFetchScroll(hstmt,SQL_FETCH_FIRST,1);/* 1 */    
    mystmt(hstmt,rc);
    my_assert(nrows == 2);
    my_assert(</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... SQL_NO_DATA_FOUND,rc);

    /* 
       the scenarios from ODBC spec     
    */    

    /* CASE 1 */
    rc = SQLFetchScroll(hstmt,SQL_FETCH_ ... SQL_NO_DATA_FOUND,rc);

    /* 
       the scenarios from ODBC spec     
    */    

    /* CASE 1 */
    rc = SQLFetchScroll(hstmt,SQL_FETCH_ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_tran_ext.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_tran_ext.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="13" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="98" v="117">at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *  This is a basic sample to demonstrate the transaction support in       *
 *  MySQL using  MySQL </pre>
      <content type="TEXT" name="snippet" u="37" v="402" />
      <match u="118" v="118">ODBC </match>
      <post u="119" v="138">3.51 driver                                    *
 *                                                                         *
 ***************************************************************************/

#include "mytest3.h" /* MyODBC 3.51 sample utility header */


/********************************************************
* Transactional behaviour before and the connection     *
*********************************************************/
void test_tran_ext(</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="347" v="366"><![CDATA[mypwd = argv[3];      
          
    }
    rc = SQLAllocHandle(SQL_HANDLE_ENV,SQL_NULL_HANDLE,&amp;henv);
    myenv(henv,rc);   
  
    rc = SQLSetEnvAttr(henv,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="37" v="402" />
      <match u="367" v="367">ODBC_</match>
      <post u="368" v="387"><![CDATA[VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(henv,rc);   

    rc = SQLAllocHandle(SQL_HANDLE_DBC,henv, &amp;hdbc);
    myenv(henv,rc);    

    test_]]></post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... demonstrate the transaction support in       *
 *  MySQL using  MySQL ODBC 3.51 driver                                    *
 *                                                                         *
 ***************************************************************************/

#include "mytest3.h" /* MyODBC 3.51 sample  ... myenv(henv,rc);   
  
    rc = SQLSetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(henv, ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_connect.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_connect.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="18" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="97" v="116">your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *  This is a basic sample to demonstrate how to connect to MySQL server   *
 *  using MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="342" />
      <match u="117" v="117">ODBC </match>
      <post u="118" v="137">3.51 driver                                           *
 *                                                                         *
 ***************************************************************************/

#include "mytest3.h" /* MyODBC 3.51 sample utility header */

/********************************************************
* main routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="215" v="234"><![CDATA[ENV,SQL_NULL_HANDLE,&amp;henv);
    myenv(henv, rc);
    
    printf("success..\n setting the environment version ...");

    rc = SQLSetEnvAttr(henv,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="36" v="342" />
      <match u="235" v="235">ODBC_</match>
      <post u="236" v="255">VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(henv, rc);

    printf("success..\n allocating the connection handle ...");

    rc = SQLAllocHandle(SQL_HANDLE_</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... how to connect to MySQL server   *
 *  using MySQL ODBC 3.51 driver                                           *
 *                                                                         *
 ***************************************************************************/

#include "mytest3.h" /* MyODBC 3.51 sample  ... the environment version ...");

    rc = SQLSetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
    myenv(henv,  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtilReadConnectStr.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtilReadConnectStr.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="39" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="377" v="396">VALUE_START:
                {
                    if ( !isspace( *pScanChar ) )
                    {
                        pAnchorChar = pScanChar;
                        nState = MYODBCUTIL_ATTR_PARSE_STATE_VALUE;
                    }
                }
                break;
            case MYODBCUTIL_ATTR_PARSE_STATE_VALUE:
                {
                    /*
                        </pre>
      <content type="TEXT" name="snippet" u="35" v="776" />
      <match u="397" v="397">ODBC </match>
      <post u="398" v="417">RULE

                        If any keywords are repeated in the connection string, the driver uses the value 
                        associated with the first occurrence </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="510" v="529">we use one or other - whichever comes 1st */
                            {
                                pDataSource->pszDRIVER = (char *)strndup( pAnchorChar, pScanChar - pAnchorChar ); /* friendly name such as; "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="776" />
      <match u="530" v="530">ODBC </match>
      <post u="531" v="550"><![CDATA[3.51 Driver" */
                                pDataSource->nConnect = MYODBCUTIL_DATASOURCE_CONNECT_DRIVER;
                            }
                        }
                        else if ( strcasecmp( pszName, "DSN" ) == 0 )
                        {
                            if ( !pDataSource->pszDSN &amp;&amp; !pDataSource->pszDRIVER ) /* we ]]></post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... VALUE;
                    }
                }
                break;
            case MYODBCUTIL_ATTR_PARSE_STATE_VALUE:
                {
                    /*
                        ODBC RULE

                        If any keywords are repeated in the  ... pAnchorChar, pScanChar - pAnchorChar ); /* friendly name such as; "MySQL ODBC 3.51 Driver" */
                                pDataSource->nConnect = MYODBCUTIL_DATASOURCE_CONNECT_DRIVER;
                            }
                        }
                         ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupDataSourceTab3b.cpp"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupDataSourceTab3b.cpp/"
  graph-id-high-water="0" priority="0" vertex="0" i="66" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="330" v="349">tbl_name.col_name." );
    playoutFields->addWidget( pcheckboxIgnorePoundInTable );

    pcheckboxUseManagerCursors = new MYODBCSetupCheckBox( "User Manager Cursors", this );
    QToolTip::add( pcheckboxUseManagerCursors, "Force use of </pre>
      <content type="TEXT" name="snippet" u="35" v="541" />
      <match u="350" v="350">ODBC </match>
      <post u="351" v="370">manager cursors (experimental)." );
    pcheckboxUseManagerCursors->setAssistText( "Force use of ODBC manager cursors (experimental)." );
    playoutFields->addWidget( pcheckboxUseManagerCursors );

    pcheckboxDontUseSetLocale = new MYODBCSetupCheckBox( "Don't </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="339" v="358">MYODBCSetupCheckBox( "User Manager Cursors", this );
    QToolTip::add( pcheckboxUseManagerCursors, "Force use of ODBC manager cursors (experimental)." );
    pcheckboxUseManagerCursors->setAssistText( "Force use of </pre>
      <content type="TEXT" name="snippet" u="35" v="541" />
      <match u="359" v="359">ODBC </match>
      <post u="360" v="379">manager cursors (experimental)." );
    playoutFields->addWidget( pcheckboxUseManagerCursors );

    pcheckboxDontUseSetLocale = new MYODBCSetupCheckBox( "Don't Use Set Locale", this );
    QToolTip::add( pcheckboxDontUseSetLocale, "Disable the </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... Cursors", this );
    QToolTip::add( pcheckboxUseManagerCursors, "Force use of ODBC manager cursors (experimental)." );
    pcheckboxUseManagerCursors->setAssistText( "Force use of  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupDataSourceTab3c.cpp"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupDataSourceTab3c.cpp/"
  graph-id-high-water="0" priority="0" vertex="0" i="67" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="379" v="398">addWidget( pcheckboxNoCatalog );

    pcheckboxReadOptionsFromMyCnf = new MYODBCSetupCheckBox( "Read Options From my.cnf", this );
    QToolTip::add( pcheckboxReadOptionsFromMyCnf, "Read parameters from the [client] and [</pre>
      <content type="TEXT" name="snippet" u="35" v="536" />
      <match u="399" v="399">odbc] </match>
      <post u="400" v="419">groups from `my.cnf'." );
    pcheckboxReadOptionsFromMyCnf->setAssistText( "Read parameters from the [client] and [odbc] groups from `my.cnf'." );
    playoutFields->addWidget( pcheckboxReadOptionsFromMyCnf );

    </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="392" v="411">pcheckboxReadOptionsFromMyCnf, "Read parameters from the [client] and [odbc] groups from `my.cnf'." );
    pcheckboxReadOptionsFromMyCnf->setAssistText( "Read parameters from the [client] and [</pre>
      <content type="TEXT" name="snippet" u="35" v="536" />
      <match u="412" v="412">odbc] </match>
      <post u="413" v="432">groups from `my.cnf'." );
    playoutFields->addWidget( pcheckboxReadOptionsFromMyCnf );

    pcheckboxDisableTransactions = new MYODBCSetupCheckBox( "Disable Transactions", this );
    QToolTip::add( pcheckboxDisableTransactions, "Disable transactions." );
    pcheckboxDisableTransactions->setAssistText( "</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... add( pcheckboxReadOptionsFromMyCnf, "Read parameters from the [client] and [odbc] groups from `my.cnf'." );
    pcheckboxReadOptionsFromMyCnf->setAssistText( "Read parameters  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupDataSourceTab1.cpp"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupDataSourceTab1.cpp/"
  graph-id-high-water="0" priority="0" vertex="0" i="75" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="516" v="535">new MYODBCSetupLineEdit( this );
    plineeditUser->setAssistText( "The username used to connect to MySQL.\nOptional: Yes (silently uses default)\nDefault (Windows only): </pre>
      <content type="TEXT" name="snippet" u="35" v="670" />
      <match u="536" v="536">ODBC" );
    </match>
      <post u="537" v="556">QToolTip::add( plineeditUser, "The username used to connect to MySQL.\nOptional: Yes (silently uses default)\nDefault (Windows only): ODBC" );
    playoutFields-></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="535" v="554">only): ODBC" );
    QToolTip::add( plineeditUser, "The username used to connect to MySQL.\nOptional: Yes (silently uses default)\nDefault (Windows only): </pre>
      <content type="TEXT" name="snippet" u="35" v="670" />
      <match u="555" v="555">ODBC" );
    </match>
      <post u="556" v="575">playoutFields->addWidget( plabelUser, nRow, nColLabel );
    playoutFields->addWidget( plineeditUser, nRow, nColField );
    nRow++;

    plabelPassword = new QLabel( "Password", this );
    plineeditPassword = new MYODBCSetupLineEdit( this );
    </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... nOptional: Yes (silently uses default)\nDefault (Windows only): ODBC" );
    QToolTip::add( plineeditUser, "The username used to connect  ... nOptional: Yes (silently uses default)\nDefault (Windows only): ODBC" );
    playoutFields->addWidget( plabelUser, nRow, nColLabel );
    playoutFields->addWidget( plineeditUser,  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupHandleInstallerError.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/MYODBCSetupHandleInstallerError.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="93" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="252" v="271"><![CDATA[nReturn;

  nReturn = SQLInstallerError( nRecord, &amp;nError, szError, SQL_MAX_MESSAGE_LENGTH - 1, 0 );
  if ( SQL_SUCCEEDED( nReturn ) )
    printf( "[%s][%d][ERROR] ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="293" />
      <match u="272" v="272">ODBC </match>
      <post u="273" v="292">Installer error %d: %s\n", __FILE__, __LINE__, nError, szError );
  else
    printf( "[%s][%d][ERROR] ODBC Installer error (unknown)\n", __FILE__, __</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="267" v="286">nReturn ) )
    printf( "[%s][%d][ERROR] ODBC Installer error %d: %s\n", __FILE__, __LINE__, nError, szError );
  else
    printf( "[%s][%d][ERROR] </pre>
      <content type="TEXT" name="snippet" u="35" v="293" />
      <match u="287" v="287">ODBC </match>
      <post u="288" v="293">Installer error (unknown)\n", __FILE__, __LINE__ );
}


</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... if ( SQL_SUCCEEDED( nReturn ) )
    printf( "[%s][%d][ERROR] ODBC Installer error %d: %s\n", __FILE__, __LINE__, nError, szError );
  else
    printf( "[%s][%d][ERROR] ODBC Installer error (unknown)\n", __FILE__, __LINE__ );
}


</content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/Makefile"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/Makefile/"
  graph-id-high-water="0" priority="0" vertex="0" i="119" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="35" v="37">##########################################################################
#                                                                        #   
#               MAKEFILE FOR Connector/</pre>
      <content type="TEXT" name="snippet" u="34" v="669" />
      <match u="38" v="38">ODBC </match>
      <post u="39" v="58">3.51 DRIVER                  #
#                       WINDOWS - RELEASE/SHARE                          #
#                 (C) Copyright MySQL AB 1995-2005                       #
#                                                                        #
##########################################################################


!MESSAGE *****************************************************************
!MESSAGE *            Connector/ODBC 3.51, Release Build                 *          
!MESSAGE *            (C) </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="35" v="52">##########################################################################
#                                                                        #   
#               MAKEFILE FOR Connector/ODBC 3.51 DRIVER                  #
#                       WINDOWS - RELEASE/SHARE                          #
#                 (C) Copyright MySQL AB 1995-2005                       #
#                                                                        #
##########################################################################


!MESSAGE *****************************************************************
!MESSAGE *            Connector/</pre>
      <content type="TEXT" name="snippet" u="34" v="669" />
      <match u="53" v="53">ODBC </match>
      <post u="54" v="73">3.51, Release Build                 *          
!MESSAGE *            (C) Copyright MySQL AB, 1995-2005                  *
!MESSAGE *                                                               *
!MESSAGE *    AUTHORS: Monty (monty@mysql.com), Venu (venu@mysql.</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold">##########################################################################
#                                                                        #   
#               MAKEFILE FOR Connector/ODBC 3.51 DRIVER                  #
#                       WINDOWS - RELEASE/SHARE                          #
#                 (C) Copyright MySQL AB 1995-2005                       #
#                                                                        #
##########################################################################


!MESSAGE *****************************************************************
!MESSAGE *            Connector/ODBC 3.51, Release Build                 *          
!MESSAGE *            ( ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/Makefile_debug"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/Makefile_debug/"
  graph-id-high-water="0" priority="0" vertex="0" i="124" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="36" v="38">##########################################################################
#                                                                        #   
#               MAKEFILE FOR Connector/</pre>
      <content type="TEXT" name="snippet" u="35" v="671" />
      <match u="39" v="39">ODBC </match>
      <post u="40" v="59">3.51 DRIVER                  #
#                          WINDOWS - DEBUG                               #
#                  (C) Copyright MySQL AB 1995-2005                      #
#                                                                        #
##########################################################################


!MESSAGE *****************************************************************
!MESSAGE *             Connector/ODBC 3.51, Debug Build                  *          
!MESSAGE *             (C) Copyright </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="36" v="52">##########################################################################
#                                                                        #   
#               MAKEFILE FOR Connector/ODBC 3.51 DRIVER                  #
#                          WINDOWS - DEBUG                               #
#                  (C) Copyright MySQL AB 1995-2005                      #
#                                                                        #
##########################################################################


!MESSAGE *****************************************************************
!MESSAGE *             Connector/</pre>
      <content type="TEXT" name="snippet" u="35" v="671" />
      <match u="53" v="53">ODBC </match>
      <post u="54" v="73">3.51, Debug Build                  *          
!MESSAGE *             (C) Copyright MySQL AB. 1995-2005                 *
!MESSAGE *                                                               *
!MESSAGE *    AUTHORS: Monty (monty@mysql.com), Venu (venu@mysql.</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold">##########################################################################
#                                                                        #   
#               MAKEFILE FOR Connector/ODBC 3.51 DRIVER                  #
#                          WINDOWS - DEBUG                               #
#                  (C) Copyright MySQL AB 1995-2005                      #
#                                                                        #
##########################################################################


!MESSAGE *****************************************************************
!MESSAGE *             Connector/ODBC 3.51, Debug Build                  *          
!MESSAGE *             (C)  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_connect.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_connect.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="141" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="176" v="195">author		 : venu ( venu@mysql.com )
 ***************************************************************************/

/***************************************************************************
 *									   *
 *  This is a basic sample to demonstrate how to connect to MySQL server   *
 *  using MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="443" />
      <match u="196" v="196">ODBC </match>
      <post u="197" v="216">3.51 driver					   *
 *									   *
 ***************************************************************************/

#include "my_utility.h" /* MyODBC 3.51 sample utility header */

/********************************************************
 * main routine						*
 *********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="295" v="314"><![CDATA[ENV,SQL_NULL_HANDLE,&amp;henv);
  myenv(henv, rc);

  printf("success..\n setting the environment version ...");

  rc = SQLSetEnvAttr(henv,SQL_ATTR_]]></pre>
      <content type="TEXT" name="snippet" u="36" v="443" />
      <match u="315" v="315">ODBC_</match>
      <post u="316" v="335">VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
  myenv(henv, rc);

  printf("success..\n allocating the connection handle ...");

  rc = SQLAllocHandle(SQL_HANDLE_</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... how to connect to MySQL server   *
 *  using MySQL ODBC 3.51 driver					   *
 *									   *
 ***************************************************************************/

#include "my_utility.h" /* MyODBC 3.51  ... the environment version ...");

  rc = SQLSetEnvAttr(henv,SQL_ATTR_ODBC_VERSION,(SQLPOINTER)SQL_OV_ODBC3,0);
  myenv(henv,  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/scripts/Makefile.am"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/scripts/Makefile.am/"
  graph-id-high-water="0" priority="0" vertex="0" i="149" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="203" v="222">t
	sed \
	-e 's!@''VERSION''@!@VERSION@!' \
	-e 's!@''MACHINE_TYPE''@!@MACHINE_TYPE@!' \
	-e 's!@''SYSTEM_TYPE''@!@SYSTEM_TYPE@!' \
	-e 's!@''</pre>
      <content type="TEXT" name="snippet" u="35" v="303" />
      <match u="223" v="223">ODBC_</match>
      <post u="224" v="243">DM_PATH''@!@ODBC_DM_PATH@!' \
	-e 's!@''MYSQL_USED_LIB_PATH''@!@MYSQL_USED_LIB_PATH@!' \
	-e 's!@''MYSQL_USED_INCLUDE_</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="206" v="225">s!@''VERSION''@!@VERSION@!' \
	-e 's!@''MACHINE_TYPE''@!@MACHINE_TYPE@!' \
	-e 's!@''SYSTEM_TYPE''@!@SYSTEM_TYPE@!' \
	-e 's!@''ODBC_DM_PATH''@!@</pre>
      <content type="TEXT" name="snippet" u="35" v="303" />
      <match u="226" v="226">ODBC_</match>
      <post u="227" v="246">DM_PATH@!' \
	-e 's!@''MYSQL_USED_LIB_PATH''@!@MYSQL_USED_LIB_PATH@!' \
	-e 's!@''MYSQL_USED_INCLUDE_PATH''@!@MYSQL_USED_</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... e 's!@''SYSTEM_TYPE''@!@SYSTEM_TYPE@!' \
	-e 's!@''ODBC_DM_PATH''@!@ODBC_DM_PATH@!' \
	-e 's!@''MYSQL_USED_LIB_PATH''@!@ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/scripts/make_binary_distribution.sh"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/scripts/make_binary_distribution.sh/"
  graph-id-high-water="0" priority="0" vertex="0" i="152" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="165" v="184">MyODBC-3.51

if [ -d $BASE ] ; then
 rm -r -f $BASE
fi

mkdir $BASE

for i in ChangeLog COPYING EXCEPTIONS README </pre>
      <content type="TEXT" name="snippet" u="37" v="499" />
      <match u="185" v="185">odbc.</match>
      <post u="186" v="205">ini
do
  if [ -f $i ]
  then
    $CP $i $BASE
  fi
done

for i in driver/.libs/*
do
  if [ -f $i ]
  </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="273" v="292">r-$version.so libmyodbc3_r.so
  cd $SOURCE
fi


# Change the distribution to a long descriptive name
NEW_NAME=connector-</pre>
      <content type="TEXT" name="snippet" u="37" v="499" />
      <match u="293" v="293">odbc-$</match>
      <post u="294" v="313">version-$system-$machine
BASE2=$TMP/$NEW_NAME
$RM -r -f $BASE2
$MV $BASE $BASE2
BASE=$BASE2

#if we are debugging, </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... BASE

for i in ChangeLog COPYING EXCEPTIONS README odbc.ini
do
  if [ -f $i ]
  then
    $CP $i $ ... to a long descriptive name
NEW_NAME=connector-odbc-$version-$system-$machine
BASE2=$TMP/$NEW_NAME
$RM - ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/myutil.h"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/myutil.h/"
  graph-id-high-water="0" priority="0" vertex="0" i="165" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="442" v="461">SQLHDBC hdbc,SQLHSTMT FAR *phstmt);
SQLRETURN do_query(STMT FAR *stmt,char *query);
char *insert_params(STMT FAR *stmt);
SQLRETURN </pre>
      <content type="TEXT" name="snippet" u="35" v="1164" />
      <match u="462" v="462">odbc_</match>
      <post u="463" v="482">stmt(DBC FAR *dbc, const char *query);
void mysql_link_fields(STMT *stmt,MYSQL_FIELD *fields,uint field_count);
void </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="805" v="824">as_long(const char *str,uint length);
void init_getfunctions(void);
void myodbc_init(void);
void myodbc_ov_init(SQLINTEGER </pre>
      <content type="TEXT" name="snippet" u="35" v="1164" />
      <match u="825" v="825">odbc_</match>
      <post u="826" v="845">version);
void myodbc_sqlstate2_init(void);
void myodbc_sqlstate3_init(void);
int check_if_server_is_alive(DBC FAR *dbc);
</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... query);
char *insert_params(STMT FAR *stmt);
SQLRETURN odbc_stmt(DBC FAR *dbc, const char *query);
void  ... myodbc_init(void);
void myodbc_ov_init(SQLINTEGER odbc_version);
void myodbc_sqlstate2_init(void);
void myodbc_ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/README.win"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/README.win/"
  graph-id-high-water="0" priority="0" vertex="0" i="191" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="35" v="35">+-------------------------------------------------------------+
| Connector/</pre>
      <content type="TEXT" name="snippet" u="34" v="706" />
      <match u="36" v="36">ODBC                                              |
| </match>
      <post u="37" v="56">Windows Platforms                                           |
+-------------------------------------------------------------+

INTRODUCTION
---------------------------------------------------------------

In this document I explain how to build the MyODBC driver on
Windows platforms. I will be </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="45" v="64">how to build the MyODBC driver on
Windows platforms. I will be as brief as possible.

WHAT YOU NEED
---------------------------------------------------------------

Windows
-------

</pre>
      <content type="TEXT" name="snippet" u="34" v="706" />
      <match u="65" v="65">ODBC </match>
      <post u="66" v="85">has been a standard part of Windows since 3.1 but we do
not build for very old versions of Windows. </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold">+-------------------------------------------------------------+
| Connector/ODBC                                              |
| Windows Platforms                                           |
+-------------------------------------------------------------+

INTRODUCTION
---------------------------------------------------------------

In this document I explain how to build the MyODBC driver on
Windows platforms.  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/acconfig.h"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/acconfig.h/"
  graph-id-high-water="0" priority="0" vertex="0" i="208" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="156" v="175">02111-1307  USA           *
****************************************************************************/

/*************************************************************************** 
 * ACCONFIG.H                                                              *                                             
 *                                                                         *
 * @description: Defines for UNIX                                          *
 *                                                                         *
 * @author     : MySQL AB                                                  *
 * @date       : 2001-Aug-15                                               *
 * @product    : myodbc3                                                   *
 *                                                                         *
****************************************************************************/
#undef _UNIX_

/* </pre>
      <content type="TEXT" name="snippet" u="34" v="210" />
      <match u="176" v="176">odbc </match>
      <post u="177" v="196">types */
#undef SQLHENV
#undef SQLHDBC
#undef SQLHSTMT
#undef SQLINTEGER
#undef SQLUINTEGER
#undef SQLSMALLINT
#undef SQLUSMALLINT
#undef SQLPOINTER
#undef SQLRETURN
#undef </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="185" v="204">SQLINTEGER
#undef SQLUINTEGER
#undef SQLSMALLINT
#undef SQLUSMALLINT
#undef SQLPOINTER
#undef SQLRETURN
#undef SQLCHAR
#undef SQLHWND

#undef HAVE_SQLGETPRIVATEPROFILESTRING

#undef SYSTEM_</pre>
      <content type="TEXT" name="snippet" u="34" v="210" />
      <match u="205" v="205">ODBC_</match>
      <post u="206" v="210">INI

#undef HAVE_LOCALTIME_R

</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... date       : 2001-Aug-15                                               *
 * @product    : myodbc3                                                   *
 *                                                                         *
****************************************************************************/
#undef _UNIX_

/* odbc types */
#undef SQLHENV
#undef SQLHDBC
#undef SQLHSTMT
#undef  ... SQLCHAR
#undef SQLHWND

#undef HAVE_SQLGETPRIVATEPROFILESTRING

#undef SYSTEM_ODBC_INI

#undef HAVE_LOCALTIME_R

</content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest32.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest32.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="8" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="80" v="99">the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   Tests for Connector/</pre>
      <content type="TEXT" name="snippet" u="35" v="3686" />
      <match u="100" v="100">ODBC </match>
      <post u="101" v="120">3.52                                         *  
 *                                                                         *
 ***************************************************************************/
#include "mytest3.h"


SQLHENV henv= NULL;
SQLHDBC hdbc= NULL;
SQLHSTMT hstmt= NULL;
SQLRETURN rc;

/*
  Basic prepared statements - binary protocol </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   Tests for Connector/ODBC 3.52                                         *  
 *                                                                         *
 ***************************************************************************/
#include "mytest3.h"


SQLHENV henv= NULL;
SQLHDBC  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_basics.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_basics.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="15" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="97" v="116">your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *  This is a basic sample to demonstrate the basic execution of SQL       *
 *  statements using  MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="629" />
      <match u="117" v="117">ODBC </match>
      <post u="118" v="137">3.51 driver                               *
 *                                                                         *
 ***************************************************************************/

#include "mytest3.h" /* MyODBC 3.51 sample utility header */

/********************************************************
* Execution of BASIC SQL statements                     *
*********************************************************/
void my_basics(SQLHDBC hdbc, </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... the basic execution of SQL       *
 *  statements using  MySQL ODBC 3.51 driver                               *
 *                                                                         *
 ***************************************************************************/

#include "mytest3.h" /* MyODBC 3.51 sample  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_result.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_result.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="21" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="96" v="115">at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *  This is a basic sample to demonstrate how to get the resultset         *
 *  using  MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="613" />
      <match u="116" v="116">ODBC </match>
      <post u="117" v="136">3.51 driver                                          *
 *                                                                         *
 ***************************************************************************/

#include "mytest3.h" /* MyODBC 3.51 sample utility header */

/********************************************************
* result set demo                                       *
*********************************************************/
void my_resultset(SQLHDBC hdbc, SQLHSTMT hstmt)
{
  </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... demonstrate how to get the resultset         *
 *  using  MySQL ODBC 3.51 driver                                          *
 *                                                                         *
 ***************************************************************************/

#include "mytest3.h" /* MyODBC 3.51 sample  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/WIN-Makefile"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/WIN-Makefile/"
  graph-id-high-water="0" priority="0" vertex="0" i="28" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="36" v="50">##########################################################################
#                     MAKEFILE FOR MYODBC 3.51 Test Library              #
#                                 WINDOWS                                #
#                         (C) MySQL AB 1997-2003                         #
##########################################################################
!MESSAGE *****************************************************************
!MESSAGE *         MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="495" />
      <match u="51" v="51">ODBC </match>
      <post u="52" v="71">3.51 Driver, WINDOWS TEST LIBRARY          *          
!MESSAGE *               (C) Copyright MySQL AB 1997-2003                *
!MESSAGE *                                                               *
!MESSAGE *    AUTHORS: Monty (monty@mysql.com), Venu (</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... C) MySQL AB 1997-2003                         #
##########################################################################
!MESSAGE *****************************************************************
!MESSAGE *         MySQL ODBC 3.51 Driver, WINDOWS TEST LIBRARY          *          
!MESSAGE *               (C) Copyright  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_tran.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_tran.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="29" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="96" v="115">at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *  This is a basic sample to demonstrate the transaction support in       *
 *  MySQL using  MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="525" />
      <match u="116" v="116">ODBC </match>
      <post u="117" v="136">3.51 driver                                    *
 *                                                                         *
 ***************************************************************************/

#include "mytest3.h" /* MyODBC 3.51 sample utility header */


/********************************************************
* Transactional behaviour using BDB/InnoDB table type   *
*********************************************************/
void my_transaction(</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... demonstrate the transaction support in       *
 *  MySQL using  MySQL ODBC 3.51 driver                                    *
 *                                                                         *
 ***************************************************************************/

#include "mytest3.h" /* MyODBC 3.51 sample  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest.h"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest.h/"
  graph-id-high-water="0" priority="0" vertex="0" i="31" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="118" v="137"><![CDATA[endif 

#ifndef MY_DEBUG
#define MY_DEBUG
#endif

/* STANDARD C HEADERS */
#include &lt;stdio.h>
#include &lt;stdlib.h>
#include &lt;assert.h>

/* ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="947" />
      <match u="138" v="138">ODBC </match>
      <post u="139" v="158"><![CDATA[HEADERS */
#include &lt;sql.h>
#include &lt;sqlext.h>

#ifndef NULL
#define NULL 0
#endif

#ifndef ushort
#define ushort unsigned short
#endif

#]]></post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... stdio.h>
#include &lt;stdlib.h>
#include &lt;assert.h>

/* ODBC HEADERS */
#include &lt;sql.h>
#include &lt;sqlext.h>

#ifndef  ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtilReadDriver.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/util/MYODBCUtilReadDriver.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="35" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="196" v="215">brief  Read driver from system information.

    \param  pDriver Driver struct.
    \param  pszName User friendly name of driver such as "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="396" />
      <match u="216" v="216">ODBC </match>
      <post u="217" v="236">3.51 Driver (32 bit)"
    
    \note   This will not replace existing values in pDriver.
*/            
BOOL MYODBCUtilReadDriver( MYODBCUTIL_DRIVER *pDriver, LPCSTR pszName )
{
    </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... User friendly name of driver such as "MySQL ODBC 3.51 Driver (32 bit)"
    
    \note   This will not  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/myodbc3S.def"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/setup/myodbc3S.def/"
  graph-id-high-water="0" priority="0" vertex="0" i="72" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="36" v="51">LIBRARY MYODBC3S.DLL
; NOTE: These are done in rc file.
;VERSION 03.51.11
;DESCRIPTION "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="63" />
      <match u="52" v="52">ODBC </match>
      <post u="53" v="63">3.51 Driver, (C) Copyright MySQL AB 1995-2005"
EXPORTS
ConfigDSN
MYODBCSetupDriverConnect
;



</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... rc file.
;VERSION 03.51.11
;DESCRIPTION "MySQL ODBC 3.51 Driver, (C) Copyright MySQL AB 1995-2005"
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/Makefile.ini"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/Makefile.ini/"
  graph-id-high-water="0" priority="0" vertex="0" i="125" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="36" v="38">##########################################################################
#                                                                        #   
#               MAKEFILE FOR Connector/</pre>
      <content type="TEXT" name="snippet" u="35" v="327" />
      <match u="39" v="39">ODBC </match>
      <post u="40" v="59">3.51 DRIVER                  #
#                       WINDOWS Definations                              #
#                 (C) Copyright MySQL AB 1995-2005                       #
#                                                                        #
#       AUTHORS: Monty (monty@mysql.com), Venu (venu@mysql.com)          #
##########################################################################

##########################################################################
#  This </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold">##########################################################################
#                                                                        #   
#               MAKEFILE FOR Connector/ODBC 3.51 DRIVER                  #
#                       WINDOWS Definations                              #
#                 (C) Copyright MySQL AB 1995-2005                       #
#                                                                        #
#       AUTHORS: Monty (monty@mysql.com), Venu (venu@mysql.com)          #
##########################################################################

##########################################################################
#   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/myodbc3_portable_gui.def"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/myodbc3_portable_gui.def/"
  graph-id-high-water="0" priority="0" vertex="0" i="126" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="178" v="197">mysql.com, venu@mysql.com)                 *
; * @date       : 2001-Aug-15                                               *
; * @product    : myodbc3                                                   *
; *                                                                         *
;****************************************************************************/
;
LIBRARY MYODBC3.DLL
VERSION 03.51.11
; DESCRIPTION "MySQL </pre>
      <content type="TEXT" name="snippet" u="37" v="302" />
      <match u="198" v="198">ODBC </match>
      <post u="199" v="218">3.51 Driver, (C) Copyright MySQL AB 1995-2005"
;CODE MOVEABLE DISCARDABLE
;DATA MOVEABLE MULTIPLE
;PROTMODE
;SEGMENTS
;DLL_TEXT PRELOAD
;INIT_</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MYODBC3.DLL
VERSION 03.51.11
; DESCRIPTION "MySQL ODBC 3.51 Driver, (C) Copyright MySQL AB 1995-2005"
; ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/myodbc3.def"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/win32/myodbc3.def/"
  graph-id-high-water="0" priority="0" vertex="0" i="127" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="176" v="195">mysql.com, venu@mysql.com)                 *
; * @date       : 2001-Aug-15                                               *
; * @product    : myodbc3                                                   *
; *                                                                         *
;****************************************************************************/
;
LIBRARY MYODBC3.DLL
VERSION 03.51.11
;DESCRIPTION "MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="303" />
      <match u="196" v="196">ODBC </match>
      <post u="197" v="216">3.51 Driver, (C) Copyright MySQL AB 1995-2005"
;CODE MOVEABLE DISCARDABLE
;DATA MOVEABLE MULTIPLE
;PROTMODE
;SEGMENTS
;DLL_TEXT PRELOAD
;INIT_</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... MYODBC3.DLL
VERSION 03.51.11
;DESCRIPTION "MySQL ODBC 3.51 Driver, (C) Copyright MySQL AB 1995-2005"
; ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_basics.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_basics.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="140" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="176" v="195">author		 : venu ( venu@mysql.com )
 ***************************************************************************/

/***************************************************************************
 *									   *
 *  This is a basic sample to demonstrate the basic execution of SQL	   *
 *  statements using  MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="731" />
      <match u="196" v="196">ODBC </match>
      <post u="197" v="216">3.51 driver				   *
 *									   *
 ***************************************************************************/

#include "my_utility.h" /* MyODBC 3.51 sample utility header */

/********************************************************
 * Execution of BASIC SQL statements			 *
 *********************************************************/
void my_basics(SQLHDBC </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... the basic execution of SQL	   *
 *  statements using  MySQL ODBC 3.51 driver				   *
 *									   *
 ***************************************************************************/

#include "my_utility.h" /* MyODBC 3.51  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_result.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_result.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="142" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="175" v="194">com
    author		 : venu ( venu@mysql.com )
 ***************************************************************************/

/***************************************************************************
 *									   *
 *  This is a basic sample to demonstrate how to get the resultset	   *
 *  using  MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="692" />
      <match u="195" v="195">ODBC </match>
      <post u="196" v="215">3.51 driver					   *
 *									   *
 ***************************************************************************/

#include "my_utility.h" /* MyODBC 3.51 sample utility header */

/********************************************************
 * result set demo					*
 *********************************************************/
void my_resultset(SQLHDBC hdbc, SQLHSTMT </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... demonstrate how to get the resultset	   *
 *  using  MySQL ODBC 3.51 driver					   *
 *									   *
 ***************************************************************************/

#include "my_utility.h" /* MyODBC 3.51  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/WIN-Makefile"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/WIN-Makefile/"
  graph-id-high-water="0" priority="0" vertex="0" i="143" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="36" v="49">##########################################################################
#                     MAKEFILE FOR MYODBC 3.51 SAMPLES                   #
#                                 WINDOWS                                #
#                         (C) MySQL AB 1997-2002                         #
##########################################################################

!MESSAGE *****************************************************************
!MESSAGE *           MySQL </pre>
      <content type="TEXT" name="snippet" u="35" v="301" />
      <match u="50" v="50">ODBC </match>
      <post u="51" v="70">3.51 Driver, WINDOWS SAMPLES             *          
!MESSAGE *              (C) Copyright MySQL AB 1997-2002                 *
!MESSAGE *                                                               *
!MESSAGE *    AUTHORS: Monty (monty@mysql.com), Venu (venu@</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... C) MySQL AB 1997-2002                         #
##########################################################################

!MESSAGE *****************************************************************
!MESSAGE *           MySQL ODBC 3.51 Driver, WINDOWS SAMPLES             *          
!MESSAGE *              (C) Copyright MySQL  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_tran.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_tran.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="144" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="175" v="194">com
    author		 : venu ( venu@mysql.com )
 ***************************************************************************/

/***************************************************************************
 *									   *
 *  This is a basic sample to demonstrate the transaction support in	   *
 *  MySQL using  MySQL </pre>
      <content type="TEXT" name="snippet" u="36" v="572" />
      <match u="195" v="195">ODBC </match>
      <post u="196" v="215">3.51 driver					   *
 *									   *
 ***************************************************************************/

#include "my_utility.h" /* MyODBC 3.51 sample utility header */


/********************************************************
 * Transactional behaviour using BDB/InnoDB table type	*
 *********************************************************/
void my_</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... demonstrate the transaction support in	   *
 *  MySQL using  MySQL ODBC 3.51 driver					   *
 *									   *
 ***************************************************************************/

#include "my_utility.h" /* MyODBC 3.51  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/error.h"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/error.h/"
  graph-id-high-water="0" priority="0" vertex="0" i="174" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="228" v="247">define ER_INVALID_CURSOR_NAME	 514
#define ER_ALL_COLUMNS_IGNORED	 537

/*
  myodbc3 error prefix
*/
#define MYODBC3_ERROR_PREFIX	 "[MySQL][</pre>
      <content type="TEXT" name="snippet" u="35" v="466" />
      <match u="248" v="248">ODBC </match>
      <post u="249" v="268">3.51 Driver]"
#define MYODBC_ERROR_CODE_START  500

/*
  error handler structure
*/
typedef struct tagERROR {

  char	   sqlstate[6];
  char	   message[SQL_</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... myodbc3 error prefix
*/
#define MYODBC3_ERROR_PREFIX	 "[MySQL][ODBC 3.51 Driver]"
#define MYODBC_ERROR_CODE_START  500

/*
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/imyodbc/Makefile.am"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/imyodbc/Makefile.am/"
  graph-id-high-water="0" priority="0" vertex="0" i="204" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="42" v="61">GNU auto-build to create a Makefile.
#                                                                 
# DESCRIPTION:
#
###################################################################

if IMYODBC

bin_PROGRAMS = imyodbc
imyodbc_SOURCES = imyodbc.c

imyodbc_LDADD=@LIBS@ @</pre>
      <content type="TEXT" name="snippet" u="35" v="87" />
      <match u="62" v="62">ODBC_</match>
      <post u="63" v="82">DM_LIB@ 

# LDFLAGS=@EXTRA_LDFLAGS@

endif

###################################################################
# 
# More files to include in source distro. 
#
###################################################################

EXTRA_DIST = \
	imyodbc.h \
	imyodbc.pro \
	Makefile.</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... imyodbc
imyodbc_SOURCES = imyodbc.c

imyodbc_LDADD=@LIBS@ @ODBC_DM_LIB@ 

# LDFLAGS=@EXTRA_LDFLAGS@

endif

###################################################################
# 
# More files  ... </content>
</document>
<retrieval-performance n-tau="406" n-rho="200" n-uat="0" n-ohr="0"
  occr-reads="619813" block-reads="1483" seeks="12" cache-hits="1483"
  cache-misses="0"
>
  <query-performance what="doc-text" n-tau="198" n-rho="0" n-uat="0" n-ohr="0"
    occr-reads="4616" block-reads="8" seeks="4" cache-hits="8" cache-misses="0"
  >
    <query-performance what="not-within" n-tau="198" n-rho="0" n-uat="0"
      n-ohr="0" occr-reads="4616" block-reads="8" seeks="4" cache-hits="8"
      cache-misses="0"
    >
      <query-performance what="0:doc#" n-blocks="1" n-tau="198" n-rho="0"
        n-uat="0" n-ohr="0" occr-reads="4616" block-reads="4" seeks="4" cache-hits="4"
        cache-misses="0"
      />
      <query-performance what="0:del#" n-blocks="1" n-tau="0" n-rho="8" n-uat="0"
        n-ohr="0" occr-reads="0" block-reads="4" seeks="0" cache-hits="4"
        cache-misses="0"
      />
    </query-performance>
  </query-performance>
  <query-performance what="del" n-tau="0" n-rho="0" n-uat="0" n-ohr="0"
    occr-reads="0" block-reads="0" seeks="0" cache-hits="0" cache-misses="0"
  >
    <query-performance what="0:del#" n-blocks="1" n-tau="0" n-rho="0" n-uat="0"
      n-ohr="0" occr-reads="0" block-reads="0" seeks="0" cache-hits="0"
      cache-misses="0"
    />
  </query-performance>
  <query-performance what="text" n-tau="0" n-rho="0" n-uat="0" n-ohr="0"
    occr-reads="574193" block-reads="1455" seeks="0" cache-hits="1455"
    cache-misses="0"
  >
    <query-performance what="3:" n-blocks="701" n-tau="0" n-rho="0" n-uat="0"
      n-ohr="0" occr-reads="574193" block-reads="1455" seeks="0" cache-hits="1455"
      cache-misses="0"
    />
  </query-performance>
  <query-performance what="output" n-tau="8" n-rho="0" n-uat="0" n-ohr="0"
    occr-reads="0" block-reads="4" seeks="0" cache-hits="4" cache-misses="0"
  >
    <query-performance what="not-within" n-tau="8" n-rho="0" n-uat="0" n-ohr="0"
      occr-reads="0" block-reads="4" seeks="0" cache-hits="4" cache-misses="0"
    >
      <query-performance what="0:title" n-blocks="1" n-tau="8" n-rho="0"
        n-uat="0" n-ohr="0" occr-reads="0" block-reads="4" seeks="0" cache-hits="4"
        cache-misses="0"
      />
      <query-performance what="0:del#" n-blocks="1" n-tau="0" n-rho="0" n-uat="0"
        n-ohr="0" occr-reads="0" block-reads="0" seeks="0" cache-hits="0"
        cache-misses="0"
      />
    </query-performance>
  </query-performance>
  <query-performance what="summarize" n-tau="100" n-rho="100" n-uat="0" n-ohr="0"
    occr-reads="4537" block-reads="8" seeks="4" cache-hits="8" cache-misses="0"
  >
    <query-performance what="not-within" n-tau="100" n-rho="100" n-uat="0"
      n-ohr="0" occr-reads="4537" block-reads="8" seeks="4" cache-hits="8"
      cache-misses="0"
    >
      <query-performance what="0:snippet" n-blocks="1" n-tau="100" n-rho="100"
        n-uat="0" n-ohr="0" occr-reads="4537" block-reads="4" seeks="4" cache-hits="4"
        cache-misses="0"
      />
      <query-performance what="0:del#" n-blocks="1" n-tau="0" n-rho="8" n-uat="0"
        n-ohr="0" occr-reads="0" block-reads="4" seeks="0" cache-hits="4"
        cache-misses="0"
      />
    </query-performance>
  </query-performance>
  <query-performance what="def-search" />
  <query-performance what="content" n-tau="0" n-rho="0" n-uat="0" n-ohr="0"
    occr-reads="0" block-reads="0" seeks="0" cache-hits="0" cache-misses="0"
  >
    <query-performance what="document" n-tau="0" n-rho="0" n-uat="0" n-ohr="0"
      occr-reads="0" block-reads="0" seeks="0" cache-hits="0" cache-misses="0"
    />
  </query-performance>
  <query-performance what="really-content" n-tau="100" n-rho="100" n-uat="0"
    n-ohr="0" occr-reads="36467" block-reads="8" seeks="4" cache-hits="8"
    cache-misses="0"
  >
    <query-performance what="not-within" n-tau="100" n-rho="100" n-uat="0"
      n-ohr="0" occr-reads="36467" block-reads="8" seeks="4" cache-hits="8"
      cache-misses="0"
    >
      <query-performance what="0:" n-blocks="1" n-tau="100" n-rho="100" n-uat="0"
        n-ohr="0" occr-reads="36467" block-reads="4" seeks="4" cache-hits="4"
        cache-misses="0"
      />
      <query-performance what="0:del#" n-blocks="1" n-tau="0" n-rho="8" n-uat="0"
        n-ohr="0" occr-reads="0" block-reads="4" seeks="0" cache-hits="4"
        cache-misses="0"
      />
    </query-performance>
  </query-performance>
</retrieval-performance>
<query-performance what="not-within" n-tau="1008" n-rho="0" n-uat="0" n-ohr="0"
  occr-reads="1009" block-reads="2" seeks="1" cache-hits="1" cache-misses="1"
>
  <query-performance what="1:odbc" n-blocks="1" n-tau="1008" n-rho="0" n-uat="0"
    n-ohr="0" occr-reads="1009" block-reads="1" seeks="1" cache-hits="0"
    cache-misses="1"
  />
  <query-performance what="0:del#" n-blocks="0" n-tau="0" n-rho="1" n-uat="0"
    n-ohr="0" occr-reads="0" block-reads="1" seeks="0" cache-hits="1"
    cache-misses="0"
  />
</query-performance>
</scope>
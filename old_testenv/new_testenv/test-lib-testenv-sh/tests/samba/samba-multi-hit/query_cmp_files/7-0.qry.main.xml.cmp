<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<scope>
<attribute name="vse-vse">vse-vse</attribute>
<attribute name="total-results" value="52" />
<attribute name="admin-url"
  value="http://testbed4.test.vivisimo.com/vivisimo/cgi-bin/admin"
/>
<attribute name="stem" value="depluralize" />
<attribute name="stem2" value="none" />
<attribute name="stoplist" value="none" />
<attribute name="search-ms" value="1" />
<attribute name="retrieval-ms" value="13" />
<attribute name="total-results-with-duplicates" value="52" />
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/configure"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/configure/"
  graph-id-high-water="0" priority="0" vertex="0" i="146" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="12278" v="12297"><![CDATA[ext &lt;&lt;_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext &lt;&lt;_ACEOF
/* end confdefs.h.  */

int
]]></pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="12298" v="12298">main ()
{

  ;
  </match>
      <post u="12299" v="12318">return 0;
}
_ACEOF
ac_clean_files_save=$ac_clean_files
ac_clean_files="$ac_clean_files a.out a.exe </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="13154" v="13173"><![CDATA[ext &lt;&lt;_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext &lt;&lt;_ACEOF
/* end confdefs.h.  */

int
]]></pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="13174" v="13174">main ()
{

  ;
  </match>
      <post u="13175" v="13194"><![CDATA[return 0;
}
_ACEOF
rm -f conftest.o conftest.obj
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&amp;5
  (eval $ac_]]></post>
    </solution>
    <solution rank="2" score="1">
      <pre u="13389" v="13408"><![CDATA[ext &lt;&lt;_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext &lt;&lt;_ACEOF
/* end confdefs.h.  */

int
]]></pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="13409" v="13409">main ()
{
#</match>
      <post u="13410" v="13429">ifndef __GNUC__
       choke me
#endif

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="13657" v="13676"><![CDATA[ext &lt;&lt;_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext &lt;&lt;_ACEOF
/* end confdefs.h.  */

int
]]></pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="13677" v="13677">main ()
{

  ;
  </match>
      <post u="13678" v="13697"><![CDATA[return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&amp;5
  (eval $ac_compile) ]]></post>
    </solution>
    <solution rank="4" score="1">
      <pre u="14160" v="14179">f) (double a);};
int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
int argc;
char **argv;
int
</pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="14180" v="14180">main ()
{
</match>
      <post u="14181" v="14200">return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
  ;
  return 0;
}
_ACEOF
# Don't try gcc -</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="14698" v="14717"><![CDATA[cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext &lt;&lt;_ACEOF
/* end confdefs.h.  */
$ac_declaration
#include &lt;stdlib.h>
int
]]></pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="14718" v="14718">main ()
{
</match>
      <post u="14719" v="14738"><![CDATA[exit (42);
  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&amp;5
  (eval $]]></post>
    </solution>
    <solution rank="6" score="1">
      <pre u="14871" v="14890"><![CDATA[confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext &lt;&lt;_ACEOF
/* end confdefs.h.  */
$ac_declaration
int
]]></pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="14891" v="14891">main ()
{
</match>
      <post u="14892" v="14911"><![CDATA[exit (42);
  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&amp;5
  (eval $]]></post>
    </solution>
    <solution rank="7" score="1">
      <pre u="20556" v="20575"><![CDATA[ext &lt;&lt;_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext &lt;&lt;_ACEOF
/* end confdefs.h.  */

int
]]></pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="20576" v="20576">main ()
{

  ;
  </match>
      <post u="20577" v="20596"><![CDATA[return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&amp;5
  (]]></post>
    </solution>
    <solution rank="8" score="1">
      <pre u="20889" v="20908"><![CDATA[conftest.$ac_ext &lt;&lt;_ACEOF
/* end confdefs.h.  */
#include &lt;stdlib.h>
#include &lt;stdarg.h>
#include &lt;string.h>
#include &lt;float.h>

int
]]></pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="20909" v="20909">main ()
{

  ;
  </match>
      <post u="20910" v="20929"><![CDATA[return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&amp;5
  (eval $ac_compile) ]]></post>
    </solution>
    <solution rank="9" score="1">
      <pre u="21295" v="21314"><![CDATA[c) &lt;= 'z'))
# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))
#endif

#define XOR(e, f) (((e) &amp;&amp; !(f)) || (!(e) &amp;&amp; (f)))
int
]]></pre>
      <content type="TEXT" name="snippet" u="33" v="121090" />
      <match u="21315" v="21315">main ()
{
  </match>
      <post u="21316" v="21335"><![CDATA[int i;
  for (i = 0; i &lt; 256; i++)
    if (XOR (islower (i), ISLOWER (i))
	|| toupper (i) != TOUPPER (i))
      exit(2);
  ]]></post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... conftest.$ac_ext &lt;&lt;_ACEOF
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
ac_clean_files_save=$ac_ ... conftest.$ac_ext &lt;&lt;_ACEOF
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.o conftest. ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/ltconfig"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/ltconfig/"
  graph-id-high-water="0" priority="0" vertex="0" i="158" la-score="0.1"
  vse-base-score="1.99805"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="2869" v="2888"><![CDATA[exeext'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&amp;6
else
  ac_cv_exeext="no"
  $rm conftest*
  echo ']]></pre>
      <content type="TEXT" name="snippet" u="33" v="15508" />
      <match u="2889" v="2889">main () { </match>
      <post u="2890" v="2909"><![CDATA[return 0; }' > conftest.c
  echo "$progname:629: checking for executable suffix" >&amp; 5
  if { (eval echo $progname:630: \"$ac_link\") 1>&amp;]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="4387" v="4406"><![CDATA[fi

echo $ac_n "checking if $compiler static flag $link_static_flag works... $ac_c" 1>&amp;6
$rm conftest*
echo ']]></pre>
      <content type="TEXT" name="snippet" u="33" v="15508" />
      <match u="4407" v="4407">main(){</match>
      <post u="4408" v="4427">return(0);}' > conftest.c
save_LDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $link_static_flag"
echo "$progname:958: checking if $compiler static flag $</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="8478" v="8497"><![CDATA[cat > conftest.c &lt;&lt;EOF
#ifdef __cplusplus
extern "C" {
#endif
char nm_test_var;
void nm_test_func(){}
#ifdef __cplusplus
}
#endif
]]></pre>
      <content type="TEXT" name="snippet" u="33" v="15508" />
      <match u="8498" v="8498">main(){</match>
      <post u="8499" v="8518"><![CDATA[nm_test_var='a';nm_test_func();return(0);}
EOF

  echo "$progname:1653: checking if global_symbol_pipe works" >&amp;5
  ]]></post>
    </solution>
    <solution rank="3" score="1">
      <pre u="11491" v="11510">of a gcc2
    builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char dlopen();

int </pre>
      <content type="TEXT" name="snippet" u="33" v="15508" />
      <match u="11511" v="11511">main() {
</match>
      <post u="11512" v="11531"><![CDATA[dlopen()
; return 0; }
EOF
if { (eval echo $progname:2269: \"$ac_link\") 1>&amp;5; (eval $ac_link) 2>&amp;5; } &amp;&amp; test -s ]]></post>
    </solution>
    <solution rank="4" score="1">
      <pre u="11697" v="11716">of a gcc2
    builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char dlopen();

int </pre>
      <content type="TEXT" name="snippet" u="33" v="15508" />
      <match u="11717" v="11717">main() {

/* </match>
      <post u="11718" v="11737">The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="11936" v="11955">a gcc2
    builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char dld_link();

int </pre>
      <content type="TEXT" name="snippet" u="33" v="15508" />
      <match u="11956" v="11956">main() {
</match>
      <post u="11957" v="11976"><![CDATA[dld_link()
; return 0; }
EOF
if { (eval echo $progname:2356: \"$ac_link\") 1>&amp;5; (eval $ac_link) 2>&amp;5; } &amp;&amp; test -]]></post>
    </solution>
    <solution rank="6" score="1">
      <pre u="12149" v="12168">a gcc2
    builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char shl_load();

int </pre>
      <content type="TEXT" name="snippet" u="33" v="15508" />
      <match u="12169" v="12169">main() {

/* </match>
      <post u="12170" v="12189">The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually </post>
    </solution>
    <solution rank="7" score="1">
      <pre u="12398" v="12417">a gcc2
    builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char shl_load();

int </pre>
      <content type="TEXT" name="snippet" u="33" v="15508" />
      <match u="12418" v="12418">main() {
</match>
      <post u="12419" v="12438"><![CDATA[shl_load()
; return 0; }
EOF
if { (eval echo $progname:2445: \"$ac_link\") 1>&amp;5; (eval $ac_link) 2>&amp;5; } &amp;&amp; test -]]></post>
    </solution>
    <solution rank="8" score="1">
      <pre u="12916" v="12935">OR_NOW	DL_NOW
#    else
#     define LTDL_LAZY_OR_NOW	0
#    endif
#   endif
#  endif
# endif
#endif

fnord() { int i=42;}
</pre>
      <content type="TEXT" name="snippet" u="33" v="15508" />
      <match u="12936" v="12936">main() { </match>
      <post u="12937" v="12956">void *self, *ptr1, *ptr2; self=dlopen(0,LTDL_GLOBAL|LTDL_LAZY_OR_NOW);
    if(self) { ptr1=dlsym(self,"fnord"); ptr2=</post>
    </solution>
    <solution rank="9" score="1">
      <pre u="13217" v="13236">OR_NOW	DL_NOW
#    else
#     define LTDL_LAZY_OR_NOW	0
#    endif
#   endif
#  endif
# endif
#endif

fnord() { int i=42;}
</pre>
      <content type="TEXT" name="snippet" u="33" v="15508" />
      <match u="13237" v="13237">main() { </match>
      <post u="13238" v="13257">void *self, *ptr1, *ptr2; self=dlopen(0,LTDL_GLOBAL|LTDL_LAZY_OR_NOW);
    if(self) { ptr1=dlsym(self,"fnord"); ptr2=</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... else
  ac_cv_exeext="no"
  $rm conftest*
  echo 'main () { return 0; }' > conftest.c
  echo "$progname:629: checking  ... works... $ac_c" 1>&amp;6
$rm conftest*
echo 'main(){return(0);}' > conftest.c
save_LDFLAGS="$LDFLAGS"
LDFLAGS="$ ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/aclocal.m4"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/aclocal.m4/"
  graph-id-high-water="0" priority="0" vertex="0" i="64" la-score="0.1"
  vse-base-score="1.99219"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="3560" v="3579">0
#        endif
#      endif
#    endif
#  endif
#endif

#ifdef __cplusplus
extern "C" void exit (int);
#endif

void fnord() { int i=42;}
int </pre>
      <content type="TEXT" name="snippet" u="34" v="37412" />
      <match u="3580" v="3580">main ()
{
  </match>
      <post u="3581" v="3600">void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);
  int status = $lt_dlunknown;

  if (self)
    {
      if (dlsym (self,"fnord"))       </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="11769" v="11788">code="int some_variable = 0;\n"

# Code to be used in simple link tests
lt_simple_link_test_code='int </pre>
      <content type="TEXT" name="snippet" u="34" v="37412" />
      <match u="11789" v="11789">main(){</match>
      <post u="11790" v="11809">return(0);}\n'

_LT_AC_SYS_COMPILER

#
# Check for any special shared library compilation flags.
#
_LT_AC_TAGVAR(lt_prog_</post>
    </solution>
    <solution rank="2" score="1">
      <pre u="12752" v="12771">code="int some_variable = 0;\n"

# Code to be used in simple link tests
lt_simple_link_test_code='int </pre>
      <content type="TEXT" name="snippet" u="34" v="37412" />
      <match u="12772" v="12772">main(</match>
      <post u="12773" v="12792">int, char *[]) { return(0); }\n'

# ltmain only uses $CC for tagged configurations so make sure $CC is set.
_LT_AC_</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="19658" v="19677">n"

# Code to be used in simple link tests
lt_simple_link_test_code='public class conftest { public static void </pre>
      <content type="TEXT" name="snippet" u="34" v="37412" />
      <match u="19678" v="19678">main(</match>
      <post u="19679" v="19698">String[] argv) {}; }\n'

# ltmain only uses $CC for tagged configurations so make sure $CC is set.
_LT_AC_SYS_COMPILER

# </post>
    </solution>
    <solution rank="4" score="1">
      <pre u="23207" v="23226"><![CDATA[ac_ext &lt;&lt;EOF
#ifdef __cplusplus
extern "C" {
#endif
char nm_test_var;
void nm_test_func(){}
#ifdef __cplusplus
}
#endif
int ]]></pre>
      <content type="TEXT" name="snippet" u="34" v="37412" />
      <match u="23227" v="23227">main(){</match>
      <post u="23228" v="23247">nm_test_var='a';nm_test_func();return(0);}
EOF

  if AC_TRY_EVAL(ac_compile); then
    # Now try to </post>
    </solution>
    <solution rank="5" score="1">
      <pre u="23332" v="23351"><![CDATA[extern "C" {
#endif

EOF
	  # Now generate the symbol file.
	  eval "$lt_cv_sys_global_symbol_to_cdecl"' &lt; "$nlist" | grep -v ]]></pre>
      <content type="TEXT" name="snippet" u="34" v="37412" />
      <match u="23352" v="23352">main >> </match>
      <post u="23353" v="23372"><![CDATA[conftest.$ac_ext'

	  cat &lt;&lt;EOF >> conftest.$ac_ext
#if defined (__STDC__) &amp;&amp; __STDC__
# define lt_ptr_t void *
#else
# define lt_]]></post>
    </solution>
    <solution rank="6" score="1">
      <pre u="23391" v="23410"><![CDATA[lt_ptr_t address;
}
lt_preloaded_symbols[[]] =
{
EOF
	  $SED "s/^$symcode$symcode* \(.*\) \(.*\)$/  {\"\2\", (lt_ptr_t) \&amp;\2},/" &lt; "$nlist" | grep -v ]]></pre>
      <content type="TEXT" name="snippet" u="34" v="37412" />
      <match u="23411" v="23411">main >> </match>
      <post u="23412" v="23431"><![CDATA[conftest.$ac_ext
	  cat &lt;&lt;\EOF >> conftest.$ac_ext
  {0, (lt_ptr_t) 0}
};

#ifdef __cplusplus
}
#endif
EOF
	  # Now try linking ]]></post>
    </solution>
    <solution rank="7" score="1">
      <pre u="23994" v="24013">cc_basename in
	cxch68)
	  # Green Hills C++ Compiler
	  # _LT_AC_TAGVAR(lt_prog_compiler_static, $1)="--no_auto_instantiation -u __</pre>
      <content type="TEXT" name="snippet" u="34" v="37412" />
      <match u="24014" v="24014">main -</match>
      <post u="24015" v="24034">u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... int);
#endif

void fnord() { int i=42;}
int main ()
{
  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_ ... link tests
lt_simple_link_test_code='int main(){return(0);}\n'

_LT_AC_SYS_COMPILER

#
# Check  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/config.guess"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/config.guess/"
  graph-id-high-water="0" priority="0" vertex="0" i="154" la-score="0.1"
  vse-base-score="1.96875"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="2211" v="2230"><![CDATA[RISCos)
	eval $set_cc_for_build
	sed 's/^	//' &lt;&lt; EOF >$dummy.c
#ifdef __cplusplus
#include &lt;stdio.h>  /* for printf() prototype */
	int ]]></pre>
      <content type="TEXT" name="snippet" u="34" v="6485" />
      <match u="2231" v="2231">main (</match>
      <post u="2232" v="2251"><![CDATA[int argc, char *argv[]) {
#else
	int main (argc, argv) int argc; char *argv[]; {
#endif
	#if defined (host_mips) &amp;&amp; defined (MIPSEB)
	#]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="2218" v="2237"><![CDATA[s/^	//' &lt;&lt; EOF >$dummy.c
#ifdef __cplusplus
#include &lt;stdio.h>  /* for printf() prototype */
	int main (int argc, char *argv[]) {
#else
	int ]]></pre>
      <content type="TEXT" name="snippet" u="34" v="6485" />
      <match u="2238" v="2238">main (</match>
      <post u="2239" v="2258"><![CDATA[argc, argv) int argc; char *argv[]; {
#endif
	#if defined (host_mips) &amp;&amp; defined (MIPSEB)
	#if defined (SYSTYPE_SYSV)
	  printf ("mips-mips-]]></post>
    </solution>
    <solution rank="2" score="1">
      <pre u="2611" v="2630"><![CDATA[h >/dev/null 2>&amp;1; then
		eval $set_cc_for_build
		sed 's/^		//' &lt;&lt; EOF >$dummy.c
		#include &lt;sys/systemcfg.h>

		]]></pre>
      <content type="TEXT" name="snippet" u="34" v="6485" />
      <match u="2631" v="2631">main()
			{
			</match>
      <post u="2632" v="2651">if (!__power_pc())
				exit(1);
			puts("powerpc-ibm-aix3.2.5");
			exit(0);
			}
EOF
		$CC_FOR_BUILD -o $dummy $dummy.</post>
    </solution>
    <solution rank="3" score="1">
      <pre u="2969" v="2988"><![CDATA[eval $set_cc_for_build
		    sed 's/^              //' &lt;&lt; EOF >$dummy.c

              #define _HPUX_SOURCE
              #include &lt;stdlib.h>
              #include &lt;unistd.h>

              int ]]></pre>
      <content type="TEXT" name="snippet" u="34" v="6485" />
      <match u="2989" v="2989">main ()
              {
              #</match>
      <post u="2990" v="3009">if defined(_SC_KERNEL_BITS)
                  long bits = sysconf(_SC_KERNEL_BITS);
              #endif
                  long cpu  = sysconf (_SC_CPU_VERSION);

                  switch (cpu)
              	{
              	</post>
    </solution>
    <solution rank="4" score="1">
      <pre u="3172" v="3191"><![CDATA[REV}
	exit 0 ;;
    3050*:HI-UX:*:*)
	eval $set_cc_for_build
	sed 's/^	//' &lt;&lt; EOF >$dummy.c
	#include &lt;unistd.h>
	int
	]]></pre>
      <content type="TEXT" name="snippet" u="34" v="6485" />
      <match u="3192" v="3192">main ()
	{
	  </match>
      <post u="3193" v="3212">long cpu = sysconf (_SC_CPU_VERSION);
	  /* The order matters, because CPU_IS_HP_MC68K erroneously returns
	     true for CPU_PA_</post>
    </solution>
    <solution rank="5" score="1">
      <pre u="5798" v="5817"><![CDATA[eval $set_cc_for_build
cat >$dummy.c &lt;&lt;EOF
#ifdef _SEQUENT_
# include &lt;sys/types.h>
# include &lt;sys/utsname.h>
#endif
]]></pre>
      <content type="TEXT" name="snippet" u="34" v="6485" />
      <match u="5818" v="5818">main ()
{
#</match>
      <post u="5819" v="5838">if defined (sony)
#if defined (MIPSEB)
  /* BFD wants "bsd" instead of "newsos".  Perhaps BFD should be changed,
     I don't </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... cplusplus
#include &lt;stdio.h>  /* for printf() prototype */
	int main (int argc, char *argv[]) {
#else
	int main (argc, argv) int argc; char *argv[]; {
#endif
	#if  ... s/^		//' &lt;&lt; EOF >$dummy.c
		#include &lt;sys/systemcfg.h>

		main()
			{
			if (!__power_pc())
				exit(1);
			puts("powerpc-ibm- ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_position.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_position.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="5" la-score="0.1"
  vse-base-score="1.75"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="175" v="194">MySQL AB')",SQL_NTS);
    mystmt(hstmt,rc);

    rc = SQLExecDirect(hstmt,"INSERT INTO t_chunk VALUES(2,'monty','Michael Monty Widenius - </pre>
      <content type="TEXT" name="snippet" u="36" v="404" />
      <match u="195" v="195">main </match>
      <post u="196" v="215">MySQL developer')",SQL_NTS);
    mystmt(hstmt,rc);

    rc = SQLExecDirect(hstmt,"INSERT INTO t_chunk VALUES(3,'mysql','MySQL AB- Speed, </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="275" v="294">rc);
    myprintf("\ntxt:%s(%d)",txt,len);
    
    SQLFreeStmt(hstmt,SQL_RESET_PARAMS);
    SQLFreeStmt(hstmt,SQL_UNBIND);    
    SQLFreeStmt(hstmt,SQL_CLOSE);
}

/**
</pre>
      <content type="TEXT" name="snippet" u="36" v="404" />
      <match u="295" v="295">MAIN </match>
      <post u="296" v="315">ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="278" v="297">s(%d)",txt,len);
    
    SQLFreeStmt(hstmt,SQL_RESET_PARAMS);
    SQLFreeStmt(hstmt,SQL_UNBIND);    
    SQLFreeStmt(hstmt,SQL_CLOSE);
}

/**
MAIN ROUTINE...
*/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="404" />
      <match u="298" v="298">main(</match>
      <post u="299" v="318">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... t_chunk VALUES(2,'monty','Michael Monty Widenius - main MySQL developer')",SQL_NTS);
    mystmt(hstmt,rc);

    rc =  ... SQLFreeStmt(hstmt,SQL_UNBIND);    
    SQLFreeStmt(hstmt,SQL_CLOSE);
}

/**
MAIN ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV    ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_error.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_error.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="16" la-score="0.1"
  vse-base-score="1.75"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="688" v="707">SQLFreeHandle(SQL_HANDLE_DBC,hdbc);
    mycon(hdbc,rc);

    rc = SQLFreeHandle(SQL_HANDLE_ENV,henv);
    myenv(henv,rc);
}
/*---------------------------------------------------------------------
@ type       : MyODBC3 test </pre>
      <content type="TEXT" name="snippet" u="36" v="817" />
      <match u="708" v="708">main </match>
      <post u="709" v="728">function
@ name       : main
@ purpose    : to control all tests
@ limitation : none
*---------------------------------------------------------------------*/
int main(int argc, char *argv[])
{  
  SQLINTEGER narg;      
  
    /*
     *  show the </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="691" v="710">DBC,hdbc);
    mycon(hdbc,rc);

    rc = SQLFreeHandle(SQL_HANDLE_ENV,henv);
    myenv(henv,rc);
}
/*---------------------------------------------------------------------
@ type       : MyODBC3 test main function
@ name       : </pre>
      <content type="TEXT" name="snippet" u="36" v="817" />
      <match u="711" v="711">main
@ </match>
      <post u="712" v="731">purpose    : to control all tests
@ limitation : none
*---------------------------------------------------------------------*/
int main(int argc, char *argv[])
{  
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="700" v="719">ENV,henv);
    myenv(henv,rc);
}
/*---------------------------------------------------------------------
@ type       : MyODBC3 test main function
@ name       : main
@ purpose    : to control all tests
@ limitation : none
*---------------------------------------------------------------------*/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="817" />
      <match u="720" v="720">main(</match>
      <post u="721" v="740">int argc, char *argv[])
{  
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when the user asks for this
    */    
      myprintf("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
      myprintf("usage: </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... ENV,henv);
    myenv(henv,rc);
}
/*---------------------------------------------------------------------
@ type       : MyODBC3 test main function
@ name       : main
@ purpose    : to control all tests
@ limitation : none
*---------------------------------------------------------------------*/
int main(int argc, char *argv[])
{  
  SQLINTEGER narg;      
  
    /*
     *  show the  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_unixodbc.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_unixodbc.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="26" la-score="0.1"
  vse-base-score="1.75"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="534" v="553">SQLDisconnect(hdbc);
      mycon(hdbc,rc);
    }

    rc = SQLFreeConnect(hdbc);
    mycon(hdbc,rc);
    
    rc = SQLFreeEnv(henv);
    myenv(henv,rc);
}
/*---------------------------------------------------------------------
@ type       : MyODBC3 test </pre>
      <content type="TEXT" name="snippet" u="36" v="662" />
      <match u="554" v="554">main </match>
      <post u="555" v="574">function
@ name       : main
@ purpose    : to control all tests
@ limitation : none
*---------------------------------------------------------------------*/
int main(int argc, char *argv[])
{  
  SQLINTEGER narg;      
  
    /*
     *  show the </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="537" v="556">hdbc,rc);
    }

    rc = SQLFreeConnect(hdbc);
    mycon(hdbc,rc);
    
    rc = SQLFreeEnv(henv);
    myenv(henv,rc);
}
/*---------------------------------------------------------------------
@ type       : MyODBC3 test main function
@ name       : </pre>
      <content type="TEXT" name="snippet" u="36" v="662" />
      <match u="557" v="557">main
@ </match>
      <post u="558" v="577">purpose    : to control all tests
@ limitation : none
*---------------------------------------------------------------------*/
int main(int argc, char *argv[])
{  
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when </post>
    </solution>
    <solution rank="2" score="1">
      <pre u="546" v="565">SQLFreeEnv(henv);
    myenv(henv,rc);
}
/*---------------------------------------------------------------------
@ type       : MyODBC3 test main function
@ name       : main
@ purpose    : to control all tests
@ limitation : none
*---------------------------------------------------------------------*/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="662" />
      <match u="566" v="566">main(</match>
      <post u="567" v="586">int argc, char *argv[])
{  
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when the user asks for this
    */    
      myprintf("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
      myprintf("usage: </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... SQLFreeEnv(henv);
    myenv(henv,rc);
}
/*---------------------------------------------------------------------
@ type       : MyODBC3 test main function
@ name       : main
@ purpose    : to control all tests
@ limitation : none
*---------------------------------------------------------------------*/
int main(int argc, char *argv[])
{  
  SQLINTEGER narg;      
  
    /*
     *  show the  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_param.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_param.c/"
  graph-id-high-water="0" priority="0" vertex="0" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="868" v="887">rc);

    rc = SQLEndTran(SQL_HANDLE_DBC, hdbc, SQL_COMMIT); 
    mycon(hdbc,rc);

    rc = SQLFreeStmt(hstmt,SQL_CLOSE);
    mystmt(hstmt,rc);  
}

/********************************************************
* </pre>
      <content type="TEXT" name="snippet" u="36" v="1016" />
      <match u="888" v="888">main </match>
      <post u="889" v="908">routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
  SQLHSTMT   hstmt;
  SQLINTEGER narg;
  
    /*
     *  show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="871" v="890">SQL_HANDLE_DBC, hdbc, SQL_COMMIT); 
    mycon(hdbc,rc);

    rc = SQLFreeStmt(hstmt,SQL_CLOSE);
    mystmt(hstmt,rc);  
}

/********************************************************
* main routine                                          *
*********************************************************/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="1016" />
      <match u="891" v="891">main(</match>
      <post u="892" v="911">int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
  SQLHSTMT   hstmt;
  SQLINTEGER narg;
  
    /*
     *  show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... rc = SQLFreeStmt(hstmt,SQL_CLOSE);
    mystmt(hstmt,rc);  
}

/********************************************************
* main routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_catalog.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_catalog.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="1" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="2756" v="2775">NULL,SQL_NTS) ;
    mystmt(hstmt,rc);

		my_print_non_format_result(hstmt);
    rc = SQLFreeStmt(hstmt, SQL_CLOSE);
    mystmt(hstmt,rc);
}

/**
</pre>
      <content type="TEXT" name="snippet" u="36" v="2947" />
      <match u="2776" v="2776">MAIN </match>
      <post u="2777" v="2796">ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;
  SQLCHAR    conn[255];


    /*
     *  show the </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="2759" v="2778">mystmt(hstmt,rc);

		my_print_non_format_result(hstmt);
    rc = SQLFreeStmt(hstmt, SQL_CLOSE);
    mystmt(hstmt,rc);
}

/**
MAIN ROUTINE...
*/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="2947" />
      <match u="2779" v="2779">main(</match>
      <post u="2780" v="2799">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;
  SQLCHAR    conn[255];


    /*
     *  show the usage string when </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... rc = SQLFreeStmt(hstmt, SQL_CLOSE);
    mystmt(hstmt,rc);
}

/**
MAIN ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_cursor.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_cursor.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="3" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="965" v="984">rc);

    rc = SQLEndTran(SQL_HANDLE_DBC, hdbc, SQL_COMMIT); 
    mycon(hdbc,rc);

    rc = SQLFreeStmt(hstmt,SQL_CLOSE);
    mystmt(hstmt,rc);  
}

/********************************************************
* </pre>
      <content type="TEXT" name="snippet" u="36" v="1113" />
      <match u="985" v="985">main </match>
      <post u="986" v="1005">routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
  SQLHSTMT   hstmt;
  SQLINTEGER narg;
  
    /*
     *  show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="968" v="987">SQL_HANDLE_DBC, hdbc, SQL_COMMIT); 
    mycon(hdbc,rc);

    rc = SQLFreeStmt(hstmt,SQL_CLOSE);
    mystmt(hstmt,rc);  
}

/********************************************************
* main routine                                          *
*********************************************************/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="1113" />
      <match u="988" v="988">main(</match>
      <post u="989" v="1008">int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
  SQLHSTMT   hstmt;
  SQLINTEGER narg;
  
    /*
     *  show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... rc = SQLFreeStmt(hstmt,SQL_CLOSE);
    mystmt(hstmt,rc);  
}

/********************************************************
* main routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_scroll.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_scroll.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="4" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="5012" v="5031">hstmt,SQL_UNBIND);    
    SQLFreeStmt(hstmt,SQL_CLOSE); 

    rc = SQLSetStmtAttr(hstmt,SQL_ATTR_ROW_ARRAY_SIZE,(SQLPOINTER)1,0);
    mystmt(hstmt,rc);
}
/**
</pre>
      <content type="TEXT" name="snippet" u="36" v="5196" />
      <match u="5032" v="5032">MAIN </match>
      <post u="5033" v="5052">ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="5015" v="5034">SQLFreeStmt(hstmt,SQL_CLOSE); 

    rc = SQLSetStmtAttr(hstmt,SQL_ATTR_ROW_ARRAY_SIZE,(SQLPOINTER)1,0);
    mystmt(hstmt,rc);
}
/**
MAIN ROUTINE...
*/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="5196" />
      <match u="5035" v="5035">main(</match>
      <post u="5036" v="5055">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... ROW_ARRAY_SIZE,(SQLPOINTER)1,0);
    mystmt(hstmt,rc);
}
/**
MAIN ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest32.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest32.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="8" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="3532" v="3551">NTS);
    mystmt(hstmt,rc);
    
    rc = SQLExecDirect(hstmt,"drop table t_tabsp",SQL_NTS);
    mystmt(hstmt,rc);
    SQLFreeStmt(hstmt, SQL_CLOSE);
}

/*
  </pre>
      <content type="TEXT" name="snippet" u="35" v="3686" />
      <match u="3552" v="3552">Main </match>
      <post u="3553" v="3572">routine ..
*/

int main(int argc, char *argv[])
{
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when the user asks for this
    */    
      myprintf("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="3535" v="3554">rc);
    
    rc = SQLExecDirect(hstmt,"drop table t_tabsp",SQL_NTS);
    mystmt(hstmt,rc);
    SQLFreeStmt(hstmt, SQL_CLOSE);
}

/*
  Main routine ..
*/

int </pre>
      <content type="TEXT" name="snippet" u="35" v="3686" />
      <match u="3555" v="3555">main(</match>
      <post u="3556" v="3575">int argc, char *argv[])
{
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when the user asks for this
    */    
      myprintf("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
      myprintf("usage: </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... NTS);
    mystmt(hstmt,rc);
    SQLFreeStmt(hstmt, SQL_CLOSE);
}

/*
  Main routine ..
*/

int main(int argc, char *argv[])
{
  SQLINTEGER narg;      
  
    /*
     *  show the  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_dyn_cursor.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_dyn_cursor.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="9" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="4275" v="4294">my_dynamic_cursor",SQL_NTS);
    mystmt(hstmt,rc);  

    myassert(6 == myresult(hstmt));

    rc = SQLFreeStmt(hstmt,SQL_CLOSE);
    mystmt(hstmt,rc);
}


/**
</pre>
      <content type="TEXT" name="snippet" u="37" v="4478" />
      <match u="4295" v="4295">MAIN </match>
      <post u="4296" v="4315">ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;
  SQLCHAR   conn[255];

  
    /*
     *  show the </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="4278" v="4297">SQL_NTS);
    mystmt(hstmt,rc);  

    myassert(6 == myresult(hstmt));

    rc = SQLFreeStmt(hstmt,SQL_CLOSE);
    mystmt(hstmt,rc);
}


/**
MAIN ROUTINE...
*/
int </pre>
      <content type="TEXT" name="snippet" u="37" v="4478" />
      <match u="4298" v="4298">main(</match>
      <post u="4299" v="4318">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;
  SQLCHAR   conn[255];

  
    /*
     *  show the usage string when </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... rc = SQLFreeStmt(hstmt,SQL_CLOSE);
    mystmt(hstmt,rc);
}


/**
MAIN ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_relative.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_relative.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="12" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="3020" v="3039">hstmt,SQL_UNBIND);    
    SQLFreeStmt(hstmt,SQL_CLOSE);          

    rc = SQLSetStmtAttr(hstmt,SQL_ATTR_ROW_ARRAY_SIZE,(SQLPOINTER)1,0);
    mystmt(hstmt,rc);
}
/**
</pre>
      <content type="TEXT" name="snippet" u="36" v="3161" />
      <match u="3040" v="3040">MAIN </match>
      <post u="3041" v="3060">ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="3023" v="3042">SQLFreeStmt(hstmt,SQL_CLOSE);          

    rc = SQLSetStmtAttr(hstmt,SQL_ATTR_ROW_ARRAY_SIZE,(SQLPOINTER)1,0);
    mystmt(hstmt,rc);
}
/**
MAIN ROUTINE...
*/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="3161" />
      <match u="3043" v="3043">main(</match>
      <post u="3044" v="3063">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... ROW_ARRAY_SIZE,(SQLPOINTER)1,0);
    mystmt(hstmt,rc);
}
/**
MAIN ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_tran_ext.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_tran_ext.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="13" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="255" v="274">conn,255,
                          NULL,0,NULL,SQL_DRIVER_COMPLETE);
    mycon(hdbc,rc);

    rc = SQLDisconnect(hdbc);
    mycon(hdbc,rc);    

    printf(" success!!\n");
}
/********************************************************
* </pre>
      <content type="TEXT" name="snippet" u="37" v="402" />
      <match u="275" v="275">main </match>
      <post u="276" v="295">routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLINTEGER narg;      
  SQLRETURN  rc;
  
    /*
     *  show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="258" v="277">0,NULL,SQL_DRIVER_COMPLETE);
    mycon(hdbc,rc);

    rc = SQLDisconnect(hdbc);
    mycon(hdbc,rc);    

    printf(" success!!\n");
}
/********************************************************
* main routine                                          *
*********************************************************/
int </pre>
      <content type="TEXT" name="snippet" u="37" v="402" />
      <match u="278" v="278">main(</match>
      <post u="279" v="298">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLINTEGER narg;      
  SQLRETURN  rc;
  
    /*
     *  show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... SQLDisconnect(hdbc);
    mycon(hdbc,rc);    

    printf(" success!!\n");
}
/********************************************************
* main routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_col_length.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_col_length.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="14" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="732" v="751">SQLFreeStmt(hstmt,SQL_UNBIND);    
    SQLFreeStmt(hstmt,SQL_CLOSE);

    rc = SQLDisconnect(hdbc);
    mycon(hdbc,rc);

    rc = SQLFreeConnect(hdbc);
    mycon(hdbc,rc);
}
/**
</pre>
      <content type="TEXT" name="snippet" u="37" v="868" />
      <match u="752" v="752">MAIN </match>
      <post u="753" v="772">ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLINTEGER narg;
  SQLRETURN rc;      
  
  
    /*
     *  show the usage string when the user </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="735" v="754">UNBIND);    
    SQLFreeStmt(hstmt,SQL_CLOSE);

    rc = SQLDisconnect(hdbc);
    mycon(hdbc,rc);

    rc = SQLFreeConnect(hdbc);
    mycon(hdbc,rc);
}
/**
MAIN ROUTINE...
*/
int </pre>
      <content type="TEXT" name="snippet" u="37" v="868" />
      <match u="755" v="755">main(</match>
      <post u="756" v="775">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLINTEGER narg;
  SQLRETURN rc;      
  
  
    /*
     *  show the usage string when the user asks for this
    */    
      </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... hdbc,rc);

    rc = SQLFreeConnect(hdbc);
    mycon(hdbc,rc);
}
/**
MAIN ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLINTEGER narg;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_basics.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_basics.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="15" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="505" v="524">SQL_COMMIT); 
    mycon(hdbc,rc);

    /* free the statement cursor */
    rc = SQLFreeStmt(hstmt, SQL_CLOSE);
    mystmt(hstmt,rc);

    printf(" success!!\n");
}
/********************************************************
* </pre>
      <content type="TEXT" name="snippet" u="36" v="629" />
      <match u="525" v="525">main </match>
      <post u="526" v="545">routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
  SQLHSTMT   hstmt;
  SQLINTEGER narg;
  
    /*
     *  show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="508" v="527">hdbc,rc);

    /* free the statement cursor */
    rc = SQLFreeStmt(hstmt, SQL_CLOSE);
    mystmt(hstmt,rc);

    printf(" success!!\n");
}
/********************************************************
* main routine                                          *
*********************************************************/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="629" />
      <match u="528" v="528">main(</match>
      <post u="529" v="548">int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
  SQLHSTMT   hstmt;
  SQLINTEGER narg;
  
    /*
     *  show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... SQL_CLOSE);
    mystmt(hstmt,rc);

    printf(" success!!\n");
}
/********************************************************
* main routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_connect.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_connect.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="18" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="108" v="127">demonstrate how to connect to MySQL server   *
 *  using MySQL ODBC 3.51 driver                                           *
 *                                                                         *
 ***************************************************************************/

#include "mytest3.h" /* MyODBC 3.51 sample utility header */

/********************************************************
* </pre>
      <content type="TEXT" name="snippet" u="36" v="342" />
      <match u="128" v="128">main </match>
      <post u="129" v="148">routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
  SQLCHAR    server_name[30];  
  SQLRETURN  rc;
  SQLINTEGER narg;
  
    /*
     *  show </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="111" v="130">connect to MySQL server   *
 *  using MySQL ODBC 3.51 driver                                           *
 *                                                                         *
 ***************************************************************************/

#include "mytest3.h" /* MyODBC 3.51 sample utility header */

/********************************************************
* main routine                                          *
*********************************************************/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="342" />
      <match u="131" v="131">main(</match>
      <post u="132" v="151">int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
  SQLCHAR    server_name[30];  
  SQLRETURN  rc;
  SQLINTEGER narg;
  
    /*
     *  show the usage string </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... include "mytest3.h" /* MyODBC 3.51 sample utility header */

/********************************************************
* main routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_blob.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_blob.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="19" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="727" v="746">a'));
        }
        rc = SQLFreeStmt(hstmt, SQL_CLOSE);
        mystmt(hstmt,rc);
        rc = SQLTransact(NULL, hdbc, SQL_COMMIT);
        mycon(hdbc,rc);
        free(blobbuf);
}
/**
</pre>
      <content type="TEXT" name="snippet" u="36" v="868" />
      <match u="747" v="747">MAIN </match>
      <post u="748" v="767">ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
  SQLHSTMT   hstmt;
  SQLINTEGER narg;
  SQLUINTEGER blob_size = 1 * 1024L * </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="730" v="749">hstmt, SQL_CLOSE);
        mystmt(hstmt,rc);
        rc = SQLTransact(NULL, hdbc, SQL_COMMIT);
        mycon(hdbc,rc);
        free(blobbuf);
}
/**
MAIN ROUTINE...
*/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="868" />
      <match u="750" v="750">main(</match>
      <post u="751" v="770">int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
  SQLHSTMT   hstmt;
  SQLINTEGER narg;
  SQLUINTEGER blob_size = 1 * 1024L * 5L;  
  
    /*
     *  show the </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... hdbc, SQL_COMMIT);
        mycon(hdbc,rc);
        free(blobbuf);
}
/**
MAIN ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_bulk.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_bulk.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="20" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="650" v="669">SEC;
    fprintf(stdout, " (in '%lf' secs)\n", duration);

    SQLExecDirect(hstmt, "DROP TABLE my_bulk", SQL_NTS);
    SQLFreeStmt(hstmt, SQL_CLOSE);
}

/**
</pre>
      <content type="TEXT" name="snippet" u="36" v="806" />
      <match u="670" v="670">MAIN </match>
      <post u="671" v="690">ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="653" v="672">in '%lf' secs)\n", duration);

    SQLExecDirect(hstmt, "DROP TABLE my_bulk", SQL_NTS);
    SQLFreeStmt(hstmt, SQL_CLOSE);
}

/**
MAIN ROUTINE...
*/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="806" />
      <match u="673" v="673">main(</match>
      <post u="674" v="693">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... my_bulk", SQL_NTS);
    SQLFreeStmt(hstmt, SQL_CLOSE);
}

/**
MAIN ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_result.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_result.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="21" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="491" v="510">CLOSE);
     mystmt(hstmt,rc);

     rc = SQLExecDirect(hstmt, "DROP TABLE myodbc3_demo_result", SQL_NTS);
     mystmt(hstmt,rc);
     
     printf(" success!!\n");
}

/********************************************************
* </pre>
      <content type="TEXT" name="snippet" u="36" v="613" />
      <match u="511" v="511">main </match>
      <post u="512" v="531">routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
  SQLHSTMT   hstmt;
  SQLINTEGER narg;
  
    /*
     *  show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="494" v="513">rc);

     rc = SQLExecDirect(hstmt, "DROP TABLE myodbc3_demo_result", SQL_NTS);
     mystmt(hstmt,rc);
     
     printf(" success!!\n");
}

/********************************************************
* main routine                                          *
*********************************************************/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="613" />
      <match u="514" v="514">main(</match>
      <post u="515" v="534">int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
  SQLHSTMT   hstmt;
  SQLINTEGER narg;
  
    /*
     *  show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... SQL_NTS);
     mystmt(hstmt,rc);
     
     printf(" success!!\n");
}

/********************************************************
* main routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc; 
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_keys.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_keys.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="22" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="4980" v="4999">tables_test_db",SQL_NTS);
    SQLEndTran(SQL_HANDLE_DBC,hdbc1,SQL_COMMIT);

	  SQLFreeStmt(hstmt1,SQL_CLOSE);
    SQLDisconnect(hdbc1);
    SQLFreeConnect(hdbc1);
}

/**
</pre>
      <content type="TEXT" name="snippet" u="36" v="5153" />
      <match u="5000" v="5000">MAIN </match>
      <post u="5001" v="5020">ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;
  
    /*
     *  show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="4983" v="5002">SQL_NTS);
    SQLEndTran(SQL_HANDLE_DBC,hdbc1,SQL_COMMIT);

	  SQLFreeStmt(hstmt1,SQL_CLOSE);
    SQLDisconnect(hdbc1);
    SQLFreeConnect(hdbc1);
}

/**
MAIN ROUTINE...
*/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="5153" />
      <match u="5003" v="5003">main(</match>
      <post u="5004" v="5023">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;
  
    /*
     *  show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... SQLFreeStmt(hstmt1,SQL_CLOSE);
    SQLDisconnect(hdbc1);
    SQLFreeConnect(hdbc1);
}

/**
MAIN ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest2.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest2.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="23" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="15053" v="15072">hstmt);
  } 
  if( tno == 13 || tno == -1)   /* sql stuff */
  {     
    t_nativesql(hdbc,hstmt);
  } 
  if( tno == 14)   /* misc */
  { 
    t_contest(hdbc,hstmt);
  } 
}

/**
  </pre>
      <content type="TEXT" name="snippet" u="35" v="15292" />
      <match u="15073" v="15073">main </match>
      <post u="15074" v="15093">routine to control all tests
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg, tno = </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="15060" v="15079">stuff */
  {     
    t_nativesql(hdbc,hstmt);
  } 
  if( tno == 14)   /* misc */
  { 
    t_contest(hdbc,hstmt);
  } 
}

/**
  main routine to control all tests
*/
int </pre>
      <content type="TEXT" name="snippet" u="35" v="15292" />
      <match u="15080" v="15080">main(</match>
      <post u="15081" v="15100">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg, tno = -1;      
  
    /*
     *  show the usage string when the </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... if( tno == 14)   /* misc */
  { 
    t_contest(hdbc,hstmt);
  } 
}

/**
  main routine to control all tests
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest3.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest3.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="24" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="26713" v="26732">current_catalog(hdbc, hstmt);
  } 
  if( tno == 11 || tno == -1)   /* limit tests */
  {     
    t_max_select(hdbc,hstmt);
    t_max_con(hstmt);
  } 
}


/**
  </pre>
      <content type="TEXT" name="snippet" u="35" v="26975" />
      <match u="26733" v="26733">main </match>
      <post u="26734" v="26753">routine to control all tests
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg, tno = </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="26720" v="26739">tno == -1)   /* limit tests */
  {     
    t_max_select(hdbc,hstmt);
    t_max_con(hstmt);
  } 
}


/**
  main routine to control all tests
*/
int </pre>
      <content type="TEXT" name="snippet" u="35" v="26975" />
      <match u="26740" v="26740">main(</match>
      <post u="26741" v="26760">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg, tno = -1;      
  
    /*
     *  show the usage string when the </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... max_select(hdbc,hstmt);
    t_max_con(hstmt);
  } 
}


/**
  main routine to control all tests
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_use_result.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_use_result.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="27" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="649" v="668"><![CDATA[option);
    mydrvconnect(&amp;henv1,&amp;hdbc1,&amp;hstmt1,conn);
    my_assert(t_fetch_data(hdbc1,hstmt1) == my_max_rows); 
    mydisconnect(&amp;henv1,&amp;hdbc1,&amp;hstmt1);
}

/**
]]></pre>
      <content type="TEXT" name="snippet" u="37" v="792" />
      <match u="669" v="669">MAIN </match>
      <post u="670" v="689">ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when the user asks for this
    */    
      myprintf("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="652" v="671"><![CDATA[hdbc1,&amp;hstmt1,conn);
    my_assert(t_fetch_data(hdbc1,hstmt1) == my_max_rows); 
    mydisconnect(&amp;henv1,&amp;hdbc1,&amp;hstmt1);
}

/**
MAIN ROUTINE...
*/
int ]]></pre>
      <content type="TEXT" name="snippet" u="37" v="792" />
      <match u="672" v="672">main(</match>
      <post u="673" v="692">int argc, char *argv[])
{
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when the user asks for this
    */    
      myprintf("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
      myprintf("usage: </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... hstmt1) == my_max_rows); 
    mydisconnect(&amp;henv1,&amp;hdbc1,&amp;hstmt1);
}

/**
MAIN ROUTINE...
*/
int main(int argc, char *argv[])
{
  SQLINTEGER narg;      
  
    /*
     *  show the  ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_tran.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/my_tran.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="29" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="403" v="422">rc = SQLTransact(NULL,hdbc,SQL_ROLLBACK);
    mycon(hdbc,rc);

    rc = SQLFreeStmt(hstmt,SQL_CLOSE);
    mystmt(hstmt,rc);  

    printf(" success!!\n");
}

/********************************************************
* </pre>
      <content type="TEXT" name="snippet" u="36" v="525" />
      <match u="423" v="423">main </match>
      <post u="424" v="443">routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="406" v="425">hdbc,SQL_ROLLBACK);
    mycon(hdbc,rc);

    rc = SQLFreeStmt(hstmt,SQL_CLOSE);
    mystmt(hstmt,rc);  

    printf(" success!!\n");
}

/********************************************************
* main routine                                          *
*********************************************************/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="525" />
      <match u="426" v="426">main(</match>
      <post u="427" v="446">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;      
  
    /*
     *  show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... SQL_CLOSE);
    mystmt(hstmt,rc);  

    printf(" success!!\n");
}

/********************************************************
* main routine                                          *
*********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/mytest.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="30" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="14981" v="15000">hstmt);
  } 
  if( tno == 13 || tno == -1)   /* sql stuff */
  {     
    t_nativesql(hdbc,hstmt);
  } 
  if( tno == 14)   /* misc */
  { 
    t_contest(hdbc,hstmt);
  } 
}

/**
  </pre>
      <content type="TEXT" name="snippet" u="35" v="15225" />
      <match u="15001" v="15001">main </match>
      <post u="15002" v="15021">routine to control all tests
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg, tno = </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="14988" v="15007">stuff */
  {     
    t_nativesql(hdbc,hstmt);
  } 
  if( tno == 14)   /* misc */
  { 
    t_contest(hdbc,hstmt);
  } 
}

/**
  main routine to control all tests
*/
int </pre>
      <content type="TEXT" name="snippet" u="35" v="15225" />
      <match u="15008" v="15008">main(</match>
      <post u="15009" v="15028">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg, tno = -1;      
  
    /*
     *  show the usage string when the </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... if( tno == 14)   /* misc */
  { 
    t_contest(hdbc,hstmt);
  } 
}

/**
  main routine to control all tests
*/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/main.cpp.alternative"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/main.cpp.alternative/"
  graph-id-high-water="0" priority="0" vertex="0" i="57" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="8" v="23">smb://VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/</pre>
      <content name="url" action="none" u="7" v="26" />
      <match u="24" v="24">main.</match>
      <post u="25" v="26">cpp.alternative</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="273" v="292">library.
*/

/*!
    Default args (in case missing on command-line).
*/
char *pszDriver         = "MySQL ODBC 3.51 Driver";
char *pszAttributes     = "DSN=myodbc";

int </pre>
      <content type="TEXT" name="snippet" u="36" v="550" />
      <match u="293" v="293">main( </match>
      <post u="294" v="313">int argc, char **argv )
{
#ifdef WIN32
        HMODULE hModule = NULL;
#else
        void *hModule  = NULL;
#endif
        BOOL (*pFunc)( HWND, WORD, LPCSTR, LPCSTR );
        </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... ODBC 3.51 Driver";
char *pszAttributes     = "DSN=myodbc";

int main( int argc, char **argv )
{
#ifdef WIN32
        HMODULE hModule =  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/main.cpp"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/main.cpp/"
  graph-id-high-water="0" priority="0" vertex="0" i="59" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="8" v="23">smb://VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/</pre>
      <content name="url" action="none" u="7" v="25" />
      <match u="24" v="24">main.</match>
      <post u="25" v="25">cpp</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="197" v="216"><![CDATA[MYODBCSetupDataSourceDialog.h>

#include &lt;qapplication.h>
#include &lt;qstring.h>

/*!
    Default args (in case missing on command-line).
*/
char *pszDataSourceName = "myodbc";

int ]]></pre>
      <content type="TEXT" name="snippet" u="35" v="303" />
      <match u="217" v="217">main( </match>
      <post u="218" v="237">int argc, char **argv )
{
    QApplication                    app( argc, argv  );
    int                             nResult;
    MYODBCUTIL_DATASOURCE *         pDataSource = MYODBCUtilAllocDataSource( MYODBCUTIL_DATASOURCE_MODE_DSN_EDIT );
    MYODBCSetupDataSourceDialog *   </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... missing on command-line).
*/
char *pszDataSourceName = "myodbc";

int main( int argc, char **argv )
{
    QApplication                    app( argc, argv  );
     ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/Makefile.am"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/Makefile.am/"
  graph-id-high-water="0" priority="0" vertex="0" i="60" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="58" v="77">the myodbc 
#       GNU auto-build yet.
#
###################################################################

if QT

bin_MYODBCCONFIG = 

endif

###################################################################
#                                                                 #
# More files to include in source distro.                         #
#                                                                 #
###################################################################

EXTRA_DIST = \
	</pre>
      <content type="TEXT" name="snippet" u="35" v="89" />
      <match u="78" v="78">main.</match>
      <post u="79" v="89">cpp \
	main.cpp.alternative \
	MYODBCConfig.icns \
	MYODBCConfig.pro \
	MYODBCConfig.pro.alternative

</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="60" v="79">GNU auto-build yet.
#
###################################################################

if QT

bin_MYODBCCONFIG = 

endif

###################################################################
#                                                                 #
# More files to include in source distro.                         #
#                                                                 #
###################################################################

EXTRA_DIST = \
	main.cpp \
	</pre>
      <content type="TEXT" name="snippet" u="35" v="89" />
      <match u="80" v="80">main.</match>
      <post u="81" v="89">cpp.alternative \
	MYODBCConfig.icns \
	MYODBCConfig.pro \
	MYODBCConfig.pro.alternative

</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... files to include in source distro.                         #
#                                                                 #
###################################################################

EXTRA_DIST = \
	main.cpp \
	main.cpp.alternative \
	MYODBCConfig.icns \
	MYODBCConfig.pro \
	MYODBCConfig.pro. ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/Makefile.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/Makefile.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="61" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="785" v="804">includes = @x_includes@
x_libraries = @x_libraries@
@QT_TRUE@bin_MYODBCCONFIG = 

###################################################################
#                                                                 #
# More files to include in source distro.                         #
#                                                                 #
###################################################################
EXTRA_DIST = \
	</pre>
      <content type="TEXT" name="snippet" u="35" v="1407" />
      <match u="805" v="805">main.</match>
      <post u="806" v="825">cpp \
	main.cpp.alternative \
	MYODBCConfig.icns \
	MYODBCConfig.pro \
	MYODBCConfig.pro.alternative

all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="787" v="806">includes@
x_libraries = @x_libraries@
@QT_TRUE@bin_MYODBCCONFIG = 

###################################################################
#                                                                 #
# More files to include in source distro.                         #
#                                                                 #
###################################################################
EXTRA_DIST = \
	main.cpp \
	</pre>
      <content type="TEXT" name="snippet" u="35" v="1407" />
      <match u="807" v="807">main.</match>
      <post u="808" v="827">cpp.alternative \
	MYODBCConfig.icns \
	MYODBCConfig.pro \
	MYODBCConfig.pro.alternative

all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... files to include in source distro.                         #
#                                                                 #
###################################################################
EXTRA_DIST = \
	main.cpp \
	main.cpp.alternative \
	MYODBCConfig.icns \
	MYODBCConfig.pro \
	MYODBCConfig.pro. ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/MYODBCConfig.pro.alternative"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/MYODBCConfig.pro.alternative/"
  graph-id-high-water="0" priority="0" vertex="0" i="62" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="52" v="71">application.
#
#       The build here is done without using the setup code
#       directly (except for MYODBCSetup.h). In this case
#       the </pre>
      <content type="TEXT" name="snippet" u="36" v="274" />
      <match u="72" v="72">main.</match>
      <post u="73" v="92">cpp will explicitly find, load, and call
#       into a setup library.
#
# NOTE:
#       This is the preferred way to provide MYODBCConfig
#       </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="253" v="272">lz -framework OpenGL -framework AGL -lz
mac:RC_FILE             = MYODBCConfig.icns

# #########################################################
# FILES
# #########################################################

# HEADERS                 += \
#                         ../setup/MYODBCSetup.h \
# 			../setup/MYODBCSetupDataSourceDialog.h

SOURCES                 += \
                        </pre>
      <content type="TEXT" name="snippet" u="36" v="274" />
      <match u="273" v="273">main.</match>
      <post u="274" v="274">cpp


</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... except for MYODBCSetup.h). In this case
#       the main.cpp will explicitly find, load, and call
#       into  ... HEADERS                 += \
#                         ../setup/MYODBCSetup.h \
# 			../setup/MYODBCSetupDataSourceDialog.h

SOURCES                 += \
                        main.cpp


</content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_param.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_param.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="134" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="1082" v="1101">rc = SQLExecDirect(hstmt, (SQLCHAR*) "SELECT * FROM my_demo_param",
		     SQL_NTS);
  mystmt(hstmt,rc);

  assert(8 == my_print_resultset(hstmt));
}

/********************************************************
 * </pre>
      <content type="TEXT" name="snippet" u="36" v="1227" />
      <match u="1102" v="1102">main </match>
      <post u="1103" v="1122">routine						*
 *********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
  SQLHSTMT   hstmt;
  SQLINTEGER narg;

  /*
   *	show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="1085" v="1104">SQLCHAR*) "SELECT * FROM my_demo_param",
		     SQL_NTS);
  mystmt(hstmt,rc);

  assert(8 == my_print_resultset(hstmt));
}

/********************************************************
 * main routine						*
 *********************************************************/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="1227" />
      <match u="1105" v="1105">main(</match>
      <post u="1106" v="1125">int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
  SQLHSTMT   hstmt;
  SQLINTEGER narg;

  /*
   *	show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... hstmt,rc);

  assert(8 == my_print_resultset(hstmt));
}

/********************************************************
 * main routine						*
 *********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_cursor.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_cursor.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="135" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="1209" v="1228">rc = SQLExecDirect(hstmt, (SQLCHAR*) "SELECT * FROM my_demo_cursor",
		     SQL_NTS);
  mystmt(hstmt,rc);

  assert(3 == my_print_resultset(hstmt));
}

/********************************************************
 * </pre>
      <content type="TEXT" name="snippet" u="36" v="1351" />
      <match u="1229" v="1229">main </match>
      <post u="1230" v="1249">routine						*
 *********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
  SQLHSTMT   hstmt;
  SQLINTEGER narg;

  /*
   *	show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="1212" v="1231">SQLCHAR*) "SELECT * FROM my_demo_cursor",
		     SQL_NTS);
  mystmt(hstmt,rc);

  assert(3 == my_print_resultset(hstmt));
}

/********************************************************
 * main routine						*
 *********************************************************/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="1351" />
      <match u="1232" v="1232">main(</match>
      <post u="1233" v="1252">int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
  SQLHSTMT   hstmt;
  SQLINTEGER narg;

  /*
   *	show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... hstmt,rc);

  assert(3 == my_print_resultset(hstmt));
}

/********************************************************
 * main routine						*
 *********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_basics.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_basics.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="140" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="607" v="626">SQL_COMMIT);
  mycon(hdbc,rc);

  /* free the statement cursor */
  rc = SQLFreeStmt(hstmt, SQL_CLOSE);
  mystmt(hstmt,rc);

  printf(" success!!\n");
}


/********************************************************
 * </pre>
      <content type="TEXT" name="snippet" u="36" v="731" />
      <match u="627" v="627">main </match>
      <post u="628" v="647">routine						 *
 *********************************************************/

int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
  SQLHSTMT   hstmt;
  SQLINTEGER narg;

  /*
   *  show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="610" v="629">hdbc,rc);

  /* free the statement cursor */
  rc = SQLFreeStmt(hstmt, SQL_CLOSE);
  mystmt(hstmt,rc);

  printf(" success!!\n");
}


/********************************************************
 * main routine						 *
 *********************************************************/

int </pre>
      <content type="TEXT" name="snippet" u="36" v="731" />
      <match u="630" v="630">main(</match>
      <post u="631" v="650">int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
  SQLHSTMT   hstmt;
  SQLINTEGER narg;

  /*
   *  show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... SQL_CLOSE);
  mystmt(hstmt,rc);

  printf(" success!!\n");
}


/********************************************************
 * main routine						 *
 *********************************************************/

int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_connect.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_connect.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="141" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="188" v="207">how to connect to MySQL server   *
 *  using MySQL ODBC 3.51 driver					   *
 *									   *
 ***************************************************************************/

#include "my_utility.h" /* MyODBC 3.51 sample utility header */

/********************************************************
 * </pre>
      <content type="TEXT" name="snippet" u="36" v="443" />
      <match u="208" v="208">main </match>
      <post u="209" v="228">routine						*
 *********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
  SQLCHAR    server_name[30];
  SQLRETURN  rc;
  SQLINTEGER narg;

  /*
   *	show </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="191" v="210">to MySQL server   *
 *  using MySQL ODBC 3.51 driver					   *
 *									   *
 ***************************************************************************/

#include "my_utility.h" /* MyODBC 3.51 sample utility header */

/********************************************************
 * main routine						*
 *********************************************************/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="443" />
      <match u="211" v="211">main(</match>
      <post u="212" v="231">int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
  SQLCHAR    server_name[30];
  SQLRETURN  rc;
  SQLINTEGER narg;

  /*
   *	show the usage string </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... my_utility.h" /* MyODBC 3.51 sample utility header */

/********************************************************
 * main routine						*
 *********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_result.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_result.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="142" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="570" v="589">SQL_UNBIND);
  mystmt(hstmt,rc);

  /* free the statement cursor */
  rc = SQLFreeStmt(hstmt, SQL_CLOSE);
  mystmt(hstmt,rc);
  printf(" success!!\n");
}

/********************************************************
 * </pre>
      <content type="TEXT" name="snippet" u="36" v="692" />
      <match u="590" v="590">main </match>
      <post u="591" v="610">routine						*
 *********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
  SQLHSTMT   hstmt;
  SQLINTEGER narg;

  /*
   *	show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="573" v="592">hstmt,rc);

  /* free the statement cursor */
  rc = SQLFreeStmt(hstmt, SQL_CLOSE);
  mystmt(hstmt,rc);
  printf(" success!!\n");
}

/********************************************************
 * main routine						*
 *********************************************************/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="692" />
      <match u="593" v="593">main(</match>
      <post u="594" v="613">int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
  SQLHSTMT   hstmt;
  SQLINTEGER narg;

  /*
   *	show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... SQL_CLOSE);
  mystmt(hstmt,rc);
  printf(" success!!\n");
}

/********************************************************
 * main routine						*
 *********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV    henv;
  SQLHDBC    hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_tran.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/samples/my_tran.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="144" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="450" v="469">mystmt_err(hstmt,rc == SQL_NO_DATA_FOUND,rc);

  rc = SQLFreeStmt(hstmt,SQL_CLOSE);
  mystmt(hstmt,rc);

  printf(" success!!\n");
}

/********************************************************
 * </pre>
      <content type="TEXT" name="snippet" u="36" v="572" />
      <match u="470" v="470">main </match>
      <post u="471" v="490">routine						*
 *********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;

  /*
   *	show the usage string when </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="453" v="472">rc == SQL_NO_DATA_FOUND,rc);

  rc = SQLFreeStmt(hstmt,SQL_CLOSE);
  mystmt(hstmt,rc);

  printf(" success!!\n");
}

/********************************************************
 * main routine						*
 *********************************************************/
int </pre>
      <content type="TEXT" name="snippet" u="36" v="572" />
      <match u="473" v="473">main(</match>
      <post u="474" v="493">int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
  SQLHSTMT  hstmt;
  SQLINTEGER narg;

  /*
   *	show the usage string when the user asks </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... SQL_CLOSE);
  mystmt(hstmt,rc);

  printf(" success!!\n");
}

/********************************************************
 * main routine						*
 *********************************************************/
int main(int argc, char *argv[])
{
  SQLHENV   henv;
  SQLHDBC   hdbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/ltmain.sh"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/ltmain.sh/"
  graph-id-high-water="0" priority="0" vertex="0" i="145" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="11878" v="11897"><![CDATA[we can check
	  # whether they linked in statically or dynamically with ldd.
	  $rm conftest.c
	  cat > conftest.c &lt;&lt;EOF
	  int ]]></pre>
      <content type="TEXT" name="snippet" u="34" v="25051" />
      <match u="11898" v="11898">main() { </match>
      <post u="11899" v="11918">return 0; }
EOF
	  $rm conftest
	  $LTCC -o conftest conftest.c $deplibs
	  if test "$?" -eq 0 ; then
	    ldd_output=`ldd conftest`
	    </post>
    </solution>
    <solution rank="1" score="1">
      <pre u="18114" v="18133">name);
char * fnqualify(const char *path);
char * strendzap(char *str, const char *pat);
void lt_fatal (const char *message, ...);

int
</pre>
      <content type="TEXT" name="snippet" u="34" v="25051" />
      <match u="18134" v="18134">main (</match>
      <post u="18135" v="18154">int argc, char *argv[])
{
  char **newargz;
  int i;
  
  program_name = (char *) xstrdup ((char *) basename (argv[0]));
  newargz = XMALLOC(char *, argc+</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... rm conftest.c
	  cat > conftest.c &lt;&lt;EOF
	  int main() { return 0; }
EOF
	  $rm conftest
	  $LTCC -o conftest  ... pat);
void lt_fatal (const char *message, ...);

int
main (int argc, char *argv[])
{
  char **newargz;
  int i;
  
   ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/missing"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/missing/"
  graph-id-high-water="0" priority="0" vertex="0" i="157" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="822" v="841">esac
    fi
    if [ ! -f y.tab.h ]; then
	echo >y.tab.h
    fi
    if [ ! -f y.tab.c ]; then
	echo '</pre>
      <content type="TEXT" name="snippet" u="33" v="1369" />
      <match u="842" v="842">main() { </match>
      <post u="843" v="862"><![CDATA[return 0; }' >y.tab.c
    fi
    ;;

  lex|flex)
    echo 1>&amp;2 "\
WARNING: \`$1' is missing on your system.  You should ]]></post>
    </solution>
    <solution rank="1" score="1">
      <pre u="916" v="935">c/'`
	    if [ -f "$SRCFILE" ]; then
	         cp "$SRCFILE" lex.yy.c
	    fi
	  ;;
	esac
    fi
    if [ ! -f lex.yy.c ]; then
	echo '</pre>
      <content type="TEXT" name="snippet" u="33" v="1369" />
      <match u="936" v="936">main() { </match>
      <post u="937" v="956"><![CDATA[return 0; }' >lex.yy.c
    fi
    ;;

  help2man)
    echo 1>&amp;2 "\
WARNING: \`$1' is missing on your system.  You should only ]]></post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... fi
    if [ ! -f y.tab.c ]; then
	echo 'main() { return 0; }' >y.tab.c
    fi
    ;;

  lex|flex)
     ... fi
    if [ ! -f lex.yy.c ]; then
	echo 'main() { return 0; }' >lex.yy.c
    fi
    ;;

  help2man)
    echo  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/acinclude.m4"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/acinclude.m4/"
  graph-id-high-water="0" priority="0" vertex="0" i="192" la-score="0.1"
  vse-base-score="1.5"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="140" v="159"><![CDATA[cv_odbc_$1,
[
echo > conftest.c

for i in $odbc_headers
do
	echo "#include &lt;$i>" >> conftest.c
done

echo "int ]]></pre>
      <content type="TEXT" name="snippet" u="34" v="1989" />
      <match u="160" v="160">main(</match>
      <post u="161" v="180">void) { $1 x; return 0; }" >> conftest.c

if $CC -c $CFLAGS $CPPFLAGS conftest.c > /dev/null 2> /dev/null
then
	</post>
    </solution>
    <solution rank="1" score="1">
      <pre u="763" v="782"><![CDATA[config options.
dnl
dnl ---------------------------------------------------------

AC_DEFUN(QT_PROGRAM,
[
cat > conftest.$ac_ext &lt;&lt;EOF
#include &lt;qapplication.h>
#include &lt;qstringlist.h>

int ]]></pre>
      <content type="TEXT" name="snippet" u="34" v="1989" />
      <match u="783" v="783">main() 
{
    </match>
      <post u="784" v="803">QStringList *t = new QStringList();
    return 0;
}
EOF
])

dnl ---------------------------------------------------------
dnl 
dnl Macro: 
dnl     AC_PATH_QT_WITHOUT_X
dnl
dnl Arguments:
</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"><![CDATA[ ... echo "#include &lt;$i>" >> conftest.c
done

echo "int main(void) { $1 x; return 0; }" >> conftest.c

if $ ... EOF
#include &lt;qapplication.h>
#include &lt;qstringlist.h>

int main() 
{
    QStringList *t = new QStringList();
    return 0;
}
EOF
])

dnl ---------------------------------------------------------
 ... ]]></content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/db_test.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/test/db_test.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="2" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="72" v="91">sql_stmt ( SQLHDBC hdbc, SQLCHAR *stmtStr);
void db_odbc_error(SQLHENV henv, SQLHDBC hdbc, SQLHSTMT hstmt, const SQLCHAR* stmt);

int 
</pre>
      <content type="TEXT" name="snippet" u="36" v="810" />
      <match u="92" v="92">main(</match>
      <post u="93" v="112">int argc, char **argv)
{
  SQLCHAR    *szDsn= (SQLCHAR *)"myodbc3";
  SQLCHAR    *szUser= (SQLCHAR *)"venu";
  SQLCHAR    *szPassword= (SQLCHAR *)"venu";
	SQLRETURN  nArg, iResult = SQL_</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... SQLHDBC hdbc, SQLHSTMT hstmt, const SQLCHAR* stmt);

int 
main(int argc, char **argv)
{
  SQLCHAR    *szDsn= (SQLCHAR *)"myodbc3";
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/MYODBCConfig.pro"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/MYODBCConfig/MYODBCConfig.pro/"
  graph-id-high-water="0" priority="0" vertex="0" i="58" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="252" v="271">h \
                        ../setup/MYODBCSetupDataSourceTab3.h \
                        ../setup/MYODBCSetupDataSourceTab3a.h \
                        ../setup/MYODBCSetupDataSourceTab3b.h \
                        ../setup/MYODBCSetupDataSourceTab3c.h \
                        ../setup/MYODBCSetupDataSourceTab3d.h \
                        ../setup/MYODBCSetupLineEdit.h

SOURCES                 += \
                        </pre>
      <content type="TEXT" name="snippet" u="35" v="330" />
      <match u="272" v="272">main.</match>
      <post u="273" v="292">cpp \
                        ../setup/MYODBCSetupCheckBox.cpp \
                        ../setup/MYODBCSetupComboBox.cpp \
                        ../setup/MYODBCSetupComboBoxDatabases.cpp \
                        ../setup/MYODBCSetupConfigDSNAdd.c \
                        ../setup/MYODBCSetupConfigDSNEdit.c \
                        ../setup/MYODBCSetupConfigDSNRemove.c \
                        ../setup/</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... h \
                        ../setup/MYODBCSetupDataSourceTab3d.h \
                        ../setup/MYODBCSetupLineEdit.h

SOURCES                 += \
                        main.cpp \
                        ../setup/MYODBCSetupCheckBox.cpp \
                        ../setup/MYODBCSetupComboBox.cpp \
                        ../setup/ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/configure.in"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/configure.in/"
  graph-id-high-water="0" priority="0" vertex="0" i="153" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="909" v="928">CHECKING($1)
  OLD_CFLAGS="[$]CFLAGS"
  AC_CACHE_VAL(mysql_cv_option_$2,
  [
    CFLAGS="[$]OLD_CFLAGS $1"
    AC_TRY_RUN([int </pre>
      <content type="TEXT" name="snippet" u="34" v="2999" />
      <match u="929" v="929">main(){</match>
      <post u="930" v="949">exit(0);}],mysql_cv_option_$2=yes,mysql_cv_option_$2=no,mysql_cv_option_$2=no)
  ])
  CFLAGS="[$]OLD_CFLAGS"
  </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... CFLAGS="[$]OLD_CFLAGS $1"
    AC_TRY_RUN([int main(){exit(0);}],mysql_cv_option_$2=yes,mysql_ ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/dltest/dltest.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/dltest/dltest.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="162" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="143" v="162">n" \
"*      better test.                          *\n" \
"*                                            *\n" \
"*                                            *\n" \
"* Examples                                   *\n" \
"*                                            *\n" \
"*      dltest /usr/lib/libMy.so MyFunc       *\n" \
"*                                            *\n" \
"**********************************************\n\n";

int </pre>
      <content type="TEXT" name="snippet" u="35" v="287" />
      <match u="163" v="163">main( </match>
      <post u="164" v="183"><![CDATA[int argc, char *argv[] )
{
	void	*hDLL;
	void	(*pFunc)();
	const char	*pError;

	if ( argc &lt; 2  )
	{
		printf( szSyntax );
		exit( 1 );
	}

    /*
     * initialize libtool
     */

    ]]></post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... libMy.so MyFunc       *\n" \
"*                                            *\n" \
"**********************************************\n\n";

int main( int argc, char *argv[] )
{
	void	*hDLL;
	void	(*pFunc)();
	 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/myodbc3.h"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/myodbc3.h/"
  graph-id-high-water="0" priority="0" vertex="0" i="168" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="1263" v="1282">ard;
  LIST	   list;
} DESC;


/* Implementation descriptors */
typedef struct tagSTMT MY_STMT;
typedef struct impDESC
{
  MY_STMT *stmt;
  DESC	  *desc;
} IMPDESC;


/* </pre>
      <content type="TEXT" name="snippet" u="35" v="1488" />
      <match u="1283" v="1283">Main </match>
      <post u="1284" v="1303">statement handler */

typedef struct tagSTMT
{
  DBC FAR	*dbc;
  MYSQL_RES	*result;
  MYSQL_ROW	array,result_array,current_values;
  MYSQL_ROW	(*</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... struct impDESC
{
  MY_STMT *stmt;
  DESC	  *desc;
} IMPDESC;


/* Main statement handler */

typedef struct tagSTMT
{
  DBC FAR	*dbc;
   ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/dll.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/driver/dll.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="169" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="474" v="493">free(thousands_sep,MYF(0));
#ifdef NOT_YET_USED
   mysql_server_end();
#endif
   my_end(0);
 }
}

/*
  @type    : myodbc3 internal
  @purpose : </pre>
      <content type="TEXT" name="snippet" u="35" v="733" />
      <match u="494" v="494">main </match>
      <post u="495" v="514">entry point
*/

#ifdef _WIN32
static int inited=0,threads=0;
HINSTANCE NEAR s_hModule; /* Saved module handle */
int APIENTRY LibMain(</post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... endif
   my_end(0);
 }
}

/*
  @type    : myodbc3 internal
  @purpose : main entry point
*/

#ifdef _WIN32
static int inited=0, ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/README.win"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/README.win/"
  graph-id-high-water="0" priority="0" vertex="0" i="191" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="113" v="132">or MS
Visual C/C++ v7 (.NET). Other compilers may work as well.

Source Code
-----------

The source code is the </pre>
      <content type="TEXT" name="snippet" u="34" v="706" />
      <match u="133" v="133">main </match>
      <post u="134" v="153">thing. You can get it from the bk
source repository if you want the 'bleeding edge' code but most
people </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... well.

Source Code
-----------

The source code is the main thing. You can get it from the bk
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/README.unix"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/README.unix/"
  graph-id-high-water="0" priority="0" vertex="0" i="193" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="239" v="258">example. But a common compiler across all platforms
is the GNU tool set.

Source Code
-----------

The source code is the </pre>
      <content type="TEXT" name="snippet" u="34" v="433" />
      <match u="259" v="259">main </match>
      <post u="260" v="279">thing. You can get it from the bk
source repository if you want the 'bleeding edge' code but most
people </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... set.

Source Code
-----------

The source code is the main thing. You can get it from the bk
 ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/ChangeLog"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/ChangeLog/"
  graph-id-high-water="0" priority="0" vertex="0" i="194" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="1631" v="1650">of 3.51.02 with the following bug fixes or 
improvements:

-- Fix to SQLDriverConnect to return  correct output 
   string. This is the </pre>
      <content type="TEXT" name="snippet" u="33" v="2195" />
      <match u="1651" v="1651">main </match>
      <post u="1652" v="1671">fix for 'Reserved error 
   (-7778)' from all Windows ODBC applications. 
   
-- Fix to hang from unixODBC when there is a exception. 
   </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... to return  correct output 
   string. This is the main fix for 'Reserved error 
   (-7778)' from all Windows  ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/myodbcinst/myodbcinst.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/myodbcinst/myodbcinst.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="198" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="994" v="1013">This is the entry point to this program.
            
    \note   More features/args will probably be added in the future.
*/
int </pre>
      <content type="TEXT" name="snippet" u="35" v="3132" />
      <match u="1014" v="1014">main( </match>
      <post u="1015" v="1034"><![CDATA[int argc, char *argv[] )
{
    int nArg;
    int nReturn;

    /*
        help; possible newbie
    */
    if ( argc &lt;= 1 )
    {
        printf( szSyntax );
        exit( 1 );
    }

    /* 
        parse args 
    */
    ]]></post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... will probably be added in the future.
*/
int main( int argc, char *argv[] )
{
    int nArg;
    int nReturn;

    /*
         ... </content>
</document>
<document
  url="file://///VIV_SAMBA_LINUX_SERVER/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/imyodbc/imyodbc.c"
  filetypes="zip text " ct="text/plain"
  vse-key="smb://VIV_SAMBA_LINUX_SERVER:80/VIV_SAMBA_LINUX_SHARE/test_data/compression/TAR/MyODBC-3.51.11.tar#MyODBC-3.51.11/imyodbc/imyodbc.c/"
  graph-id-high-water="0" priority="0" vertex="0" i="201" la-score="0.1"
  vse-base-score="1"
>
  <content action="none" output-action="none" name="vse-debug-content">
    <solution rank="0" score="1">
      <pre u="226" v="245">locale.h>
    #endif 
#endif

int     bDriverConnect = 0;
int     bVerbose       = 0;
int     nUserWidth     = 0;
SQLHENV hEnv           = 0;
SQLHDBC hDbc           = 0;

int </pre>
      <content type="TEXT" name="snippet" u="35" v="2249" />
      <match u="246" v="246">main( </match>
      <post u="247" v="266">int argc, char *argv[] )
{
    int     nArg, count;
    int     bHTMLTable                  = 0;
    int     bBatch                      = 0;
    int     cDelimiter                  = 0;
    int     bColumnNames                = 0;
    char    </post>
    </solution>
  </content>
  <content name="snippet" action="cluster" output-action="bold"> ... 0;
SQLHENV hEnv           = 0;
SQLHDBC hDbc           = 0;

int main( int argc, char *argv[] )
{
    int     nArg, count;
    int      ... </content>
</document>
<retrieval-performance n-tau="209" n-rho="106" n-uat="0" n-ohr="0"
  occr-reads="175663" block-reads="413" seeks="0" cache-hits="413" cache-misses="0"
>
  <query-performance what="doc-text" n-tau="99" n-rho="0" n-uat="0" n-ohr="0"
    occr-reads="1574" block-reads="0" seeks="0" cache-hits="0" cache-misses="0"
  >
    <query-performance what="not-within" n-tau="99" n-rho="0" n-uat="0" n-ohr="0"
      occr-reads="1574" block-reads="0" seeks="0" cache-hits="0" cache-misses="0"
    >
      <query-performance what="0:doc#" n-blocks="1" n-tau="99" n-rho="0"
        n-uat="0" n-ohr="0" occr-reads="1574" block-reads="0" seeks="0" cache-hits="0"
        cache-misses="0"
      />
      <query-performance what="0:del#" n-blocks="0" n-tau="0" n-rho="4" n-uat="0"
        n-ohr="0" occr-reads="0" block-reads="0" seeks="0" cache-hits="0"
        cache-misses="0"
      />
    </query-performance>
  </query-performance>
  <query-performance what="del" n-tau="0" n-rho="0" n-uat="0" n-ohr="0"
    occr-reads="0" block-reads="0" seeks="0" cache-hits="0" cache-misses="0"
  >
    <query-performance what="0:del#" n-blocks="1" n-tau="0" n-rho="0" n-uat="0"
      n-ohr="0" occr-reads="0" block-reads="0" seeks="0" cache-hits="0"
      cache-misses="0"
    />
  </query-performance>
  <query-performance what="text" n-tau="0" n-rho="0" n-uat="0" n-ohr="0"
    occr-reads="160175" block-reads="413" seeks="0" cache-hits="413" cache-misses="0"
  >
    <query-performance what="3:" n-blocks="701" n-tau="0" n-rho="0" n-uat="0"
      n-ohr="0" occr-reads="160175" block-reads="413" seeks="0" cache-hits="413"
      cache-misses="0"
    />
  </query-performance>
  <query-performance what="output" n-tau="4" n-rho="0" n-uat="0" n-ohr="0"
    occr-reads="0" block-reads="0" seeks="0" cache-hits="0" cache-misses="0"
  >
    <query-performance what="not-within" n-tau="4" n-rho="0" n-uat="0" n-ohr="0"
      occr-reads="0" block-reads="0" seeks="0" cache-hits="0" cache-misses="0"
    >
      <query-performance what="0:title" n-blocks="0" n-tau="4" n-rho="0"
        n-uat="0" n-ohr="0" occr-reads="0" block-reads="0" seeks="0" cache-hits="0"
        cache-misses="0"
      />
      <query-performance what="0:del#" n-blocks="1" n-tau="0" n-rho="0" n-uat="0"
        n-ohr="0" occr-reads="0" block-reads="0" seeks="0" cache-hits="0"
        cache-misses="0"
      />
    </query-performance>
  </query-performance>
  <query-performance what="summarize" n-tau="52" n-rho="52" n-uat="0" n-ohr="0"
    occr-reads="1548" block-reads="0" seeks="0" cache-hits="0" cache-misses="0"
  >
    <query-performance what="not-within" n-tau="52" n-rho="52" n-uat="0"
      n-ohr="0" occr-reads="1548" block-reads="0" seeks="0" cache-hits="0"
      cache-misses="0"
    >
      <query-performance what="0:snippet" n-blocks="1" n-tau="52" n-rho="52"
        n-uat="0" n-ohr="0" occr-reads="1548" block-reads="0" seeks="0" cache-hits="0"
        cache-misses="0"
      />
      <query-performance what="0:del#" n-blocks="0" n-tau="0" n-rho="4" n-uat="0"
        n-ohr="0" occr-reads="0" block-reads="0" seeks="0" cache-hits="0"
        cache-misses="0"
      />
    </query-performance>
  </query-performance>
  <query-performance what="def-search" />
  <query-performance what="content" n-tau="0" n-rho="0" n-uat="0" n-ohr="0"
    occr-reads="0" block-reads="0" seeks="0" cache-hits="0" cache-misses="0"
  >
    <query-performance what="document" n-tau="0" n-rho="0" n-uat="0" n-ohr="0"
      occr-reads="0" block-reads="0" seeks="0" cache-hits="0" cache-misses="0"
    />
  </query-performance>
  <query-performance what="really-content" n-tau="54" n-rho="54" n-uat="0"
    n-ohr="0" occr-reads="12366" block-reads="0" seeks="0" cache-hits="0"
    cache-misses="0"
  >
    <query-performance what="not-within" n-tau="54" n-rho="54" n-uat="0"
      n-ohr="0" occr-reads="12366" block-reads="0" seeks="0" cache-hits="0"
      cache-misses="0"
    >
      <query-performance what="0:" n-blocks="1" n-tau="54" n-rho="54" n-uat="0"
        n-ohr="0" occr-reads="12366" block-reads="0" seeks="0" cache-hits="0"
        cache-misses="0"
      />
      <query-performance what="0:del#" n-blocks="0" n-tau="0" n-rho="4" n-uat="0"
        n-ohr="0" occr-reads="0" block-reads="0" seeks="0" cache-hits="0"
        cache-misses="0"
      />
    </query-performance>
  </query-performance>
</retrieval-performance>
<query-performance what="not-within" n-tau="199" n-rho="0" n-uat="0" n-ohr="0"
  occr-reads="200" block-reads="2" seeks="1" cache-hits="1" cache-misses="1"
>
  <query-performance what="1:main" n-blocks="1" n-tau="199" n-rho="0" n-uat="0"
    n-ohr="0" occr-reads="200" block-reads="1" seeks="1" cache-hits="0"
    cache-misses="1"
  />
  <query-performance what="0:del#" n-blocks="0" n-tau="0" n-rho="1" n-uat="0"
    n-ohr="0" occr-reads="0" block-reads="1" seeks="0" cache-hits="1"
    cache-misses="0"
  />
</query-performance>
</scope>